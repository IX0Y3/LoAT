; ./prepared/seahorn/./sv_comp_flat_small/recursive/Addition03_false-unreach-call.c.flat_000.smt2
(set-logic HORN)


(declare-fun |main_1| ( Int Int Int Int Int ) Bool)

(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (v_4 Int) ) 
    (=>
      (and
        (and true (= 0 v_4))
      )
      (main_1 v_4 A B C D)
    )
  )
)
(assert
  (forall ( (A Bool) (B Int) (C Int) (D Int) (E Int) (F Bool) (G Int) (H Int) (I Bool) (J Bool) (K Bool) (L Bool) (M Int) (N Int) (O Int) (P Int) (v_16 Int) (v_17 Int) ) 
    (=>
      (and
        (main_1 v_16 B C D E)
        (and (= 0 v_16)
     (or (= P N) (not I) (not L))
     (or (= O M) (not I) (not L))
     (or (= N G) (not I) (not L))
     (or (= M H) (not I) (not L))
     (or (not A) (not F) (not J))
     (or (not K) (and I L))
     (or (not I) (and F J))
     (= K true)
     (= A (= H 0))
     (= 1 v_17))
      )
      (main_1 v_17 G H O P)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Int) (H Int) (I Int) (J Int) (K Bool) (L Int) (M Int) (N Bool) (O Bool) (P Int) (Q Int) (R Bool) (S Bool) (v_19 Int) (v_20 Int) ) 
    (=>
      (and
        (main_1 v_19 G H I J)
        (let ((a!1 (or (not N) (not (= (<= 100 M) B))))
      (a!2 (or (not N) (not (= (<= 100 L) A))))
      (a!3 (or (not N) (not (= (<= Q 199) D)))))
  (and (= 0 v_19)
       (or (not O) (not K) (= Q P))
       (or (not O) (not K) (= P L))
       (or F (not O) (not K))
       (or (not R) (and N S))
       a!1
       a!2
       a!3
       (or (not N) (= E (or D C)))
       (or (not N) (= C (or A B)))
       (or (not N) (and O K))
       (or (not N) (not E))
       (= R true)
       (= F (= M 0))
       (= 2 v_20)))
      )
      (main_1 v_20 L M I J)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Int) (D Int) (E Int) (F Int) (G Bool) (H Int) (I Int) (J Int) (K Int) (L Bool) (M Bool) (N Int) (O Int) (P Bool) (Q Bool) (R Int) (S Int) (T Bool) (U Bool) (V Bool) (W Int) (X Int) (Y Int) (Z Int) (A1 Int) (B1 Int) (C1 Bool) (D1 Bool) (v_30 Int) (v_31 Int) ) 
    (=>
      (and
        (main_1 v_30 C D E F)
        (and (= 1 v_30)
     (or B (not Q) (not G))
     (or (not P) (= Z S) (not V))
     (or (not P) (= Y R) (not V))
     (or (not P) (= B1 Z) (not V))
     (or (not P) (= A1 Y) (not V))
     (or (not B) (not G) (not M))
     (or (= X O) (not L) (not U))
     (or (= W N) (not L) (not U))
     (or (= B1 X) (not L) (not U))
     (or (= A1 W) (not L) (not U))
     (or (and L U) (and P V) (not T))
     (or (= K I) (not T) (not D1))
     (or (= J H) (not T) (not D1))
     (or (= I A1) (not T) (not D1))
     (or (= H B1) (not T) (not D1))
     (or (not A) (not T) (not D1))
     (or (not C1) (and T D1))
     (or (not P) (= S (+ (- 1) E)))
     (or (not P) (= R (+ 1 F)))
     (or (not P) (and Q G))
     (or (not L) (= O (+ 1 E)))
     (or (not L) (= N (+ (- 1) F)))
     (or (not L) (and M G))
     (or (not T) (= A (= B1 0)))
     (= C1 true)
     (not (= (<= E 0) B))
     (= 1 v_31))
      )
      (main_1 v_31 C D J K)
    )
  )
)
(assert
  (forall ( (A Bool) (B Bool) (C Bool) (D Bool) (E Bool) (F Bool) (G Int) (H Bool) (I Int) (J Int) (K Int) (L Int) (M Bool) (N Bool) (O Int) (P Int) (Q Bool) (R Bool) (S Bool) (T Bool) (U Int) (V Int) (W Bool) (X Bool) (Y Int) (Z Int) (A1 Bool) (B1 Bool) (C1 Bool) (D1 Int) (E1 Int) (F1 Int) (G1 Int) (H1 Int) (I1 Int) (J1 Bool) (K1 Bool) (L1 Int) (M1 Bool) (v_39 Int) (v_40 Int) ) 
    (=>
      (and
        (main_1 v_39 I J K L)
        (let ((a!1 (or (not N) (not (= (<= 100 J) B))))
      (a!2 (or (not N) (not (= (<= 100 I) A))))
      (a!3 (or (not N) (not (= (<= P 199) D)))))
  (and (= 1 v_39)
       (or (not A1) (and C1 W) (and S B1))
       (or (= G L1) (not A1) (not K1))
       (or (= L1 H1) (not A1) (not K1))
       (or (= I1 E1) (not S) (not B1))
       (or (= H1 D1) (not S) (not B1))
       (or (= E1 V) (not S) (not B1))
       (or (= D1 U) (not S) (not B1))
       (or (not H) (not M) (not T))
       (or F (not A1) (not K1))
       (or (not M1) (not J1) (= P O))
       (or (not M1) (not J1) (= O G))
       (or (not C1) (not W) (= I1 G1))
       (or (not C1) (not W) (= H1 F1))
       (or (not C1) (not W) (= G1 Z))
       (or (not C1) (not W) (= F1 Y))
       (or (not X) H (not M))
       (or (not J1) (and A1 K1))
       (or (not A1) (= F (= I1 0)))
       (or (not S) (= V (+ 1 K)))
       (or (not S) (= U (+ (- 1) L)))
       (or (not S) (and M T))
       (or (not Q) (and N R))
       a!1
       a!2
       a!3
       (or (not N) (= E (or C D)))
       (or (not N) (= C (or A B)))
       (or (not N) (and M1 J1))
       (or (not E) (not N))
       (or (not W) (= Z (+ (- 1) K)))
       (or (not W) (= Y (+ 1 L)))
       (or (not W) (and X M))
       (= Q true)
       (not (= (<= K 0) H))
       (= 2 v_40)))
      )
      (main_1 v_40 I J K L)
    )
  )
)
(assert
  (forall ( (A Int) (B Int) (C Int) (D Int) (v_4 Int) ) 
    (=>
      (and
        (main_1 v_4 A B C D)
        (= 2 v_4)
      )
      false
    )
  )
)

(check-sat)
(exit)
