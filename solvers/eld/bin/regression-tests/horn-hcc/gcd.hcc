
int a, b;

int start_a = 0;
int start_b = 0;

int finished_a = 0;
int finished_b = 0;

void __VERIFIER_atomic_dec_a()
{
  atomic {
  if(a>b)
    a=a-b;
  }
}

void __VERIFIER_atomic_dec_b()
{
  atomic {
  if(b>a)
    b=b-a;
  }
}

thread A {
  assume(start_a);

  while(a!=b)
  {
    __VERIFIER_atomic_dec_a();
  }

  finished_a = 1;

//  return 0;
}

thread B {
  assume(start_b);

  while(a!=b)
  {
    __VERIFIER_atomic_dec_b();
  }

  finished_b = 1;

//  return 0;
}

int start(int a_in, int b_in)
{
  a=a_in;
  b=b_in;

  start_a = 1;
  start_b = 1;

  assume(finished_a && finished_b);

  return a;
}

void check_gcd(int a_in, int b_in, int gcd)
{
/*
  int guessed_gcd;

  assume(a_in%guessed_gcd==0);
  assume(b_in%guessed_gcd==0);
  assume(guessed_gcd>1);

  assert(a_in%gcd==0);
  assert(b_in%gcd==0);

  assert(gcd>=guessed_gcd);
*/
  assert(a == b && gcd > 0 && a_in >= gcd && b_in >= gcd);
}

int main()
{

  int a_in;
  int b_in;

  assume(a_in>0);
  assume(b_in>0);

  check_gcd(a_in, b_in, start(a_in, b_in));

  return 0;
}
