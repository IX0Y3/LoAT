Trying to load file: n-5.koat

Initial Control flow graph problem:
  Start location: f15
      3: f8 -> f8 : A'=1+A, [ B>=1+A && B>=E ], cost: 1
      0: f8 -> f32 : C'=free, [ A>=B ], cost: 1
      7: f8 -> f1 : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B ], cost: 1
      1: f15 -> f8 : D'=free_1, [], cost: 1
      2: f300 -> f8 : A'=1+A, [ B>=E ], cost: 1
      9: f300 -> f1 : C'=free_18, F'=free_19, G'=free_17, H'=0, J'=0, K'=0, [ E>=1+B ], cost: 1
      4: f13 -> f1 : C'=free_3, F'=free_4, G'=free_2, H'=0, Q'=-2, J'=0, K'=0, [], cost: 1
     11: f1 -> f300 : B'=1+B, C'=free_22, F'=free_23, H'=1, J'=1, K'=1, [ E>=1+B && M>=5 ], cost: 1
      8: f1 -> f1 : C'=free_15, F'=free_16, G'=free_14, H'=0, J'=0, K'=0, [ E>=1+B && 4>=M ], cost: 1
     10: f12 -> f300 : B'=1+B, C'=free_20, F'=free_21, H'=1, J'=1, K'=1, [ Q>=5 ], cost: 1
      5: f12 -> f1 : C'=free_6, F'=free_7, G'=free_5, H'=0, J'=0, K'=0, L'=-1+Q, [ 4>=Q ], cost: 1
      6: f10 -> f1 : C'=free_9, F'=free_10, G'=free_8, H'=0, J'=0, K'=0, M'=-2, [], cost: 1


Simplified the transitions:
  Start location: f15
      3: f8 -> f8 : A'=1+A, [ B>=1+A && B>=E ], cost: 1
      7: f8 -> f1 : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B ], cost: 1
      1: f15 -> f8 : D'=free_1, [], cost: 1
      2: f300 -> f8 : A'=1+A, [ B>=E ], cost: 1
      9: f300 -> f1 : C'=free_18, F'=free_19, G'=free_17, H'=0, J'=0, K'=0, [ E>=1+B ], cost: 1
     11: f1 -> f300 : B'=1+B, C'=free_22, F'=free_23, H'=1, J'=1, K'=1, [ E>=1+B && M>=5 ], cost: 1
      8: f1 -> f1 : C'=free_15, F'=free_16, G'=free_14, H'=0, J'=0, K'=0, [ E>=1+B && 4>=M ], cost: 1


Try instantiation
  Start location: f15
     12: f8 -> f8 : A'=B, [ B>=1+A && B>=E ], cost: B-A
      7: f8 -> f1 : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B ], cost: 1
      1: f15 -> f8 : D'=free_1, [], cost: 1
      2: f300 -> f8 : A'=1+A, [ B>=E ], cost: 1
      9: f300 -> f1 : C'=free_18, F'=free_19, G'=free_17, H'=0, J'=0, K'=0, [ E>=1+B ], cost: 1
     11: f1 -> f300 : B'=1+B, C'=free_22, F'=free_23, H'=1, J'=1, K'=1, [ E>=1+B && M>=5 ], cost: 1
      8: f1 -> f1 : C'=free_15, F'=free_16, G'=free_14, H'=0, J'=0, K'=0, [ E>=1+B && 4>=M ], cost: 1

Eliminating 1 self-loops for location f8
  Removing the self-loops: 12.
Adding an epsilon transition (to model nonexecution of the loops): 14.

Try instantiation
  Start location: f15
     13: f8 -> [8] : A'=B, [ B>=1+A && B>=E ], cost: B-A
     14: f8 -> [8] : [], cost: 0
      1: f15 -> f8 : D'=free_1, [], cost: 1
      2: f300 -> f8 : A'=1+A, [ B>=E ], cost: 1
      9: f300 -> f1 : C'=free_18, F'=free_19, G'=free_17, H'=0, J'=0, K'=0, [ E>=1+B ], cost: 1
     11: f1 -> f300 : B'=1+B, C'=free_22, F'=free_23, H'=1, J'=1, K'=1, [ E>=1+B && M>=5 ], cost: 1
     15: f1 -> f1 : [ E>=1+B && 4>=M ], cost: INF
      7: [8] -> f1 : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B ], cost: 1

Eliminating 1 self-loops for location f1
  Removing the self-loops: 15.

Removed all Self-loops using metering functions (where possible):
  Start location: f15
     13: f8 -> [8] : A'=B, [ B>=1+A && B>=E ], cost: B-A
     14: f8 -> [8] : [], cost: 0
      1: f15 -> f8 : D'=free_1, [], cost: 1
      2: f300 -> f8 : A'=1+A, [ B>=E ], cost: 1
      9: f300 -> f1 : C'=free_18, F'=free_19, G'=free_17, H'=0, J'=0, K'=0, [ E>=1+B ], cost: 1
     16: f1 -> [9] : [ E>=1+B && 4>=M ], cost: INF
      7: [8] -> f1 : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B ], cost: 1
     11: [9] -> f300 : B'=1+B, C'=free_22, F'=free_23, H'=1, J'=1, K'=1, [ E>=1+B && M>=5 ], cost: 1


Applied chaining over branches and pruning:
  Start location: f15
     18: f8 -> f1 : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B ], cost: 1
     17: f8 -> [10] : A'=B, [ B>=1+A && B>=E ], cost: B-A
      1: f15 -> f8 : D'=free_1, [], cost: 1
     19: f1 -> [11] : [ E>=1+B && 4>=M ], cost: INF


Applied simple chaining:
  Start location: f15
     17: f8 -> [10] : A'=B, [ B>=1+A && B>=E ], cost: B-A
     18: f8 -> [11] : C'=free_12, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B && E>=1+B && 4>=M ], cost: INF
      1: f15 -> f8 : D'=free_1, [], cost: 1


Applied chaining over branches and pruning:
  Start location: f15
     20: f15 -> [10] : A'=B, D'=free_1, [ B>=1+A && B>=E ], cost: 1+B-A
     21: f15 -> [11] : C'=free_12, D'=free_1, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B && E>=1+B && 4>=M ], cost: INF


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f15
     20: f15 -> [10] : A'=B, D'=free_1, [ B>=1+A && B>=E ], cost: 1+B-A
     21: f15 -> [11] : C'=free_12, D'=free_1, F'=free_13, G'=free_11, H'=0, J'=0, K'=0, [ B>=1+A && E>=1+B && E>=1+B && 4>=M ], cost: INF


Computing complexity for remaining 2 transitions.

  Found configuration with infinitely models for cost: 1+B-A
  and guard: B>=1+A && B>=E:
  E: Pos, B: Pos, A: Pos, where: B > E B > A

Found new complexity n^1, because: Found infinity configuration.

Found new complexity INF, because: INF sat.


The final runtime is determined by this resulting transition:
  Final Guard: B>=1+A && E>=1+B && E>=1+B && 4>=M
  Final Cost:  INF

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: INF
  Complexity value: INF

WORST_CASE(INF,?)
