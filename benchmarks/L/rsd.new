Trying to load file: rsd.koat

Initial Control flow graph problem:
  Start location: start0
      0: start -> stop : [ 0>=1+A && B==C && D==A && E==F && G==H ], cost: 1
      1: start -> lbl82 : E'=2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      2: start -> lbl121 : B'=2*D, E'=-1+2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      3: lbl82 -> stop : [ E>=A && 2*A>=E && D==A && 1+G==A ], cost: 1
      4: lbl82 -> lbl82 : G'=-1+G, [ G>=A && E>=1+G && 2*A>=E && 1+G>=A && D==A ], cost: 1
      5: lbl82 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && 1+G>=A && D==A ], cost: 1
      6: lbl121 -> stop : [ A>=1+E && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      7: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      8: lbl121 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      9: start0 -> start : B'=C, D'=A, E'=F, G'=H, [], cost: 1


Simplified the transitions:
  Start location: start0
      1: start -> lbl82 : E'=2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      2: start -> lbl121 : B'=2*D, E'=-1+2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      4: lbl82 -> lbl82 : G'=-1+G, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
      5: lbl82 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
      7: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      8: lbl121 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      9: start0 -> start : B'=C, D'=A, E'=F, G'=H, [], cost: 1


Try instantiation
  Start location: start0
      1: start -> lbl82 : E'=2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      2: start -> lbl121 : B'=2*D, E'=-1+2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
     10: lbl82 -> lbl82 : G'=-1+A, [ G>=A && E>=1+G && 2*A>=E && D<=A && D>=A ], cost: 1+G-A
      5: lbl82 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
      7: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      8: lbl121 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
      9: start0 -> start : B'=C, D'=A, E'=F, G'=H, [], cost: 1

Eliminating 1 self-loops for location lbl82
  Removing the self-loops: 10.
Adding an epsilon transition (to model nonexecution of the loops): 12.

Try instantiation
  Start location: start0
      1: start -> lbl82 : E'=2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      2: start -> lbl121 : B'=2*D, E'=-1+2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
     11: lbl82 -> [5] : G'=-1+A, [ G>=A && E>=1+G && 2*A>=E && -A+D==0 ], cost: 1+G-A
     12: lbl82 -> [5] : [], cost: 0
      7: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
     13: lbl121 -> lbl121 : B'=A, E'=-1+A, G'=-1+A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G<=E && G>=E && A>=A && D<=A && D>=A ], cost: 1-A+E
     14: lbl121 -> lbl121 : B'=1+A, E'=A, G'=A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G<=E && G>=E && 2*A>=2+A && D<=A && 1+A>=1+A && D>=A ], cost: -A+E
     15: lbl121 -> lbl121 : B'=-1+B, E'=-2+B, G'=-2+B, [ 2*A>=1+E && E>=-1+B && G<=E && G>=E && B>=1+A && B>=A && D<=A && -1+B>=-1+B && D>=A ], cost: 2-B+E
     16: lbl121 -> lbl121 : B'=G, E'=-1+G, G'=-1+G, [ B>=A && E>=-1+B && G<=E && G>=E && G>=A && 2*A>=1+G && D<=A && G>=G && D>=A ], cost: 1-G+E
     17: lbl121 -> lbl121 : B'=1+E, E'=E, G'=E, [ E>=A && B>=A && E>=-1+B && G<=E && G>=E && 2*A>=2+E && D<=A && 1+E>=1+E && D>=A ], cost: 0
      9: start0 -> start : B'=C, D'=A, E'=F, G'=H, [], cost: 1
      5: [5] -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1

Eliminating 5 self-loops for location lbl121
  Self-Loop 14 has unbounded runtime, resulting in the new transition 19.
  Self-Loop 15 has the metering function: B-A, resulting in the new transition 20.
  Self-Loop 16 has the metering function: 1+G-A, resulting in the new transition 21.
  Self-Loop 17 has unbounded runtime, resulting in the new transition 22.
  Removing the self-loops: 13 14 15 16 17.
Adding an epsilon transition (to model nonexecution of the loops): 23.

Removed all Self-loops using metering functions (where possible):
  Start location: start0
      1: start -> lbl82 : E'=2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
      2: start -> lbl121 : B'=2*D, E'=-1+2*D, G'=-1+2*D, [ A>=0 && B==C && D==A && E==F && G==H ], cost: 1
     11: lbl82 -> [5] : G'=-1+A, [ G>=A && E>=1+G && 2*A>=E && -A+D==0 ], cost: 1+G-A
     12: lbl82 -> [5] : [], cost: 0
     18: lbl121 -> [6] : B'=A, E'=-1+A, G'=-1+A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && -A+D==0 ], cost: 1-A+E
     19: lbl121 -> [6] : [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && 2*A>=2+A && -A+D==0 ], cost: INF
     20: lbl121 -> [6] : B'=A, E'=-1+A, G'=-1+A, [ 2*A>=1+E && E>=-1+B && G-E==0 && B>=1+A && -A+D==0 ], cost: B-A
     21: lbl121 -> [6] : B'=A, E'=-1+A, G'=-1+A, [ B>=A && E>=-1+B && G-E==0 && G>=A && 2*A>=1+G && -A+D==0 ], cost: 1+G-A
     22: lbl121 -> [6] : [ E>=A && B>=A && E>=-1+B && G-E==0 && 2*A>=2+E && -A+D==0 ], cost: INF
     23: lbl121 -> [6] : [], cost: 0
      9: start0 -> start : B'=C, D'=A, E'=F, G'=H, [], cost: 1
      5: [5] -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
      7: [6] -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1


Applied chaining over branches and pruning:
  Start location: start0
     27: lbl82 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
     26: lbl82 -> [7] : G'=-1+A, [ G>=A && E>=1+G && 2*A>=E && -A+D==0 ], cost: 1+G-A
     29: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && 2*A>=2+A && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     32: lbl121 -> lbl82 : G'=-1+G, [ E>=A && B>=A && E>=-1+B && G-E==0 && 2*A>=2+E && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     33: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
     28: lbl121 -> [8] : B'=A, E'=-1+A, G'=-1+A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && -A+D==0 ], cost: 1-A+E
     30: lbl121 -> [9] : B'=A, E'=-1+A, G'=-1+A, [ 2*A>=1+E && E>=-1+B && G-E==0 && B>=1+A && -A+D==0 ], cost: B-A
     31: lbl121 -> [10] : B'=A, E'=-1+A, G'=-1+A, [ B>=A && E>=-1+B && G-E==0 && G>=A && 2*A>=1+G && -A+D==0 ], cost: 1+G-A
     24: start0 -> lbl82 : B'=C, D'=A, E'=2*A, G'=-1+2*A, [ A>=0 && C==C && A==A && F==F && H==H ], cost: 2
     25: start0 -> lbl121 : B'=2*A, D'=A, E'=-1+2*A, G'=-1+2*A, [ A>=0 && C==C && A==A && F==F && H==H ], cost: 2


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start0
     27: lbl82 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
     26: lbl82 -> [7] : G'=-1+A, [ G>=A && E>=1+G && 2*A>=E && -A+D==0 ], cost: 1+G-A
     29: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && 2*A>=2+A && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     32: lbl121 -> lbl82 : G'=-1+G, [ E>=A && B>=A && E>=-1+B && G-E==0 && 2*A>=2+E && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     33: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: 1
     28: lbl121 -> [8] : B'=A, E'=-1+A, G'=-1+A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && -A+D==0 ], cost: 1-A+E
     30: lbl121 -> [9] : B'=A, E'=-1+A, G'=-1+A, [ 2*A>=1+E && E>=-1+B && G-E==0 && B>=1+A && -A+D==0 ], cost: B-A
     31: lbl121 -> [10] : B'=A, E'=-1+A, G'=-1+A, [ B>=A && E>=-1+B && G-E==0 && G>=A && 2*A>=1+G && -A+D==0 ], cost: 1+G-A
     24: start0 -> lbl82 : B'=C, D'=A, E'=2*A, G'=-1+2*A, [ A>=0 && C==C && A==A && F==F && H==H ], cost: 2
     25: start0 -> lbl121 : B'=2*A, D'=A, E'=-1+2*A, G'=-1+2*A, [ A>=0 && C==C && A==A && F==F && H==H ], cost: 2

This is only a partial result (probably due to a timeout), trying to find max complexity

Removed transitions with const cost
  Start location: start0
     27: lbl82 -> lbl121 : B'=G, E'=-1+E, G'=-1+E, [ G>=A && E>=1+G && 2*A>=E && D==A ], cost: 1
     26: lbl82 -> [7] : G'=-1+A, [ G>=A && E>=1+G && 2*A>=E && -A+D==0 ], cost: 1+G-A
     29: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && 2*A>=2+A && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     32: lbl121 -> lbl82 : G'=-1+G, [ E>=A && B>=A && E>=-1+B && G-E==0 && 2*A>=2+E && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     28: lbl121 -> [8] : B'=A, E'=-1+A, G'=-1+A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && -A+D==0 ], cost: 1-A+E
     30: lbl121 -> [9] : B'=A, E'=-1+A, G'=-1+A, [ 2*A>=1+E && E>=-1+B && G-E==0 && B>=1+A && -A+D==0 ], cost: B-A
     31: lbl121 -> [10] : B'=A, E'=-1+A, G'=-1+A, [ B>=A && E>=-1+B && G-E==0 && G>=A && 2*A>=1+G && -A+D==0 ], cost: 1+G-A
     24: start0 -> lbl82 : B'=C, D'=A, E'=2*A, G'=-1+2*A, [ A>=0 && C==C && A==A && F==F && H==H ], cost: 2

Performed chaining from the start location:
  Start location: start0
     29: lbl121 -> lbl82 : G'=-1+G, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && 2*A>=2+A && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     32: lbl121 -> lbl82 : G'=-1+G, [ E>=A && B>=A && E>=-1+B && G-E==0 && 2*A>=2+E && -A+D==0 && E>=A && 2*A>=1+E && B>=A && 1+E>=B && G==E && D==A ], cost: INF
     28: lbl121 -> [8] : B'=A, E'=-1+A, G'=-1+A, [ E>=A && 2*A>=1+E && B>=A && E>=-1+B && G-E==0 && -A+D==0 ], cost: 1-A+E
     30: lbl121 -> [9] : B'=A, E'=-1+A, G'=-1+A, [ 2*A>=1+E && E>=-1+B && G-E==0 && B>=1+A && -A+D==0 ], cost: B-A
     31: lbl121 -> [10] : B'=A, E'=-1+A, G'=-1+A, [ B>=A && E>=-1+B && G-E==0 && G>=A && 2*A>=1+G && -A+D==0 ], cost: 1+G-A
     34: start0 -> lbl121 : B'=-1+2*A, D'=A, E'=-1+2*A, G'=-1+2*A, [ A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && A==A ], cost: 3
     35: start0 -> [7] : B'=C, D'=A, E'=2*A, G'=-1+A, [ A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && 0==0 ], cost: 2+A

  Found configuration with infinitely models for cost: 2+A
  and guard: A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && 0==0:
  A: Pos, C: Both, H: Both, F: Both

Found new complexity n^1, because: Found infinity configuration.

Performed chaining from the start location:
  Start location: start0
     36: start0 -> lbl82 : B'=-1+2*A, D'=A, E'=-1+2*A, G'=-2+2*A, [ A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && A==A && -1+2*A>=A && 2*A>=2*A && -1+2*A>=A && -1+2*A>=-2+2*A && 0==0 && 2*A>=2+A && 0==0 && -1+2*A>=A && 2*A>=2*A && -1+2*A>=A && 2*A>=-1+2*A && -1+2*A==-1+2*A && A==A ], cost: INF
     37: start0 -> [8] : B'=A, D'=A, E'=-1+A, G'=-1+A, [ A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && A==A && -1+2*A>=A && 2*A>=2*A && -1+2*A>=A && -1+2*A>=-2+2*A && 0==0 && 0==0 ], cost: 3+A
     38: start0 -> [9] : B'=A, D'=A, E'=-1+A, G'=-1+A, [ A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && A==A && 2*A>=2*A && -1+2*A>=-2+2*A && 0==0 && -1+2*A>=1+A && 0==0 ], cost: 2+A
     39: start0 -> [10] : B'=A, D'=A, E'=-1+A, G'=-1+A, [ A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && A==A && -1+2*A>=A && -1+2*A>=-2+2*A && 0==0 && -1+2*A>=A && 2*A>=2*A && 0==0 ], cost: 3+A

Found new complexity INF, because: INF sat.


The final runtime is determined by this resulting transition:
  Final Guard: A>=0 && C==C && A==A && F==F && H==H && -1+2*A>=A && 2*A>=2*A && 2*A>=2*A && A==A && -1+2*A>=A && 2*A>=2*A && -1+2*A>=A && -1+2*A>=-2+2*A && 0==0 && 2*A>=2+A && 0==0 && -1+2*A>=A && 2*A>=2*A && -1+2*A>=A && 2*A>=-1+2*A && -1+2*A==-1+2*A && A==A
  Final Cost:  INF

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: INF
  Complexity value: INF

WORST_CASE(INF,?)
