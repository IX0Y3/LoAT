Trying to load file: polyrank5.koat

Initial Control flow graph problem:
  Start location: f0
      0: f0 -> f1 : [], cost: 1
      1: f1 -> f1 : A'=B+A, B'=B+C, C'=C+D, D'=-1+D, [ A>=1 ], cost: 1
      2: f1 -> f1 : A'=-1+A, [ A>=1 ], cost: 1

Eliminating 2 self-loops for location f1
  Self-Loop 2 has the metering function: A, resulting in the new transition 4.
  Removing the self-loops: 1 2.

Accelerated all simple loops using metering functions (where possible):
  Start location: f0
      0: f0 -> f1 : [], cost: 1
      3: f1 -> f1 : A'=B+A, B'=B+C, C'=C+D, D'=-1+D, [ A>=1 ], cost: 1
      4: f1 -> f1 : A'=0, [ A>=1 ], cost: A


Chained simpled loops:
  Start location: f0
      0: f0 -> f1 : [], cost: 1
      5: f0 -> f1 : A'=B+A, B'=B+C, C'=C+D, D'=-1+D, [ A>=1 ], cost: 2
      6: f0 -> f1 : A'=0, [ A>=1 ], cost: 1+A


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f0
      6: f0 -> f1 : A'=0, [ A>=1 ], cost: 1+A


Computing complexity for remaining 1 transitions.

Created initial limit problem:
A (+/+!), 1+A (+) [not solved]

applying transformation rule (D), replacing 1+A (+) by A (+)
resulting limit problem:
A (+) [solved]

Solution:
A / n
Found new complexity n^1, because: Solved the initial limit problem.


The final runtime is determined by this resulting transition:
  Final Guard: A>=1
  Final Cost:  1+n

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: n^1
  Complexity value: 1

WORST_CASE(Omega(n^1),?)
