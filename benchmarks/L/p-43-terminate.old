Trying to load file: p-43-terminate.koat

Initial Control flow graph problem:
  Start location: f8
      0: f13 -> f31 : A'=free, B'=free_1, C'=-1+C, D'=-1+C, [ 0>=1+free_1 ], cost: 1
      1: f13 -> f31 : A'=free_2, B'=free_3, C'=-1+C, D'=-1+C, [ free_3>=1 ], cost: 1
      2: f13 -> f29 : A'=free_4, B'=0, C'=-2+D, D'=-1+D, [], cost: 1
     45: f31 -> f31 : A'=free_68, B'=free_69, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_69 && D+C>=1 && E==1 ], cost: 1
     46: f31 -> f31 : A'=free_70, B'=free_71, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_71>=1 && D+C>=1 && E==1 ], cost: 1
     48: f31 -> f31 : A'=free_73, B'=free_74, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_74 && D+C>=1 && E==1 ], cost: 1
     49: f31 -> f31 : A'=free_75, B'=free_76, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_76>=1 && D+C>=1 && E==1 ], cost: 1
     47: f31 -> f29 : A'=free_72, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     50: f31 -> f29 : A'=free_77, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     51: f31 -> f9 : J'=free_78, [ 0>=C ], cost: 1
     44: f31 -> f300 : E'=1, F'=1, [ D>=Q && C>=H && D+C>=H+Q && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     28: f29 -> f31 : A'=free_45, B'=free_46, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_46 && D+C>=1 && E==1 ], cost: 1
     29: f29 -> f31 : A'=free_47, B'=free_48, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_48>=1 && D+C>=1 && E==1 ], cost: 1
     31: f29 -> f31 : A'=free_50, B'=free_51, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_51 && D+C>=1 && E==1 ], cost: 1
     32: f29 -> f31 : A'=free_52, B'=free_53, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_53>=1 && D+C>=1 && E==1 ], cost: 1
     30: f29 -> f29 : A'=free_49, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     33: f29 -> f29 : A'=free_54, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     34: f29 -> f9 : J'=free_55, [ 0>=C ], cost: 1
     35: f29 -> f9 : J'=free_56, [ C>=1 && 0>=D ], cost: 1
     27: f29 -> f300 : E'=1, F'=1, [ D>=Q && C>=H && D+C>=H+Q && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
      3: f19 -> f31 : A'=free_5, B'=free_6, C'=-1+C, D'=-1+C, [ 0>=1+free_6 ], cost: 1
      4: f19 -> f31 : A'=free_7, B'=free_8, C'=-1+C, D'=-1+C, [ free_8>=1 ], cost: 1
      5: f19 -> f29 : A'=free_9, B'=0, C'=-2+D, D'=-1+D, [], cost: 1
      6: f8 -> f27 : E'=0, F'=0, [], cost: 1
      7: f27 -> f27 : A'=free_10, B'=0, C'=-2+D, D'=-1+D, E'=0, G'=0, [ D>=1 && D+C>=1 && C>=1 && E==0 ], cost: 1
      8: f27 -> f27 : A'=free_11, B'=free_12, C'=-1+C, D'=-1+C, E'=0, G'=0, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && E==0 ], cost: 1
      9: f27 -> f27 : A'=free_13, B'=free_14, C'=-1+C, D'=-1+C, E'=0, G'=0, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && E==0 ], cost: 1
     10: f27 -> f30 : A'=free_15, B'=free_16, C'=-1+C, D'=-1+C, E'=1, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && E==0 ], cost: 1
     11: f27 -> f30 : A'=free_18, B'=free_19, C'=-1+C, D'=-1+C, E'=1, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && E==0 ], cost: 1
     12: f27 -> f30 : A'=free_21, B'=free_22, C'=-1+C, D'=-1+C, E'=1, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && E==0 ], cost: 1
     13: f27 -> f30 : A'=free_24, B'=free_25, C'=-1+C, D'=-1+C, E'=1, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && E==0 ], cost: 1
     14: f27 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && E==0 ], cost: 1
     15: f27 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && E==0 ], cost: 1
     16: f27 -> f9 : J'=free_31, [ 0>=C ], cost: 1
     17: f27 -> f9 : J'=free_32, [ C>=1 && 0>=D ], cost: 1
     37: f30 -> f30 : A'=free_57, B'=free_58, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_58 && D+C>=1 && E==1 ], cost: 1
     38: f30 -> f30 : A'=free_59, B'=free_60, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_60>=1 && D+C>=1 && E==1 ], cost: 1
     40: f30 -> f30 : A'=free_62, B'=free_63, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_63 && D+C>=1 && E==1 ], cost: 1
     41: f30 -> f30 : A'=free_64, B'=free_65, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_65>=1 && D+C>=1 && E==1 ], cost: 1
     39: f30 -> f28 : A'=free_61, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     42: f30 -> f28 : A'=free_66, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     43: f30 -> f9 : J'=free_67, [ 0>=C ], cost: 1
     36: f30 -> f300 : E'=1, F'=1, [ D>=Q && C>=H && D+C>=H+Q && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     19: f28 -> f30 : A'=free_33, B'=free_34, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 ], cost: 1
     20: f28 -> f30 : A'=free_35, B'=free_36, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 ], cost: 1
     22: f28 -> f30 : A'=free_38, B'=free_39, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 ], cost: 1
     23: f28 -> f30 : A'=free_40, B'=free_41, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 ], cost: 1
     21: f28 -> f28 : A'=free_37, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     24: f28 -> f28 : A'=free_42, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     25: f28 -> f9 : J'=free_43, [ 0>=C ], cost: 1
     26: f28 -> f9 : J'=free_44, [ C>=1 && 0>=D ], cost: 1
     18: f28 -> f300 : E'=1, F'=1, [ D>=Q && C>=H && D+C>=H+Q && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1


Simplified the transitions:
  Start location: f8
      6: f8 -> f27 : E'=0, F'=0, [], cost: 1
      7: f27 -> f27 : A'=free_10, B'=0, C'=-2+D, D'=-1+D, E'=0, G'=0, [ D>=1 && D+C>=1 && C>=1 && E==0 ], cost: 1
      8: f27 -> f27 : A'=free_11, B'=free_12, C'=-1+C, D'=-1+C, E'=0, G'=0, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && E==0 ], cost: 1
      9: f27 -> f27 : A'=free_13, B'=free_14, C'=-1+C, D'=-1+C, E'=0, G'=0, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && E==0 ], cost: 1
     10: f27 -> f30 : A'=free_15, B'=free_16, C'=-1+C, D'=-1+C, E'=1, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && E==0 ], cost: 1
     11: f27 -> f30 : A'=free_18, B'=free_19, C'=-1+C, D'=-1+C, E'=1, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && E==0 ], cost: 1
     12: f27 -> f30 : A'=free_21, B'=free_22, C'=-1+C, D'=-1+C, E'=1, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && E==0 ], cost: 1
     13: f27 -> f30 : A'=free_24, B'=free_25, C'=-1+C, D'=-1+C, E'=1, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && E==0 ], cost: 1
     14: f27 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && E==0 ], cost: 1
     15: f27 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && E==0 ], cost: 1
     37: f30 -> f30 : A'=free_57, B'=free_58, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_58 && D+C>=1 && E==1 ], cost: 1
     38: f30 -> f30 : A'=free_59, B'=free_60, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_60>=1 && D+C>=1 && E==1 ], cost: 1
     40: f30 -> f30 : A'=free_62, B'=free_63, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_63 && D+C>=1 && E==1 ], cost: 1
     41: f30 -> f30 : A'=free_64, B'=free_65, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_65>=1 && D+C>=1 && E==1 ], cost: 1
     39: f30 -> f28 : A'=free_61, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     42: f30 -> f28 : A'=free_66, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     19: f28 -> f30 : A'=free_33, B'=free_34, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 ], cost: 1
     20: f28 -> f30 : A'=free_35, B'=free_36, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 ], cost: 1
     22: f28 -> f30 : A'=free_38, B'=free_39, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 ], cost: 1
     23: f28 -> f30 : A'=free_40, B'=free_41, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 ], cost: 1
     21: f28 -> f28 : A'=free_37, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     24: f28 -> f28 : A'=free_42, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1

Eliminating 3 self-loops for location f27
  Removing the self-loops: 7 8 9.
Eliminating 4 self-loops for location f30
  Removing the self-loops: 37 38 40 41.
Eliminating 2 self-loops for location f28
  Removing the self-loops: 21 24.

Accelerated all simple loops using metering functions (where possible):
  Start location: f8
      6: f8 -> f27 : E'=0, F'=0, [], cost: 1
     52: f27 -> f27 : A'=free_10, B'=0, C'=-2+D, D'=-1+D, E'=0, G'=0, [ D>=1 && D+C>=1 && C>=1 && E==0 ], cost: 1
     53: f27 -> f27 : A'=free_11, B'=free_12, C'=-1+C, D'=-1+C, E'=0, G'=0, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && E==0 ], cost: 1
     54: f27 -> f27 : A'=free_13, B'=free_14, C'=-1+C, D'=-1+C, E'=0, G'=0, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && E==0 ], cost: 1
     10: f27 -> f30 : A'=free_15, B'=free_16, C'=-1+C, D'=-1+C, E'=1, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && E==0 ], cost: 1
     11: f27 -> f30 : A'=free_18, B'=free_19, C'=-1+C, D'=-1+C, E'=1, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && E==0 ], cost: 1
     12: f27 -> f30 : A'=free_21, B'=free_22, C'=-1+C, D'=-1+C, E'=1, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && E==0 ], cost: 1
     13: f27 -> f30 : A'=free_24, B'=free_25, C'=-1+C, D'=-1+C, E'=1, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && E==0 ], cost: 1
     14: f27 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && E==0 ], cost: 1
     15: f27 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && E==0 ], cost: 1
     55: f30 -> f30 : A'=free_57, B'=free_58, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_58 && D+C>=1 && E==1 ], cost: 1
     56: f30 -> f30 : A'=free_59, B'=free_60, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_60>=1 && D+C>=1 && E==1 ], cost: 1
     57: f30 -> f30 : A'=free_62, B'=free_63, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_63 && D+C>=1 && E==1 ], cost: 1
     58: f30 -> f30 : A'=free_64, B'=free_65, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_65>=1 && D+C>=1 && E==1 ], cost: 1
     39: f30 -> f28 : A'=free_61, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     42: f30 -> f28 : A'=free_66, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     19: f28 -> f30 : A'=free_33, B'=free_34, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 ], cost: 1
     20: f28 -> f30 : A'=free_35, B'=free_36, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 ], cost: 1
     22: f28 -> f30 : A'=free_38, B'=free_39, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 ], cost: 1
     23: f28 -> f30 : A'=free_40, B'=free_41, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 ], cost: 1
     59: f28 -> f28 : A'=free_37, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     60: f28 -> f28 : A'=free_42, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1


Chained simpled loops:
  Start location: f8
      6: f8 -> f27 : E'=0, F'=0, [], cost: 1
     61: f8 -> f27 : A'=free_10, B'=0, C'=-2+D, D'=-1+D, E'=0, F'=0, G'=0, [ D>=1 && D+C>=1 && C>=1 && 0==0 ], cost: 2
     62: f8 -> f27 : A'=free_11, B'=free_12, C'=-1+C, D'=-1+C, E'=0, F'=0, G'=0, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 ], cost: 2
     63: f8 -> f27 : A'=free_13, B'=free_14, C'=-1+C, D'=-1+C, E'=0, F'=0, G'=0, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 ], cost: 2
     10: f27 -> f30 : A'=free_15, B'=free_16, C'=-1+C, D'=-1+C, E'=1, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && E==0 ], cost: 1
     11: f27 -> f30 : A'=free_18, B'=free_19, C'=-1+C, D'=-1+C, E'=1, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && E==0 ], cost: 1
     12: f27 -> f30 : A'=free_21, B'=free_22, C'=-1+C, D'=-1+C, E'=1, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && E==0 ], cost: 1
     13: f27 -> f30 : A'=free_24, B'=free_25, C'=-1+C, D'=-1+C, E'=1, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && E==0 ], cost: 1
     64: f27 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     65: f27 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     66: f27 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     67: f27 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     72: f27 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     73: f27 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     74: f27 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     75: f27 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && E==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     14: f27 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && E==0 ], cost: 1
     15: f27 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && E==0 ], cost: 1
     84: f27 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && E==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     85: f27 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && E==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     88: f27 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && E==0 && D>=D && -2+D>=C && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     89: f27 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && E==0 && D>=D && -2+D>=C && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     39: f30 -> f28 : A'=free_61, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     42: f30 -> f28 : A'=free_66, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     86: f30 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 && H>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     87: f30 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 && H>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     90: f30 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 && Q>=D && -2+D>=H && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     91: f30 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 && Q>=D && -2+D>=H && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     19: f28 -> f30 : A'=free_33, B'=free_34, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 ], cost: 1
     20: f28 -> f30 : A'=free_35, B'=free_36, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 ], cost: 1
     22: f28 -> f30 : A'=free_38, B'=free_39, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 ], cost: 1
     23: f28 -> f30 : A'=free_40, B'=free_41, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 ], cost: 1
     68: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     69: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     70: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     71: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     76: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     77: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     78: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     79: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     80: f28 -> f30 : A'=free_62, B'=free_63, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && 0>=1+free_63 && -2+2*C>=1 && 1==1 ], cost: 2
     81: f28 -> f30 : A'=free_62, B'=free_63, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && 0>=1+free_63 && -2+2*C>=1 && 1==1 ], cost: 2
     82: f28 -> f30 : A'=free_64, B'=free_65, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && free_65>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     83: f28 -> f30 : A'=free_64, B'=free_65, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && free_65>=1 && -2+2*C>=1 && 1==1 ], cost: 2


Eliminated locations (branches):
  Start location: f8
     92: f8 -> f30 : A'=free_15, B'=free_16, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 ], cost: 2
     93: f8 -> f30 : A'=free_18, B'=free_19, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 ], cost: 2
     94: f8 -> f30 : A'=free_21, B'=free_22, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 ], cost: 2
     95: f8 -> f30 : A'=free_24, B'=free_25, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 ], cost: 2
     96: f8 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 3
     97: f8 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 3
     98: f8 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 3
     99: f8 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 3
    100: f8 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 3
    101: f8 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 3
    102: f8 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_23, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 3
    103: f8 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 3
    110: f8 -> f30 : A'=free_15, B'=free_16, C'=-3+D, D'=-3+D, E'=1, F'=0, G'=free_17, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 ], cost: 3
    111: f8 -> f30 : A'=free_18, B'=free_19, C'=-3+D, D'=-3+D, E'=1, F'=0, G'=free_20, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && 0>=1+free_19 && free_20>=1 && 0==0 ], cost: 3
    112: f8 -> f30 : A'=free_21, B'=free_22, C'=-3+D, D'=-3+D, E'=1, F'=0, G'=free_23, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_22>=1 && 0>=1+free_23 && 0==0 ], cost: 3
    113: f8 -> f30 : A'=free_24, B'=free_25, C'=-3+D, D'=-3+D, E'=1, F'=0, G'=free_26, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_25>=1 && free_26>=1 && 0==0 ], cost: 3
    114: f8 -> f30 : A'=free_57, B'=free_58, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_17, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && 0>=1+free_58 && -6+2*D>=1 && 1==1 ], cost: 4
    115: f8 -> f30 : A'=free_57, B'=free_58, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_20, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && 0>=1+free_58 && -6+2*D>=1 && 1==1 ], cost: 4
    116: f8 -> f30 : A'=free_57, B'=free_58, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_23, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && 0>=1+free_58 && -6+2*D>=1 && 1==1 ], cost: 4
    117: f8 -> f30 : A'=free_57, B'=free_58, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_26, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_25>=1 && free_26>=1 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && 0>=1+free_58 && -6+2*D>=1 && 1==1 ], cost: 4
    118: f8 -> f30 : A'=free_59, B'=free_60, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_17, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && free_60>=1 && -6+2*D>=1 && 1==1 ], cost: 4
    119: f8 -> f30 : A'=free_59, B'=free_60, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_20, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && free_60>=1 && -6+2*D>=1 && 1==1 ], cost: 4
    120: f8 -> f30 : A'=free_59, B'=free_60, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_23, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && free_60>=1 && -6+2*D>=1 && 1==1 ], cost: 4
    121: f8 -> f30 : A'=free_59, B'=free_60, C'=-4+D, D'=-4+D, E'=1, F'=0, G'=free_26, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_25>=1 && free_26>=1 && 0==0 && -2+D>=-2+D && -3+D>=1 && -3+D>=1 && free_60>=1 && -6+2*D>=1 && 1==1 ], cost: 4
    126: f8 -> f30 : A'=free_15, B'=free_16, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_17, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 ], cost: 3
    127: f8 -> f30 : A'=free_18, B'=free_19, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_20, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 ], cost: 3
    128: f8 -> f30 : A'=free_21, B'=free_22, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_23, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 ], cost: 3
    129: f8 -> f30 : A'=free_24, B'=free_25, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_25>=1 && free_26>=1 && 0==0 ], cost: 3
    130: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_17, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    131: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_20, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    132: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_23, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    133: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_25>=1 && free_26>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    134: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_17, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    135: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_20, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    136: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_23, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    137: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_25>=1 && free_26>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    142: f8 -> f30 : A'=free_15, B'=free_16, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_17, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 ], cost: 3
    143: f8 -> f30 : A'=free_18, B'=free_19, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_20, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 ], cost: 3
    144: f8 -> f30 : A'=free_21, B'=free_22, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_23, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 ], cost: 3
    145: f8 -> f30 : A'=free_24, B'=free_25, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_25>=1 && free_26>=1 && 0==0 ], cost: 3
    146: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_17, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    147: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_20, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    148: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_23, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    149: f8 -> f30 : A'=free_57, B'=free_58, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_25>=1 && free_26>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && 0>=1+free_58 && -4+2*C>=1 && 1==1 ], cost: 4
    150: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_17, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    151: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_20, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    152: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_23, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_22>=1 && 0>=1+free_23 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    153: f8 -> f30 : A'=free_59, B'=free_60, C'=-3+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && -2+2*C>=1 && free_25>=1 && free_26>=1 && 0==0 && -1+C>=-1+C && -2+C>=1 && -2+C>=1 && free_60>=1 && -4+2*C>=1 && 1==1 ], cost: 4
    104: f8 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 ], cost: 2
    105: f8 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 ], cost: 2
    106: f8 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 3
    107: f8 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 3
    108: f8 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 && D>=D && -2+D>=C && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 3
    109: f8 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && D>=D && -2+D>=C && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 3
    122: f8 -> f28 : A'=free_27, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_28, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && 0>=1+free_28 && -3+2*D>=1 && 0==0 ], cost: 3
    123: f8 -> f28 : A'=free_29, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 ], cost: 3
    124: f8 -> f28 : A'=free_37, B'=0, C'=-4+D, D'=-3+D, E'=1, F'=0, G'=free_28, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && 0>=1+free_28 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && -3+D>=1 && 1==1 ], cost: 4
    125: f8 -> f28 : A'=free_37, B'=0, C'=-4+D, D'=-3+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && -3+D>=1 && 1==1 ], cost: 4
    138: f8 -> f28 : A'=free_27, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_28, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && 0>=1+free_28 && -2+2*C>=1 && 0==0 ], cost: 3
    139: f8 -> f28 : A'=free_29, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_30, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && free_30>=1 && -2+2*C>=1 && 0==0 ], cost: 3
    140: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_28, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && 0>=1+free_28 && -2+2*C>=1 && 0==0 && -1+C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
    141: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_30, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && 0>=1+free_12 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && free_30>=1 && -2+2*C>=1 && 0==0 && -1+C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
    154: f8 -> f28 : A'=free_27, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_28, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && 0>=1+free_28 && -2+2*C>=1 && 0==0 ], cost: 3
    155: f8 -> f28 : A'=free_29, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_30, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && free_30>=1 && -2+2*C>=1 && 0==0 ], cost: 3
    156: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_28, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && 0>=1+free_28 && -2+2*C>=1 && 0==0 && -1+C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
    157: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_30, H'=-1+C, Q'=-1+C, [ D>=1 && C>=1 && free_14>=1 && D+C>=1 && 0==0 && -1+C>=1 && -1+C>=1 && free_30>=1 && -2+2*C>=1 && 0==0 && -1+C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
     39: f30 -> f28 : A'=free_61, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     42: f30 -> f28 : A'=free_66, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     86: f30 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 && H>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     87: f30 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 && H>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     90: f30 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 && Q>=D && -2+D>=H && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     91: f30 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 && Q>=D && -2+D>=H && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     19: f28 -> f30 : A'=free_33, B'=free_34, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 ], cost: 1
     20: f28 -> f30 : A'=free_35, B'=free_36, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 ], cost: 1
     22: f28 -> f30 : A'=free_38, B'=free_39, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 ], cost: 1
     23: f28 -> f30 : A'=free_40, B'=free_41, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 ], cost: 1
     68: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     69: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     70: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     71: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     76: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     77: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     78: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     79: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     80: f28 -> f30 : A'=free_62, B'=free_63, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && 0>=1+free_63 && -2+2*C>=1 && 1==1 ], cost: 2
     81: f28 -> f30 : A'=free_62, B'=free_63, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && 0>=1+free_63 && -2+2*C>=1 && 1==1 ], cost: 2
     82: f28 -> f30 : A'=free_64, B'=free_65, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && 0>=1+free_39 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && free_65>=1 && -2+2*C>=1 && 1==1 ], cost: 2
     83: f28 -> f30 : A'=free_64, B'=free_65, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -1+C>=1 && free_65>=1 && -2+2*C>=1 && 1==1 ], cost: 2


Pruned:
  Start location: f8
     92: f8 -> f30 : A'=free_15, B'=free_16, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 ], cost: 2
     93: f8 -> f30 : A'=free_18, B'=free_19, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 ], cost: 2
     95: f8 -> f30 : A'=free_24, B'=free_25, C'=-1+C, D'=-1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 ], cost: 2
     99: f8 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 3
    113: f8 -> f30 : A'=free_24, B'=free_25, C'=-3+D, D'=-3+D, E'=1, F'=0, G'=free_26, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_25>=1 && free_26>=1 && 0==0 ], cost: 3
    104: f8 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 ], cost: 2
    105: f8 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 ], cost: 2
    107: f8 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 3
    123: f8 -> f28 : A'=free_29, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 ], cost: 3
    125: f8 -> f28 : A'=free_37, B'=0, C'=-4+D, D'=-3+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && -3+D>=1 && 1==1 ], cost: 4
     39: f30 -> f28 : A'=free_61, B'=0, C'=-2+D, D'=-1+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     42: f30 -> f28 : A'=free_66, B'=0, C'=-2+D, D'=-1+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 ], cost: 1
     86: f30 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, [ H>=1+C && D>=1 && D+C>=1 && C>=1 && E==1 && H>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     87: f30 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 && H>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     91: f30 -> f28 : A'=free_42, B'=0, C'=-3+D, D'=-2+D, E'=1, [ Q>=1+D && C>=H && D>=1 && D+C>=1 && C>=1 && E==1 && Q>=D && -2+D>=H && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 2
     19: f28 -> f30 : A'=free_33, B'=free_34, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 ], cost: 1
     20: f28 -> f30 : A'=free_35, B'=free_36, C'=-1+C, D'=-1+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 ], cost: 1
     23: f28 -> f30 : A'=free_40, B'=free_41, C'=-1+C, D'=-1+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 ], cost: 1
     71: f28 -> f30 : A'=free_57, B'=free_58, C'=-2+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 ], cost: 2
     77: f28 -> f30 : A'=free_59, B'=free_60, C'=-2+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 ], cost: 2


Eliminated locations:
  Start location: f8
    104: f8 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 ], cost: 2
    105: f8 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 ], cost: 2
    107: f8 -> f28 : A'=free_37, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && -2+D>=1 && 1==1 ], cost: 3
    123: f8 -> f28 : A'=free_29, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 ], cost: 3
    125: f8 -> f28 : A'=free_37, B'=0, C'=-4+D, D'=-3+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && -3+D>=1 && 1==1 ], cost: 4
    158: f8 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 3
    159: f8 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 3
    160: f8 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 3
    161: f8 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 4
    162: f8 -> f28 : A'=free_61, B'=0, C'=-5+D, D'=-4+D, E'=1, F'=0, G'=free_26, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_25>=1 && free_26>=1 && 0==0 && -2+D>=-2+D && -3+D>=1 && -6+2*D>=1 && -3+D>=1 && 1==1 ], cost: 4
    169: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_17, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_16 && 0>=1+free_17 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
    170: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_20, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && 0>=1+free_19 && free_20>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
    171: f8 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 4
    172: f8 -> f28 : A'=free_37, B'=0, C'=-5+C, D'=-4+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && C>=-3+C && -3+C>=1 && -7+2*C>=1 && -4+C>=1 && 1==1 ], cost: 5
    173: f8 -> f28 : A'=free_37, B'=0, C'=-6+D, D'=-5+D, E'=1, F'=0, G'=free_26, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && -3+2*D>=1 && free_25>=1 && free_26>=1 && 0==0 && -2+D>=-2+D && -3+D>=1 && -6+2*D>=1 && -3+D>=1 && 1==1 && -2+D>=-4+D && -4+D>=1 && -9+2*D>=1 && -5+D>=1 && 1==1 ], cost: 5
    163: f28 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 2
    164: f28 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 2
    165: f28 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 2
    166: f28 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && H>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 3
    167: f28 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 && H>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 3
    168: f28 -> f28 : A'=free_66, B'=0, C'=-3+C, D'=-2+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 2
    174: f28 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && H>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3
    175: f28 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && H>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3
    176: f28 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && H>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3
    177: f28 -> f28 : A'=free_37, B'=0, C'=-5+C, D'=-4+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && H>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && H>=-3+C && -3+C>=1 && -7+2*C>=1 && -4+C>=1 && 1==1 ], cost: 4
    178: f28 -> f28 : A'=free_37, B'=0, C'=-5+C, D'=-4+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && free_60>=1 && -2+2*C>=1 && 1==1 && H>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && H>=-3+C && -3+C>=1 && -7+2*C>=1 && -4+C>=1 && 1==1 ], cost: 4
    179: f28 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && H>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3
    180: f28 -> f28 : A'=free_42, B'=0, C'=-4+C, D'=-3+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && Q>=C && -1+C>=H && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && Q>=-1+C && -3+C>=H && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3


Pruned:
  Start location: f8
    104: f8 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 ], cost: 2
    105: f8 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 ], cost: 2
    123: f8 -> f28 : A'=free_29, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 ], cost: 3
    160: f8 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 3
    161: f8 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 4
    163: f28 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 2
    164: f28 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 2
    166: f28 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, [ Q>=1+D && C>=H && D>=1 && C>=1 && free_41>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && H>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 3
    174: f28 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, [ H>=1+C && D>=1 && C>=1 && 0>=1+free_34 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && H>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3
    175: f28 -> f28 : A'=free_37, B'=0, C'=-4+C, D'=-3+C, E'=1, [ H>=1+C && D>=1 && C>=1 && free_36>=1 && D+C>=1 && E==1 && H>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && H>=-2+C && -2+C>=1 && -5+2*C>=1 && -3+C>=1 && 1==1 ], cost: 3

Eliminating 5 self-loops for location f28
  Self-Loop 174 has the metering function: meter, resulting in the new transition 184.
  Self-Loop 175 has the metering function: meter_1, resulting in the new transition 185.
  Removing the self-loops: 163 164 166 174 175.
Removing duplicate transition: 181.

Accelerated all simple loops using metering functions (where possible):
  Start location: f8
    104: f8 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 ], cost: 2
    105: f8 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 ], cost: 2
    123: f8 -> f28 : A'=free_29, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 ], cost: 3
    160: f8 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 3
    161: f8 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 4
    182: f28 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, [ H>=1+C && D>=1 && D+C>=1 && E==1 && -1+C>=1 ], cost: 2
    183: f28 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, [ Q>=1+D && H-C==0 && D>=1 && D+C>=1 && E==1 && -2+C>=1 ], cost: 3
    184: f28 -> f28 : A'=free_37, B'=0, C'=-4*meter+C, D'=1-4*meter+C, E'=1, [ H>=1+C && D>=1 && D+C>=1 && E==1 && -3+C>=1 && 4*meter==-3+C ], cost: 3*meter
    185: f28 -> f28 : A'=free_37, B'=0, C'=-4*meter_1+C, D'=1-4*meter_1+C, E'=1, [ H>=1+C && D>=1 && D+C>=1 && E==1 && -3+C>=1 && 4*meter_1==-3+C ], cost: 3*meter_1


Chained simpled loops:
  Start location: f8
    104: f8 -> f28 : A'=free_27, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 ], cost: 2
    105: f8 -> f28 : A'=free_29, B'=0, C'=-2+D, D'=-1+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 ], cost: 2
    123: f8 -> f28 : A'=free_29, B'=0, C'=-3+D, D'=-2+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 ], cost: 3
    160: f8 -> f28 : A'=free_61, B'=0, C'=-3+C, D'=-2+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 ], cost: 3
    161: f8 -> f28 : A'=free_61, B'=0, C'=-4+C, D'=-3+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 ], cost: 4
    186: f8 -> f28 : A'=free_61, B'=0, C'=-5+D, D'=-4+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && 1==1 && -3+D>=1 ], cost: 4
    187: f8 -> f28 : A'=free_61, B'=0, C'=-5+D, D'=-4+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && 1==1 && -3+D>=1 ], cost: 4
    188: f8 -> f28 : A'=free_61, B'=0, C'=-6+D, D'=-5+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -4+D>=1 ], cost: 5
    189: f8 -> f28 : A'=free_61, B'=0, C'=-6+C, D'=-5+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -4+C>=1 ], cost: 5
    190: f8 -> f28 : A'=free_61, B'=0, C'=-7+C, D'=-6+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && C>=-3+C && -3+C>=1 && -7+2*C>=1 && 1==1 && -5+C>=1 ], cost: 6
    191: f8 -> f28 : A'=free_61, B'=0, C'=-6+D, D'=-5+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 && D>=D && 2-D+C==0 && -1+D>=1 && -3+2*D>=1 && 1==1 && -4+D>=1 ], cost: 5
    192: f8 -> f28 : A'=free_61, B'=0, C'=-6+D, D'=-5+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && D>=D && 2-D+C==0 && -1+D>=1 && -3+2*D>=1 && 1==1 && -4+D>=1 ], cost: 5
    193: f8 -> f28 : A'=free_37, B'=0, C'=-2-4*meter+D, D'=-1-4*meter+D, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && 1==1 && -5+D>=1 && 4*meter==-5+D ], cost: 2+3*meter
    194: f8 -> f28 : A'=free_37, B'=0, C'=-2-4*meter+D, D'=-1-4*meter+D, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && 1==1 && -5+D>=1 && 4*meter==-5+D ], cost: 2+3*meter
    195: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter+D, D'=-2-4*meter+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter==-6+D ], cost: 3+3*meter
    196: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter+C, D'=-2-4*meter+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -6+C>=1 && 4*meter==-6+C ], cost: 3+3*meter
    197: f8 -> f28 : A'=free_37, B'=0, C'=-4-4*meter+C, D'=-3-4*meter+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && C>=-3+C && -3+C>=1 && -7+2*C>=1 && 1==1 && -7+C>=1 && 4*meter==-7+C ], cost: 4+3*meter
    198: f8 -> f28 : A'=free_37, B'=0, C'=-2+D-4*meter_1, D'=-1+D-4*meter_1, E'=1, F'=0, G'=free_28, H'=C, Q'=D, [ D>=1 && C>=1 && 0>=1+free_28 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && 1==1 && -5+D>=1 && 4*meter_1==-5+D ], cost: 2+3*meter_1
    199: f8 -> f28 : A'=free_37, B'=0, C'=-2+D-4*meter_1, D'=-1+D-4*meter_1, E'=1, F'=0, G'=free_30, H'=C, Q'=D, [ D>=1 && C>=1 && free_30>=1 && D+C>=1 && 0==0 && C>=-1+D && -1+D>=1 && -3+2*D>=1 && 1==1 && -5+D>=1 && 4*meter_1==-5+D ], cost: 2+3*meter_1
    200: f8 -> f28 : A'=free_37, B'=0, C'=-3+D-4*meter_1, D'=-2+D-4*meter_1, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter_1==-6+D ], cost: 3+3*meter_1
    201: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter_1+C, D'=-2-4*meter_1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -6+C>=1 && 4*meter_1==-6+C ], cost: 3+3*meter_1
    202: f8 -> f28 : A'=free_37, B'=0, C'=-4-4*meter_1+C, D'=-3-4*meter_1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && C>=-3+C && -3+C>=1 && -7+2*C>=1 && 1==1 && -7+C>=1 && 4*meter_1==-7+C ], cost: 4+3*meter_1

Created initial limit problem:
8+4*meter_1-C (+/+!), -6-4*meter_1+C (+/+!), 1 (+/+!), free_26 (+/+!), -free_58 (+/+!), D+C (+/+!), D (+/+!), 4+3*meter_1 (+), 2 (+/+!), -1+C (+/+!), -7+2*C (+/+!), -2+C (+/+!), -3+C (+/+!), 4 (+/+!), -4+2*C (+/+!), free_25 (+/+!), -2+2*C (+/+!), -7+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==7+4*meter_1}
resulting limit problem:
1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {D==1}
resulting limit problem:
1 (+/+!), 8+4*meter_1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
1 (+/+!), 8+4*meter_1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_26==1}
resulting limit problem:
1 (+/+!), 8+4*meter_1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8+4*meter_1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (B), deleting 2 (+/+!)
resulting limit problem:
8+4*meter_1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (B), deleting 4 (+/+!)
resulting limit problem:
8+4*meter_1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 8+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
7+8*meter_1 (+/+!), 4*meter_1 (+), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 12+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 4+3*meter_1 (+) by 3*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 10+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 6+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 7+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 8*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 4+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 8*meter_1 (+), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 5+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {free_58==-1}
resulting limit problem:
1 (+/+!), 4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (A), replacing 4*meter_1 (+) by meter_1 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
8*meter_1 (+), 4 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
8*meter_1 (+), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 8*meter_1 (+) by meter_1 (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 3*meter_1 (+) by meter_1 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), meter_1 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter_1 (+) [solved]

Created initial limit problem:
8+4*meter_1-C (+/+!), -6-4*meter_1+C (+/+!), 1 (+/+!), free_26 (+/+!), -free_58 (+/+!), D+C (+/+!), D (+/+!), 4+3*meter_1 (+), 2 (+/+!), -1+C (+/+!), -7+2*C (+/+!), -2+C (+/+!), -3+C (+/+!), 4 (+/+!), -4+2*C (+/+!), free_25 (+/+!), -2+2*C (+/+!), -7+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==7+4*meter_1}
resulting limit problem:
1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 2 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 2 (+/+!)
resulting limit problem:
free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 4 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 4 (+/+!)
resulting limit problem:
free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 12+8*meter_1 (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 12+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 4+3*meter_1 (+), 10+8*meter_1 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 4+3*meter_1 (+) by 3*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 10+8*meter_1 (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 10+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+/+!), -free_58 (+/+!), D (+/+!), 7+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 6+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), -free_58 (+/+!), D (+/+!), 7+D+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 7+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), -free_58 (+/+!), D (+/+!), 7+D+4*meter_1 (+/+!), 8*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 4+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), -free_58 (+/+!), D (+/+!), 7+D+4*meter_1 (+/+!), 8*meter_1 (+), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 5+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), -free_58 (+/+!), D (+/+!), 7+D+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {free_26==D}
resulting limit problem:
4*meter_1 (+), -free_58 (+/+!), D (+/+!), 7+D+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {D==free_25}
resulting limit problem:
4*meter_1 (+), 7+free_25+4*meter_1 (+/+!), -free_58 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {free_58==-1}
resulting limit problem:
1 (+/+!), 4*meter_1 (+), 7+free_25+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
4*meter_1 (+), 7+free_25+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
1 (+/+!), 8+4*meter_1 (+/+!), 4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8+4*meter_1 (+/+!), 4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 8+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (A), replacing 4*meter_1 (+) by meter_1 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
8*meter_1 (+), 4 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
8*meter_1 (+), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 8*meter_1 (+) by meter_1 (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 3*meter_1 (+) by meter_1 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), meter_1 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter_1 (+) [solved]

Solution:
free_26 / 1
D / 1
free_58 / -1
free_25 / 1
meter_1 / n
C / 7+4*n
Created initial limit problem:
1 (+/+!), -5-4*meter_1+C (+/+!), free_26 (+/+!), D+C (+/+!), D (+/+!), 3 (+/+!), -1+C (+/+!), 7+4*meter_1-C (+/+!), -2+C (+/+!), -5+2*C (+/+!), 3+3*meter_1 (+), free_25 (+/+!), -2+2*C (+/+!), -6+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==6+4*meter_1}
resulting limit problem:
1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), D (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {D==1}
resulting limit problem:
1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_26==1}
resulting limit problem:
1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (B), deleting 3 (+/+!)
resulting limit problem:
7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+/+!), 10+8*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 10+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter_1 (+) by 3*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 4+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 5+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 5+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (A), replacing 4*meter_1 (+) by meter_1 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
8*meter_1 (+), 4 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
8*meter_1 (+), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 8*meter_1 (+) by meter_1 (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 3*meter_1 (+) by meter_1 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), meter_1 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter_1 (+) [solved]

Created initial limit problem:
1 (+/+!), -5-4*meter_1+C (+/+!), free_26 (+/+!), D+C (+/+!), D (+/+!), 3 (+/+!), -1+C (+/+!), 7+4*meter_1-C (+/+!), -2+C (+/+!), -5+2*C (+/+!), 3+3*meter_1 (+), free_25 (+/+!), -2+2*C (+/+!), -6+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==6+4*meter_1}
resulting limit problem:
1 (+/+!), free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), D (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), D (+/+!), 3 (+/+!), 10+8*meter_1 (+/+!), 6+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 3 (+/+!)
resulting limit problem:
free_26 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), D (+/+!), 10+8*meter_1 (+/+!), 6+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+/+!), D (+/+!), 10+8*meter_1 (+/+!), 6+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 10+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+/+!), D (+/+!), 6+D+4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), D (+/+!), 6+D+4*meter_1 (+/+!), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter_1 (+) by 3*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), D (+/+!), 6+D+4*meter_1 (+/+!), 8*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 4+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), D (+/+!), 6+D+4*meter_1 (+/+!), 8*meter_1 (+), 5+4*meter_1 (+/+!), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 5+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
free_26 (+/+!), 4*meter_1 (+), D (+/+!), 6+D+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {free_26==D}
resulting limit problem:
4*meter_1 (+), D (+/+!), 6+D+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {D==free_25}
resulting limit problem:
4*meter_1 (+), 6+free_25+4*meter_1 (+/+!), 8*meter_1 (+), free_25 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
1 (+/+!), 4*meter_1 (+), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 7+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (A), replacing 4*meter_1 (+) by meter_1 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
8*meter_1 (+), 4 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
8*meter_1 (+), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 8*meter_1 (+) by meter_1 (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 3*meter_1 (+) by meter_1 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), meter_1 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter_1 (+) [solved]

Solution:
free_26 / 1
D / 1
free_25 / 1
meter_1 / n
C / 6+4*n
Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==C}
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+/+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Solution:
meter / n
D / 6+4*n
free_30 / 1
C / 1
Created initial limit problem:
-1+D (+/+!), 1 (+/+!), D+C (+/+!), D (+/+!), -5+D-4*meter_1 (+/+!), -6+D (+/+!), -3+2*D (+/+!), 3+3*meter_1 (+), -5+2*D (+/+!), free_30 (+/+!), 7-D+4*meter_1 (+/+!), C (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter_1}
resulting limit problem:
1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 6+4*meter_1+C (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter_1 (+) by 3*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 4+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 5+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 9+8*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 9+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (A), replacing 4*meter_1 (+) by meter_1 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
8*meter_1 (+), 4 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
8*meter_1 (+), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 8*meter_1 (+) by meter_1 (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 3*meter_1 (+) by meter_1 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), meter_1 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter_1 (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), D+C (+/+!), D (+/+!), -5+D-4*meter_1 (+/+!), -6+D (+/+!), -3+2*D (+/+!), 3+3*meter_1 (+), -5+2*D (+/+!), free_30 (+/+!), 7-D+4*meter_1 (+/+!), C (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter_1}
resulting limit problem:
1 (+/+!), 7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 6+4*meter_1+C (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+8*meter_1 (+/+!), 4*meter_1 (+/+!), 6+4*meter_1+C (+/+!), 6+4*meter_1 (+/+!), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+/+!), 6+4*meter_1+C (+/+!), 6+4*meter_1 (+/+!), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 6+4*meter_1+C (+/+!), 8*meter_1 (+), 3+3*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter_1 (+) by 3*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 6+4*meter_1+C (+/+!), 8*meter_1 (+), 4+4*meter_1 (+/+!), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), 3*meter_1 (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 6+4*meter_1+C (+/+!), 8*meter_1 (+), 5+4*meter_1 (+/+!), 9+8*meter_1 (+/+!), 3*meter_1 (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 6+4*meter_1+C (+/+!), 8*meter_1 (+), 9+8*meter_1 (+/+!), 3*meter_1 (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter_1 (+/+!) by 8*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 6+4*meter_1+C (+/+!), 8*meter_1 (+), 3*meter_1 (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==C}
resulting limit problem:
4*meter_1 (+), 6+4*meter_1+C (+/+!), 8*meter_1 (+), 3*meter_1 (+), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+/+!), 4*meter_1 (+), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 7+4*meter_1 (+/+!), 3*meter_1 (+) [not solved]

applying transformation rule (D), replacing 7+4*meter_1 (+/+!) by 4*meter_1 (+)
resulting limit problem:
4*meter_1 (+), 8*meter_1 (+), 3*meter_1 (+) [not solved]

applying transformation rule (A), replacing 4*meter_1 (+) by meter_1 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
8*meter_1 (+), 4 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
8*meter_1 (+), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 8*meter_1 (+) by meter_1 (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), 3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
3*meter_1 (+), meter_1 (+) [not solved]

applying transformation rule (A), replacing 3*meter_1 (+) by meter_1 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), meter_1 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter_1 (+) [solved]

Solution:
D / 6+4*n
free_30 / 1
meter_1 / n
C / 1
Created initial limit problem:
1 (+/+!), free_26 (+/+!), 3+3*meter (+), -5-4*meter+C (+/+!), D+C (+/+!), D (+/+!), 3 (+/+!), -1+C (+/+!), 7+4*meter-C (+/+!), -2+C (+/+!), -5+2*C (+/+!), free_25 (+/+!), -2+2*C (+/+!), -6+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {D==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (C) using substitution {free_26==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (B), deleting 3 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3*meter (+), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), 10+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 10+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
1 (+/+!), free_26 (+/+!), 3+3*meter (+), -5-4*meter+C (+/+!), D+C (+/+!), D (+/+!), 3 (+/+!), -1+C (+/+!), 7+4*meter-C (+/+!), -2+C (+/+!), -5+2*C (+/+!), free_25 (+/+!), -2+2*C (+/+!), -6+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 3 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 3 (+/+!)
resulting limit problem:
6+4*meter (+/+!), free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
free_26 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
free_26 (+/+!), 4+4*meter (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
free_26 (+/+!), 6+4*meter+D (+/+!), 5+4*meter (+/+!), D (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
free_26 (+/+!), 6+4*meter+D (+/+!), D (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), free_26 (+/+!), 6+4*meter+D (+/+!), D (+/+!), 3*meter (+), 4*meter (+), 10+8*meter (+/+!), free_25 (+/+!) [not solved]

applying transformation rule (D), replacing 10+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), free_26 (+/+!), 6+4*meter+D (+/+!), D (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_26==D}
resulting limit problem:
8*meter (+), 6+4*meter+D (+/+!), D (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {D==free_25}
resulting limit problem:
6+4*meter+free_25 (+/+!), 8*meter (+), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
1 (+/+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Solution:
free_26 / 1
meter / n
D / 1
free_25 / 1
C / 6+4*n
Created initial limit problem:
-6-4*meter+C (+/+!), 8+4*meter-C (+/+!), 1 (+/+!), free_26 (+/+!), -free_58 (+/+!), D+C (+/+!), D (+/+!), 2 (+/+!), -1+C (+/+!), -7+2*C (+/+!), -2+C (+/+!), -3+C (+/+!), 4 (+/+!), -4+2*C (+/+!), free_25 (+/+!), 4+3*meter (+), -2+2*C (+/+!), -7+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==7+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 2 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (C) using substitution {D==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 2 (+/+!), 8+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 2 (+/+!), 8+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (C) using substitution {free_26==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 2 (+/+!), 8+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 2 (+/+!), 8+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (B), deleting 2 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 8+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (B), deleting 4 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 8+4*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 8+4*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), -free_58 (+/+!), 8+4*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), -free_58 (+/+!), 8+4*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
-free_58 (+/+!), 8+4*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 8+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
-free_58 (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), -free_58 (+/+!), 4*meter (+), 12+8*meter (+/+!), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 12+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), -free_58 (+/+!), 4*meter (+), 10+8*meter (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 10+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), -free_58 (+/+!), 4*meter (+), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 4+3*meter (+) by 3*meter (+)
resulting limit problem:
8*meter (+), -free_58 (+/+!), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (C) using substitution {free_58==-1}
resulting limit problem:
1 (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-6-4*meter+C (+/+!), 8+4*meter-C (+/+!), 1 (+/+!), free_26 (+/+!), -free_58 (+/+!), D+C (+/+!), D (+/+!), 2 (+/+!), -1+C (+/+!), -7+2*C (+/+!), -2+C (+/+!), -3+C (+/+!), 4 (+/+!), -4+2*C (+/+!), free_25 (+/+!), 4+3*meter (+), -2+2*C (+/+!), -7+C (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==7+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 2 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 2 (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (B), deleting 2 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 4 (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (B), deleting 4 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
free_26 (+/+!), 4+4*meter (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
free_26 (+/+!), 5+4*meter (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
free_26 (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), 7+8*meter (+/+!), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), free_26 (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), 12+8*meter (+/+!), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 12+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), free_26 (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), 10+8*meter (+/+!), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 10+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), free_26 (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 4*meter (+), free_25 (+/+!), 4+3*meter (+) [not solved]

applying transformation rule (D), replacing 4+3*meter (+) by 3*meter (+)
resulting limit problem:
8*meter (+), free_26 (+/+!), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_26==D}
resulting limit problem:
8*meter (+), 7+4*meter+D (+/+!), -free_58 (+/+!), D (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {D==free_25}
resulting limit problem:
8*meter (+), 7+4*meter+free_25 (+/+!), -free_58 (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_58==-1}
resulting limit problem:
1 (+/+!), 8*meter (+), 7+4*meter+free_25 (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8*meter (+), 7+4*meter+free_25 (+/+!), 3*meter (+), 4*meter (+), free_25 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_25==1}
resulting limit problem:
1 (+/+!), 8*meter (+), 3*meter (+), 8+4*meter (+/+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8*meter (+), 3*meter (+), 8+4*meter (+/+!), 4*meter (+) [not solved]

applying transformation rule (D), replacing 8+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Solution:
free_26 / 1
meter / n
D / 1
free_58 / -1
free_25 / 1
C / 7+4*n

Pruned:
  Start location: f8
    195: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter+D, D'=-2-4*meter+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter==-6+D ], cost: 3+3*meter
    196: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter+C, D'=-2-4*meter+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -6+C>=1 && 4*meter==-6+C ], cost: 3+3*meter
    200: f8 -> f28 : A'=free_37, B'=0, C'=-3+D-4*meter_1, D'=-2+D-4*meter_1, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter_1==-6+D ], cost: 3+3*meter_1
    201: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter_1+C, D'=-2-4*meter_1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -6+C>=1 && 4*meter_1==-6+C ], cost: 3+3*meter_1
    202: f8 -> f28 : A'=free_37, B'=0, C'=-4-4*meter_1+C, D'=-3-4*meter_1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && C>=-3+C && -3+C>=1 && -7+2*C>=1 && 1==1 && -7+C>=1 && 4*meter_1==-7+C ], cost: 4+3*meter_1


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f8
    195: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter+D, D'=-2-4*meter+D, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter==-6+D ], cost: 3+3*meter
    196: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter+C, D'=-2-4*meter+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -6+C>=1 && 4*meter==-6+C ], cost: 3+3*meter
    200: f8 -> f28 : A'=free_37, B'=0, C'=-3+D-4*meter_1, D'=-2+D-4*meter_1, E'=1, F'=0, G'=free_30, H'=-2+D, Q'=-1+D, [ D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter_1==-6+D ], cost: 3+3*meter_1
    201: f8 -> f28 : A'=free_37, B'=0, C'=-3-4*meter_1+C, D'=-2-4*meter_1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -2+2*C>=1 && -1+C>=1 && 1==1 && C>=-2+C && -2+C>=1 && -5+2*C>=1 && 1==1 && -6+C>=1 && 4*meter_1==-6+C ], cost: 3+3*meter_1
    202: f8 -> f28 : A'=free_37, B'=0, C'=-4-4*meter_1+C, D'=-3-4*meter_1+C, E'=1, F'=0, G'=free_26, H'=C, Q'=D, [ D>=1 && C>=1 && D+C>=1 && free_25>=1 && free_26>=1 && 0==0 && C>=C && -1+C>=1 && -1+C>=1 && 0>=1+free_58 && -2+2*C>=1 && 1==1 && C>=-1+C && -2+C>=1 && -4+2*C>=1 && -2+C>=1 && 1==1 && C>=-3+C && -3+C>=1 && -7+2*C>=1 && 1==1 && -7+C>=1 && 4*meter_1==-7+C ], cost: 4+3*meter_1


Computing complexity for remaining 5 transitions.

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), 7+8*meter (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==C}
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+/+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==C}
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+) [not solved]

applying transformation rule (C) using substitution {meter==C}
resulting limit problem:
4*C (+), 6+5*C (+/+!), 3*C (+), C (+) [not solved]

applying transformation rule (D), replacing 6+5*C (+/+!) by 5*C (+)
resulting limit problem:
4*C (+), 5*C (+), 3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 4*C (+) by C (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
5*C (+), 4 (+!), 3*C (+), C (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
5*C (+), 3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 5*C (+) by C (+) and 5 (+!) using + limit vector (+,+!)
resulting limit problem:
5 (+!), 3*C (+), C (+) [not solved]

applying transformation rule (B), deleting 5 (+!)
resulting limit problem:
3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 3*C (+) by C (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), C (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
C (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
1 (+/+!), 8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (B), deleting 1 (+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (C) using substitution {meter==free_30}
resulting limit problem:
4*free_30 (+), free_30 (+), 3*free_30 (+) [not solved]

applying transformation rule (A), replacing 4*free_30 (+) by free_30 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
4 (+!), free_30 (+), 3*free_30 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
free_30 (+), 3*free_30 (+) [not solved]

applying transformation rule (A), replacing 3*free_30 (+) by free_30 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), free_30 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
free_30 (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
1 (+!), 8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+!)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+/+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
1 (+!), 8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+!)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+) [not solved]

applying transformation rule (C) using substitution {meter==C}
resulting limit problem:
4*C (+), 6+5*C (+/+!), 3*C (+), C (+) [not solved]

applying transformation rule (D), replacing 6+5*C (+/+!) by 5*C (+)
resulting limit problem:
4*C (+), 5*C (+), 3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 4*C (+) by C (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
5*C (+), 4 (+!), 3*C (+), C (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
5*C (+), 3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 5*C (+) by C (+) and 5 (+!) using + limit vector (+,+!)
resulting limit problem:
5 (+!), 3*C (+), C (+) [not solved]

applying transformation rule (B), deleting 5 (+!)
resulting limit problem:
3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 3*C (+) by C (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), C (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
C (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
1 (+/+!), 7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
7+4*meter (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
6+4*meter+C (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), C (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+/+!) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 6+4*meter+C (+/+!), 3*meter (+), 4*meter (+), C (+) [not solved]

applying transformation rule (C) using substitution {meter==C}
resulting limit problem:
4*C (+), 6+5*C (+/+!), 3*C (+), C (+) [not solved]

applying transformation rule (D), replacing 6+5*C (+/+!) by 5*C (+)
resulting limit problem:
4*C (+), 5*C (+), 3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 4*C (+) by C (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
5*C (+), 4 (+!), 3*C (+), C (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
5*C (+), 3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 5*C (+) by C (+) and 5 (+!) using + limit vector (+,+!)
resulting limit problem:
5 (+!), 3*C (+), C (+) [not solved]

applying transformation rule (B), deleting 5 (+!)
resulting limit problem:
3*C (+), C (+) [not solved]

applying transformation rule (A), replacing 3*C (+) by C (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), C (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
C (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), free_30 (+/+!) [not solved]

applying transformation rule (C) using substitution {free_30==1}
resulting limit problem:
1 (+/+!), 8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 3*meter (+) by meter (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 3 (+!), 4*meter (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
meter (+), 4*meter (+) [not solved]

applying transformation rule (A), replacing 4*meter (+) by meter (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
meter (+), 4 (+!) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
meter (+) [solved]

Created initial limit problem:
-1+D (+/+!), 1 (+/+!), 3+3*meter (+), D+C (+/+!), D (+/+!), -5-4*meter+D (+/+!), -6+D (+/+!), -3+2*D (+/+!), -5+2*D (+/+!), free_30 (+/+!), C (+/+!), 7+4*meter-D (+/+!), -2+D (+/+!) [not solved]

applying transformation rule (C) using substitution {D==6+4*meter}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 6+4*meter+C (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!), C (+/+!) [not solved]

applying transformation rule (C) using substitution {C==1}
resulting limit problem:
6+4*meter (+/+!), 1 (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (B), deleting 1 (+/+!)
resulting limit problem:
6+4*meter (+/+!), 7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+/+!), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 6+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
7+4*meter (+/+!), 3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 7+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3+3*meter (+), 4+4*meter (+/+!), 5+4*meter (+/+!), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 3+3*meter (+) by 3*meter (+)
resulting limit problem:
4+4*meter (+/+!), 5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 4+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
5+4*meter (+/+!), 3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 5+4*meter (+/+!) by 4*meter (+)
resulting limit problem:
3*meter (+), 9+8*meter (+/+!), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 9+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), 7+8*meter (+/+!), free_30 (+/+!) [not solved]

applying transformation rule (D), replacing 7+8*meter (+/+!) by 8*meter (+)
resulting limit problem:
8*meter (+), 3*meter (+), 4*meter (+), free_30 (+/+!) [not solved]

applying transformation rule (A), replacing 8*meter (+) by meter (+) and 8 (+!) using + limit vector (+,+!)
resulting limit problem:
8 (+!), meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (B), deleting 8 (+!)
resulting limit problem:
meter (+), 3*meter (+), 4*meter (+), free_30 (+) [not solved]

applying transformation rule (C) using substitution {meter==free_30}
resulting limit problem:
4*free_30 (+), free_30 (+), 3*free_30 (+) [not solved]

applying transformation rule (A), replacing 4*free_30 (+) by free_30 (+) and 4 (+!) using + limit vector (+,+!)
resulting limit problem:
4 (+!), free_30 (+), 3*free_30 (+) [not solved]

applying transformation rule (B), deleting 4 (+!)
resulting limit problem:
free_30 (+), 3*free_30 (+) [not solved]

applying transformation rule (A), replacing 3*free_30 (+) by free_30 (+) and 3 (+!) using + limit vector (+,+!)
resulting limit problem:
3 (+!), free_30 (+) [not solved]

applying transformation rule (B), deleting 3 (+!)
resulting limit problem:
free_30 (+) [solved]

Solution:
meter / n
D / 6+4*n
free_30 / 1
C / 1
Found new complexity n^1, because: Solved the initial limit problem.


The final runtime is determined by this resulting transition:
  Final Guard: D>=1 && D+C>=1 && C>=1 && 0==0 && -1+D>=1 && -2+D>=1 && free_30>=1 && -3+2*D>=1 && 0==0 && -2+D>=-2+D && -2+D>=1 && -5+2*D>=1 && 1==1 && -6+D>=1 && 4*meter==-6+D
  Final Cost:  3+3*n

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: n^1
  Complexity value: 1

WORST_CASE(Omega(n^1),?)
