Trying to load file: nestedLoop_2.koat

Initial Control flow graph problem:
  Start location: start0
      0: start -> stop : [ 0>=1+A && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
      1: start -> stop : [ 0>=1+E && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
      2: start -> stop : [ 0>=1+C && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
      3: start -> stop : J'=0, [ A>=0 && E>=0 && B==0 && C==0 && D==E && F==G && H==Q && J==K && L==A ], cost: 1
      4: start -> lbl131 : H'=0, J'=1, [ A>=0 && C>=1 && D==0 && B==C && E==0 && F==G && H==Q && J==K && L==A ], cost: 1
      5: start -> lbl121 : F'=0, H'=1, J'=0, [ E>=1 && C>=1 && L==0 && B==C && D==E && F==G && H==Q && J==K && A==0 ], cost: 1
      6: start -> lbl111 : F'=1, H'=1, J'=0, [ A>=1 && E>=1 && C>=1 && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
      7: lbl131 -> stop : [ J>=C && E>=0 && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
      8: lbl131 -> lbl131 : H'=0, J'=1+J, [ C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==0 && D==0 && L==A && E==0 && B==C ], cost: 1
      9: lbl131 -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && E>=0 && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     10: lbl131 -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && E>=0 && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     11: lbl121 -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     12: lbl121 -> lbl121 : F'=J, H'=1+H, [ E>=1+H && F>=A && A+C>=1+F && A>=0 && E>=H && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     13: lbl121 -> lbl111 : F'=1+J, H'=1+H, [ A>=1+F && E>=1+H && A+C>=1+F && A>=0 && E>=H && F>=A && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     14: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     15: lbl111 -> lbl111 : F'=1+F, [ A>=1+F && F>=1+J && E>=1 && J>=0 && A>=F && C>=1+J && H==1 && L==A && D==E && B==C ], cost: 1
     16: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=K, L'=A, [], cost: 1


Simplified the transitions:
  Start location: start0
      4: start -> lbl131 : H'=0, J'=1, [ A>=0 && C>=1 && D==0 && B==C && E==0 && F==G && H==Q && J==K && L==A ], cost: 1
      5: start -> lbl121 : F'=0, H'=1, J'=0, [ E>=1 && C>=1 && L==0 && B==C && D==E && F==G && H==Q && J==K && A==0 ], cost: 1
      6: start -> lbl111 : F'=1, H'=1, J'=0, [ A>=1 && E>=1 && C>=1 && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
      8: lbl131 -> lbl131 : H'=0, J'=1+J, [ C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==0 && D==0 && L==A && E==0 && B==C ], cost: 1
      9: lbl131 -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     10: lbl131 -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     11: lbl121 -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     12: lbl121 -> lbl121 : F'=J, H'=1+H, [ E>=1+H && F>=A && A+C>=1+F && A>=0 && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     13: lbl121 -> lbl111 : F'=1+J, H'=1+H, [ A>=1+F && E>=1+H && A+C>=1+F && A>=0 && F>=A && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     14: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     15: lbl111 -> lbl111 : F'=1+F, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && H==1 && L==A && D==E && B==C ], cost: 1
     16: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=K, L'=A, [], cost: 1


Try instantiation
  Start location: start0
      4: start -> lbl131 : H'=0, J'=1, [ A>=0 && C>=1 && D==0 && B==C && E==0 && F==G && H==Q && J==K && L==A ], cost: 1
      5: start -> lbl121 : F'=0, H'=1, J'=0, [ E>=1 && C>=1 && L==0 && B==C && D==E && F==G && H==Q && J==K && A==0 ], cost: 1
      6: start -> lbl111 : F'=1, H'=1, J'=0, [ A>=1 && E>=1 && C>=1 && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
     17: lbl131 -> lbl131 : H'=0, J'=C, [ C>=1+J && J>=1 && H<=0 && H>=0 && A>=0 && D<=0 && L<=A && E<=0 && B<=C && D>=0 && L>=A && E>=0 && B>=C ], cost: C-J
      9: lbl131 -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     10: lbl131 -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     11: lbl121 -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     12: lbl121 -> lbl121 : F'=J, H'=1+H, [ E>=1+H && F>=A && A+C>=1+F && A>=0 && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     13: lbl121 -> lbl111 : F'=1+J, H'=1+H, [ A>=1+F && E>=1+H && A+C>=1+F && A>=0 && F>=A && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     14: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     15: lbl111 -> lbl111 : F'=1+F, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && H==1 && L==A && D==E && B==C ], cost: 1
     16: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=K, L'=A, [], cost: 1

Eliminating 1 self-loops for location lbl131
  Removing the self-loops: 17.
Adding an epsilon transition (to model nonexecution of the loops): 19.

Try instantiation
  Start location: start0
      4: start -> lbl131 : H'=0, J'=1, [ A>=0 && C>=1 && D==0 && B==C && E==0 && F==G && H==Q && J==K && L==A ], cost: 1
      5: start -> lbl121 : F'=0, H'=1, J'=0, [ E>=1 && C>=1 && L==0 && B==C && D==E && F==G && H==Q && J==K && A==0 ], cost: 1
      6: start -> lbl111 : F'=1, H'=1, J'=0, [ A>=1 && E>=1 && C>=1 && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
     18: lbl131 -> [6] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     19: lbl131 -> [6] : [], cost: 0
     11: lbl121 -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     20: lbl121 -> lbl121 : F'=J, H'=E, [ E>=1+H && H>=1 && J<=F && J>=F && J>=A && A+C>=1+J && A>=0 && L<=A && D<=E && B<=C && L>=A && D>=E && B>=C ], cost: E-H
     13: lbl121 -> lbl111 : F'=1+J, H'=1+H, [ A>=1+F && E>=1+H && A+C>=1+F && A>=0 && F>=A && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     14: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     15: lbl111 -> lbl111 : F'=1+F, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && H==1 && L==A && D==E && B==C ], cost: 1
     16: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=K, L'=A, [], cost: 1
      9: [6] -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     10: [6] -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1

Eliminating 1 self-loops for location lbl121
  Removing the self-loops: 20.
Adding an epsilon transition (to model nonexecution of the loops): 22.

Try instantiation
  Start location: start0
      4: start -> lbl131 : H'=0, J'=1, [ A>=0 && C>=1 && D==0 && B==C && E==0 && F==G && H==Q && J==K && L==A ], cost: 1
      5: start -> lbl121 : F'=0, H'=1, J'=0, [ E>=1 && C>=1 && L==0 && B==C && D==E && F==G && H==Q && J==K && A==0 ], cost: 1
      6: start -> lbl111 : F'=1, H'=1, J'=0, [ A>=1 && E>=1 && C>=1 && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
     18: lbl131 -> [6] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     19: lbl131 -> [6] : [], cost: 0
     21: lbl121 -> [7] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     22: lbl121 -> [7] : [], cost: 0
     14: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     23: lbl111 -> lbl111 : F'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && H<=1 && L<=A && D<=E && B<=C && H>=1 && L>=A && D>=E && B>=C ], cost: -F+A
     16: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=K, L'=A, [], cost: 1
      9: [6] -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     10: [6] -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     11: [7] -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     13: [7] -> lbl111 : F'=1+J, H'=1+H, [ A>=1+F && E>=1+H && A+C>=1+F && A>=0 && F>=A && H>=1 && J==F && L==A && D==E && B==C ], cost: 1

Eliminating 1 self-loops for location lbl111
  Removing the self-loops: 23.
Adding an epsilon transition (to model nonexecution of the loops): 25.

Removed all Self-loops using metering functions (where possible):
  Start location: start0
      4: start -> lbl131 : H'=0, J'=1, [ A>=0 && C>=1 && D==0 && B==C && E==0 && F==G && H==Q && J==K && L==A ], cost: 1
      5: start -> lbl121 : F'=0, H'=1, J'=0, [ E>=1 && C>=1 && L==0 && B==C && D==E && F==G && H==Q && J==K && A==0 ], cost: 1
      6: start -> lbl111 : F'=1, H'=1, J'=0, [ A>=1 && E>=1 && C>=1 && B==C && D==E && F==G && H==Q && J==K && L==A ], cost: 1
     18: lbl131 -> [6] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     19: lbl131 -> [6] : [], cost: 0
     21: lbl121 -> [7] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     22: lbl121 -> [7] : [], cost: 0
     24: lbl111 -> [8] : F'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && -1+H==0 && L-A==0 && D-E==0 && B-C==0 ], cost: -F+A
     25: lbl111 -> [8] : [], cost: 0
     16: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=K, L'=A, [], cost: 1
      9: [6] -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     10: [6] -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     11: [7] -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     13: [7] -> lbl111 : F'=1+J, H'=1+H, [ A>=1+F && E>=1+H && A+C>=1+F && A>=0 && F>=A && H>=1 && J==F && L==A && D==E && B==C ], cost: 1
     14: [8] -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1


Applied chaining over branches and pruning:
  Start location: start0
     31: lbl131 -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     32: lbl131 -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     29: lbl131 -> [9] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     30: lbl131 -> [10] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     33: lbl121 -> lbl131 : F'=J, H'=E, J'=1+J, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 && A+C>=1+J && A>=0 && J>=A && E>=1 && E==E && J==J && L==A && D==E && B==C ], cost: 1+E-H
     35: lbl121 -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     34: lbl121 -> [11] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     36: lbl111 -> lbl121 : F'=A, J'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && -1+H==0 && L-A==0 && D-E==0 && B-C==0 && A>=1+J && E>=1 && J>=0 && C>=1+J && A==A && H==1 && L==A && D==E && B==C ], cost: 1-F+A
     37: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     26: start0 -> lbl131 : B'=C, D'=E, F'=G, H'=0, J'=1, L'=A, [ A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A ], cost: 2
     27: start0 -> lbl121 : B'=C, D'=E, F'=0, H'=1, J'=0, L'=A, [ E>=1 && C>=1 && A==0 && C==C && E==E && G==G && Q==Q && K==K && A==0 ], cost: 2
     28: start0 -> lbl111 : B'=C, D'=E, F'=1, H'=1, J'=0, L'=A, [ A>=1 && E>=1 && C>=1 && C==C && E==E && G==G && Q==Q && K==K && A==A ], cost: 2


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start0
     31: lbl131 -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     32: lbl131 -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     29: lbl131 -> [9] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     30: lbl131 -> [10] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     33: lbl121 -> lbl131 : F'=J, H'=E, J'=1+J, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 && A+C>=1+J && A>=0 && J>=A && E>=1 && E==E && J==J && L==A && D==E && B==C ], cost: 1+E-H
     35: lbl121 -> lbl131 : J'=1+J, [ A+C>=1+F && A>=0 && F>=A && E>=1 && H==E && J==F && L==A && D==E && B==C ], cost: 1
     34: lbl121 -> [11] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     36: lbl111 -> lbl121 : F'=A, J'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && -1+H==0 && L-A==0 && D-E==0 && B-C==0 && A>=1+J && E>=1 && J>=0 && C>=1+J && A==A && H==1 && L==A && D==E && B==C ], cost: 1-F+A
     37: lbl111 -> lbl121 : J'=F, [ A>=1+J && E>=1 && J>=0 && C>=1+J && F==A && H==1 && L==A && D==E && B==C ], cost: 1
     26: start0 -> lbl131 : B'=C, D'=E, F'=G, H'=0, J'=1, L'=A, [ A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A ], cost: 2
     27: start0 -> lbl121 : B'=C, D'=E, F'=0, H'=1, J'=0, L'=A, [ E>=1 && C>=1 && A==0 && C==C && E==E && G==G && Q==Q && K==K && A==0 ], cost: 2
     28: start0 -> lbl111 : B'=C, D'=E, F'=1, H'=1, J'=0, L'=A, [ A>=1 && E>=1 && C>=1 && C==C && E==E && G==G && Q==Q && K==K && A==A ], cost: 2

This is only a partial result (probably due to a timeout), trying to find max complexity

Removed transitions with const cost
  Start location: start0
     31: lbl131 -> lbl121 : F'=J, H'=1, [ E>=1 && C>=1+J && J>=A && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     32: lbl131 -> lbl111 : F'=1+J, H'=1, [ A>=1+J && E>=1 && C>=1+J && A>=0 && C>=1 && A+C>=J && J>=1 && H==E && L==A && D==E && B==C ], cost: 1
     29: lbl131 -> [9] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     30: lbl131 -> [10] : H'=0, J'=C, [ C>=1+J && J>=1 && H==0 && A>=0 && D==0 && L-A==0 && E==0 && B-C==0 ], cost: C-J
     33: lbl121 -> lbl131 : F'=J, H'=E, J'=1+J, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 && A+C>=1+J && A>=0 && J>=A && E>=1 && E==E && J==J && L==A && D==E && B==C ], cost: 1+E-H
     34: lbl121 -> [11] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     36: lbl111 -> lbl121 : F'=A, J'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && -1+H==0 && L-A==0 && D-E==0 && B-C==0 && A>=1+J && E>=1 && J>=0 && C>=1+J && A==A && H==1 && L==A && D==E && B==C ], cost: 1-F+A
     26: start0 -> lbl131 : B'=C, D'=E, F'=G, H'=0, J'=1, L'=A, [ A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A ], cost: 2

Performed chaining from the start location:
  Start location: start0
     33: lbl121 -> lbl131 : F'=J, H'=E, J'=1+J, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 && A+C>=1+J && A>=0 && J>=A && E>=1 && E==E && J==J && L==A && D==E && B==C ], cost: 1+E-H
     34: lbl121 -> [11] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     36: lbl111 -> lbl121 : F'=A, J'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && -1+H==0 && L-A==0 && D-E==0 && B-C==0 && A>=1+J && E>=1 && J>=0 && C>=1+J && A==A && H==1 && L==A && D==E && B==C ], cost: 1-F+A
     38: start0 -> [9] : B'=C, D'=E, F'=G, H'=0, J'=C, L'=A, [ A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A && C>=2 && 1>=1 && 0==0 && A>=0 && E==0 && 0==0 && E==0 && 0==0 ], cost: 1+C
     39: start0 -> [10] : B'=C, D'=E, F'=G, H'=0, J'=C, L'=A, [ A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A && C>=2 && 1>=1 && 0==0 && A>=0 && E==0 && 0==0 && E==0 && 0==0 ], cost: 1+C

  Found configuration with infinitely models for cost: 1+C
  and guard: A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A && C>=2 && 1>=1 && 0==0 && A>=0 && E==0 && 0==0 && E==0 && 0==0:
  Q: Both, K: Both, E: Both, G: Both, A: Pos, C: Pos

Found new complexity n^1, because: Found infinity configuration.

Performed chaining from the start location:
  Start location: start0
     33: lbl121 -> lbl131 : F'=J, H'=E, J'=1+J, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 && A+C>=1+J && A>=0 && J>=A && E>=1 && E==E && J==J && L==A && D==E && B==C ], cost: 1+E-H
     34: lbl121 -> [11] : F'=J, H'=E, [ E>=1+H && H>=1 && -F+J==0 && J>=A && A+C>=1+J && A>=0 && L-A==0 && D-E==0 && B-C==0 ], cost: E-H
     36: lbl111 -> lbl121 : F'=A, J'=A, [ A>=1+F && F>=1+J && E>=1 && J>=0 && C>=1+J && -1+H==0 && L-A==0 && D-E==0 && B-C==0 && A>=1+J && E>=1 && J>=0 && C>=1+J && A==A && H==1 && L==A && D==E && B==C ], cost: 1-F+A


The final runtime is determined by this resulting transition:
  Final Guard: A>=0 && C>=1 && E==0 && C==C && E==0 && G==G && Q==Q && K==K && A==A && C>=2 && 1>=1 && 0==0 && A>=0 && E==0 && 0==0 && E==0 && 0==0
  Final Cost:  1+C

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: n^1
  Complexity value: 1

WORST_CASE(Omega(n^1),?)
