Trying to load file: n-9.koat

Initial Control flow graph problem:
  Start location: f1
      1: f0 -> f0 : A'=free_2, D'=free_3, E'=0, [ B>=1+A ], cost: 1
      2: f0 -> f0 : A'=free_4, D'=free_6, E'=free_5, F'=free_7, [ 0>=1+free_5 && B>=1+A ], cost: 1
      3: f0 -> f0 : A'=free_8, D'=free_10, E'=free_9, F'=free_11, [ free_9>=1 && B>=1+A ], cost: 1
      0: f0 -> f2 : A'=free, C'=free_1, [ A>=B ], cost: 1
      4: f1 -> f0 : G'=free_12, [], cost: 1


Simplified the transitions:
  Start location: f1
      1: f0 -> f0 : A'=free_2, D'=free_3, E'=0, [ B>=1+A ], cost: 1
      2: f0 -> f0 : A'=free_4, D'=free_6, E'=free_5, F'=free_7, [ 0>=1+free_5 && B>=1+A ], cost: 1
      3: f0 -> f0 : A'=free_8, D'=free_10, E'=free_9, F'=free_11, [ free_9>=1 && B>=1+A ], cost: 1
      4: f1 -> f0 : G'=free_12, [], cost: 1


Try instantiation
  Start location: f1
      5: f0 -> f0 : [ B>=1+A ], cost: INF
      6: f0 -> f0 : [ B>=1+A ], cost: INF
      7: f0 -> f0 : [ B>=1+A ], cost: INF
      4: f1 -> f0 : G'=free_12, [], cost: 1

Eliminating 3 self-loops for location f0
  Removing the self-loops: 5 6 7.
Removing duplicate transition: 8.
Removing duplicate transition: 9.

Removed all Self-loops using metering functions (where possible):
  Start location: f1
     10: f0 -> [3] : [ B>=1+A ], cost: INF
      4: f1 -> f0 : G'=free_12, [], cost: 1


Applied simple chaining:
  Start location: f1
      4: f1 -> [3] : G'=free_12, [ B>=1+A ], cost: INF


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f1
      4: f1 -> [3] : G'=free_12, [ B>=1+A ], cost: INF


Computing complexity for remaining 1 transitions.

Found new complexity INF, because: INF sat.


The final runtime is determined by this resulting transition:
  Final Guard: B>=1+A
  Final Cost:  INF

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: INF
  Complexity value: INF

WORST_CASE(INF,?)
