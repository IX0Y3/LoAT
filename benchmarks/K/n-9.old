Trying to load file: n-9.koat

Initial Control flow graph problem:
  Start location: f1
      1: f0 -> f0 : A'=free_2, D'=free_3, E'=0, [ B>=1+A ], cost: 1
      2: f0 -> f0 : A'=free_4, D'=free_5, E'=free_6, F'=free_7, [ 0>=1+free_6 && B>=1+A ], cost: 1
      3: f0 -> f0 : A'=free_8, D'=free_9, E'=free_10, F'=free_11, [ free_10>=1 && B>=1+A ], cost: 1
      0: f0 -> f2 : A'=free, C'=free_1, [ A>=B ], cost: 1
      4: f1 -> f0 : G'=free_12, [], cost: 1


Simplified the transitions:
  Start location: f1
      1: f0 -> f0 : A'=free_2, D'=free_3, E'=0, [ B>=1+A ], cost: 1
      2: f0 -> f0 : A'=free_4, D'=free_5, E'=free_6, F'=free_7, [ 0>=1+free_6 && B>=1+A ], cost: 1
      3: f0 -> f0 : A'=free_8, D'=free_9, E'=free_10, F'=free_11, [ free_10>=1 && B>=1+A ], cost: 1
      4: f1 -> f0 : G'=free_12, [], cost: 1

Eliminating 3 self-loops for location f0
  Removing the self-loops: 1 2 3.

Accelerated all simple loops using metering functions (where possible):
  Start location: f1
      5: f0 -> f0 : A'=free_2, D'=free_3, E'=0, [ B>=1+A ], cost: 1
      6: f0 -> f0 : A'=free_4, D'=free_5, E'=free_6, F'=free_7, [ 0>=1+free_6 && B>=1+A ], cost: 1
      7: f0 -> f0 : A'=free_8, D'=free_9, E'=free_10, F'=free_11, [ free_10>=1 && B>=1+A ], cost: 1
      4: f1 -> f0 : G'=free_12, [], cost: 1


Chained simpled loops:
  Start location: f1
      4: f1 -> f0 : G'=free_12, [], cost: 1
      8: f1 -> f0 : A'=free_2, D'=free_3, E'=0, G'=free_12, [ B>=1+A ], cost: 2
      9: f1 -> f0 : A'=free_4, D'=free_5, E'=free_6, F'=free_7, G'=free_12, [ 0>=1+free_6 && B>=1+A ], cost: 2
     10: f1 -> f0 : A'=free_8, D'=free_9, E'=free_10, F'=free_11, G'=free_12, [ free_10>=1 && B>=1+A ], cost: 2


Pruned:
  Start location: f1
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f1
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
