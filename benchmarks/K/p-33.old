Trying to load file: p-33.koat

Initial Control flow graph problem:
  Start location: f3
      0: f2 -> f2 : A'=-1+free, [ 0>=free_1 && 0>=1+A ], cost: 1
      1: f2 -> f2 : A'=1+free_2, [ free_3>=2 && 0>=1+A ], cost: 1
      2: f2 -> f2 : A'=-1+free_4, [ 0>=2+free_5 && A>=1 ], cost: 1
      3: f2 -> f2 : A'=1+free_6, [ free_7>=0 && A>=1 ], cost: 1
      5: f2 -> f300 : A'=0, B'=free_8, [ 0>=1+A ], cost: 1
      6: f2 -> f300 : A'=0, B'=free_9, [ A>=1 ], cost: 1
      7: f2 -> f300 : B'=free_10, [ A==0 ], cost: 1
      4: f3 -> f2 : [], cost: 1


Simplified the transitions:
  Start location: f3
      0: f2 -> f2 : A'=-1+free, [ 0>=1+A ], cost: 1
      1: f2 -> f2 : A'=1+free_2, [ 0>=1+A ], cost: 1
      2: f2 -> f2 : A'=-1+free_4, [ A>=1 ], cost: 1
      3: f2 -> f2 : A'=1+free_6, [ A>=1 ], cost: 1
      4: f3 -> f2 : [], cost: 1

Eliminating 4 self-loops for location f2
  Removing the self-loops: 0 1 2 3.

Accelerated all simple loops using metering functions (where possible):
  Start location: f3
      8: f2 -> f2 : A'=-1+free, [ 0>=1+A ], cost: 1
      9: f2 -> f2 : A'=1+free_2, [ 0>=1+A ], cost: 1
     10: f2 -> f2 : A'=-1+free_4, [ A>=1 ], cost: 1
     11: f2 -> f2 : A'=1+free_6, [ A>=1 ], cost: 1
      4: f3 -> f2 : [], cost: 1


Chained simpled loops:
  Start location: f3
      4: f3 -> f2 : [], cost: 1
     12: f3 -> f2 : A'=-1+free, [ 0>=1+A ], cost: 2
     13: f3 -> f2 : A'=1+free_2, [ 0>=1+A ], cost: 2
     14: f3 -> f2 : A'=-1+free_4, [ A>=1 ], cost: 2
     15: f3 -> f2 : A'=1+free_6, [ A>=1 ], cost: 2


Pruned:
  Start location: f3
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f3
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
