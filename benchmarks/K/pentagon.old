Trying to load file: pentagon.koat

Initial Control flow graph problem:
  Start location: f1
      0: f0 -> f0 : A'=-A, B'=B+A, C'=A+C, [ 0>=1+A ], cost: 1
      1: f0 -> f0 : A'=B+A, B'=-B, D'=D+B, [ 0>=1+B ], cost: 1
      2: f0 -> f0 : B'=D+B, D'=-D, E'=D+E, [ 0>=1+D ], cost: 1
      3: f0 -> f0 : C'=E+C, D'=D+E, E'=-E, [ 0>=1+E ], cost: 1
      4: f0 -> f0 : A'=A+C, C'=-C, E'=E+C, [ 0>=1+C ], cost: 1
      5: f1 -> f0 : A'=free, B'=free_1, C'=free_2, D'=free_3, E'=free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 ], cost: 1

Eliminating 5 self-loops for location f0
  Removing the self-loops: 0 1 2 3 4.

Accelerated all simple loops using metering functions (where possible):
  Start location: f1
      6: f0 -> f0 : A'=-A, B'=B+A, C'=A+C, [ 0>=1+A ], cost: 1
      7: f0 -> f0 : A'=B+A, B'=-B, D'=D+B, [ 0>=1+B ], cost: 1
      8: f0 -> f0 : B'=D+B, D'=-D, E'=D+E, [ 0>=1+D ], cost: 1
      9: f0 -> f0 : C'=E+C, D'=D+E, E'=-E, [ 0>=1+E ], cost: 1
     10: f0 -> f0 : A'=A+C, C'=-C, E'=E+C, [ 0>=1+C ], cost: 1
      5: f1 -> f0 : A'=free, B'=free_1, C'=free_2, D'=free_3, E'=free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 ], cost: 1


Chained simpled loops:
  Start location: f1
      5: f1 -> f0 : A'=free, B'=free_1, C'=free_2, D'=free_3, E'=free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 ], cost: 1
     11: f1 -> f0 : A'=-free, B'=free+free_1, C'=free+free_2, D'=free_3, E'=free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 && 0>=1+free ], cost: 2
     12: f1 -> f0 : A'=free+free_1, B'=-free_1, C'=free_2, D'=free_3+free_1, E'=free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 && 0>=1+free_1 ], cost: 2
     13: f1 -> f0 : A'=free, B'=free_3+free_1, C'=free_2, D'=-free_3, E'=free_3+free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 && 0>=1+free_3 ], cost: 2
     14: f1 -> f0 : A'=free, B'=free_1, C'=free_4+free_2, D'=free_3+free_4, E'=-free_4, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 && 0>=1+free_4 ], cost: 2
     15: f1 -> f0 : A'=free+free_2, B'=free_1, C'=-free_2, D'=free_3, E'=free_4+free_2, F'=free_3+free_4+free+free_2+free_1, [ free_3+free_4+free+free_2+free_1>=1 && 0>=1+free_2 ], cost: 2


Pruned:
  Start location: f1
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f1
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
