Trying to load file: n-48.koat

Initial Control flow graph problem:
  Start location: f5
      0: f4 -> f4 : A'=A-B, [ A>=0 ], cost: 1
      1: f4 -> f6 : C'=0, D'=0, E'=0, F'=0, G'=0, [ 0>=1+A ], cost: 1
      2: f5 -> f4 : [ 0>=1+B ], cost: 1
      3: f5 -> f6 : C'=0, D'=0, E'=0, F'=0, G'=0, [ B>=0 ], cost: 1


Simplified the transitions:
  Start location: f5
      0: f4 -> f4 : A'=A-B, [ A>=0 ], cost: 1
      2: f5 -> f4 : [ 0>=1+B ], cost: 1


Try instantiation
  Start location: f5
      4: f4 -> f4 : [ A>=0 && B<=-1 && B>=-1 ], cost: INF
      5: f4 -> f4 : A'=-1, [ A>=0 && B<=1 && B>=1 ], cost: 1+A
      2: f5 -> f4 : [ 0>=1+B ], cost: 1

Eliminating 2 self-loops for location f4
  Removing the self-loops: 4 5.
Adding an epsilon transition (to model nonexecution of the loops): 8.

Removed all Self-loops using metering functions (where possible):
  Start location: f5
      6: f4 -> [3] : [ A>=0 && B<=-1 && B>=-1 ], cost: INF
      7: f4 -> [3] : A'=-1, [ A>=0 && -1+B==0 ], cost: 1+A
      8: f4 -> [3] : [], cost: 0
      2: f5 -> f4 : [ 0>=1+B ], cost: 1


Applied chaining over branches and pruning:
  Start location: f5
      9: f5 -> [3] : [ 0>=1+B && A>=0 && B<=-1 && B>=-1 ], cost: INF


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f5
      9: f5 -> [3] : [ 0>=1+B && A>=0 && B<=-1 && B>=-1 ], cost: INF


Computing complexity for remaining 1 transitions.

Found new complexity INF, because: INF sat.


The final runtime is determined by this resulting transition:
  Final Guard: 0>=1+B && A>=0 && B<=-1 && B>=-1
  Final Cost:  INF

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: INF
  Complexity value: INF

WORST_CASE(INF,?)
