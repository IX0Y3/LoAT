Trying to load file: a.02.koat

Initial Control flow graph problem:
  Start location: start
      0: eval -> eval : A'=free, [ A>=0 && B>=0 && B>=1+A && B+A>=2*free_1 && 3*free_1>=1+B+A && free>=1+free_1 && B+A>=2*free_2 && 3*free_2>=1+B+A && 1+free_2>=free ], cost: 1
      1: eval -> eval : B'=free_3, [ A>=0 && B>=0 && B>=1+A && B+A>=2*free_4 && 3*free_4>=1+B+A && free_3>=free_4 && B+A>=2*free_5 && 3*free_5>=1+B+A && free_5>=free_3 ], cost: 1
      2: start -> eval : [], cost: 1

Eliminating 2 self-loops for location eval
  Removing the self-loops: 0 1.

Accelerated all simple loops using metering functions (where possible):
  Start location: start
      3: eval -> eval : A'=free, [ A>=0 && B>=0 && B>=1+A && B+A>=2*free_1 && 3*free_1>=1+B+A && free>=1+free_1 && B+A>=2*free_2 && 3*free_2>=1+B+A && 1+free_2>=free ], cost: 1
      4: eval -> eval : B'=free_3, [ A>=0 && B>=0 && B>=1+A && B+A>=2*free_4 && 3*free_4>=1+B+A && free_3>=free_4 && B+A>=2*free_5 && 3*free_5>=1+B+A && free_5>=free_3 ], cost: 1
      2: start -> eval : [], cost: 1


Chained simpled loops:
  Start location: start
      2: start -> eval : [], cost: 1
      5: start -> eval : A'=free, [ A>=0 && B>=0 && B>=1+A && B+A>=2*free_1 && 3*free_1>=1+B+A && free>=1+free_1 && B+A>=2*free_2 && 3*free_2>=1+B+A && 1+free_2>=free ], cost: 2
      6: start -> eval : B'=free_3, [ A>=0 && B>=0 && B>=1+A && B+A>=2*free_4 && 3*free_4>=1+B+A && free_3>=free_4 && B+A>=2*free_5 && 3*free_5>=1+B+A && free_5>=free_3 ], cost: 2


Pruned:
  Start location: start
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
