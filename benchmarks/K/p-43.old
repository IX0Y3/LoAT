Trying to load file: p-43.koat

Initial Control flow graph problem:
  Start location: f2
      0: f2 -> f300 : [], cost: 1
      1: f300 -> f300 : A'=-1+B, B'=-1+B, C'=free, [ A>=1 && B>=1 && free>=1 && B+A>=1 ], cost: 1
      2: f300 -> f300 : A'=-1+B, B'=-1+B, C'=free_1, [ A>=1 && B>=1 && 0>=1+free_1 && B+A>=1 ], cost: 1
      3: f300 -> f300 : A'=-1+A, B'=-2+A, C'=0, [ A>=1 && B+A>=1 && B>=1 ], cost: 1
      4: f300 -> f1 : D'=free_2, [ A>=1 && 0>=B+A && B>=1 ], cost: 1
      5: f300 -> f1 : D'=free_3, [ B>=1 && 0>=A ], cost: 1
      6: f300 -> f1 : D'=free_4, [ 0>=B ], cost: 1


Simplified the transitions:
  Start location: f2
      0: f2 -> f300 : [], cost: 1
      1: f300 -> f300 : A'=-1+B, B'=-1+B, C'=free, [ A>=1 && B>=1 && free>=1 ], cost: 1
      2: f300 -> f300 : A'=-1+B, B'=-1+B, C'=free_1, [ A>=1 && B>=1 && 0>=1+free_1 ], cost: 1
      3: f300 -> f300 : A'=-1+A, B'=-2+A, C'=0, [ A>=1 && B+A>=1 && B>=1 ], cost: 1

Eliminating 3 self-loops for location f300
  Removing the self-loops: 1 2 3.

Accelerated all simple loops using metering functions (where possible):
  Start location: f2
      0: f2 -> f300 : [], cost: 1
      7: f300 -> f300 : A'=-1+B, B'=-1+B, C'=free, [ A>=1 && B>=1 && free>=1 ], cost: 1
      8: f300 -> f300 : A'=-1+B, B'=-1+B, C'=free_1, [ A>=1 && B>=1 && 0>=1+free_1 ], cost: 1
      9: f300 -> f300 : A'=-1+A, B'=-2+A, C'=0, [ A>=1 && B+A>=1 && B>=1 ], cost: 1


Chained simpled loops:
  Start location: f2
      0: f2 -> f300 : [], cost: 1
     10: f2 -> f300 : A'=-1+B, B'=-1+B, C'=free, [ A>=1 && B>=1 && free>=1 ], cost: 2
     11: f2 -> f300 : A'=-1+B, B'=-1+B, C'=free_1, [ A>=1 && B>=1 && 0>=1+free_1 ], cost: 2
     12: f2 -> f300 : A'=-1+A, B'=-2+A, C'=0, [ A>=1 && B+A>=1 && B>=1 ], cost: 2


Pruned:
  Start location: f2
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f2
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
