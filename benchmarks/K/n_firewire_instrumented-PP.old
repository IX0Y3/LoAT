Trying to load file: n_firewire_instrumented-PP.koat

Initial Control flow graph problem:
  Start location: f0
      0: f38 -> f11 : B'=A, [ A==B ], cost: 1
     12: f38 -> f11 : G'=-1+G, [ B>=1+A ], cost: 1
     13: f38 -> f11 : G'=-1+G, [ A>=1+B ], cost: 1
      2: f11 -> f34 : A'=0, B'=free_2, D'=1+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D ], cost: 1
      3: f11 -> f34 : A'=1, B'=free_3, D'=1+D, [ free_3>=0 && 1>=free_3 && G>=1 && 0>=C && D==1 ], cost: 1
      4: f11 -> f34 : A'=0, B'=free_4, D'=1+D, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 ], cost: 1
      5: f11 -> f34 : A'=free_5, B'=free_6, C'=free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 ], cost: 1
      6: f11 -> f34 : A'=free_8, B'=free_9, C'=-1+C, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 ], cost: 1
     14: f11 -> f53 : [ 0>=G ], cost: 1
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1
      7: f34 -> f38 : D'=1+D, [ 0>=B && 0>=C && 0>=D ], cost: 1
      8: f34 -> f38 : D'=1+D, [ B>=1 && 0>=C && D==1 ], cost: 1
      9: f34 -> f38 : D'=1+D, [ 0>=B && 0>=C && D==2 ], cost: 1
     10: f34 -> f38 : C'=free_10, D'=0, E'=1+E, [ free_10>=0 && 0>=C && D>=3 ], cost: 1
     11: f34 -> f38 : C'=-1+C, [ C>=1 ], cost: 1


Simplified the transitions:
  Start location: f0
      0: f38 -> f11 : B'=A, [ A==B ], cost: 1
     12: f38 -> f11 : G'=-1+G, [ B>=1+A ], cost: 1
     13: f38 -> f11 : G'=-1+G, [ A>=1+B ], cost: 1
      2: f11 -> f34 : A'=0, B'=free_2, D'=1+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D ], cost: 1
      3: f11 -> f34 : A'=1, B'=free_3, D'=1+D, [ free_3>=0 && 1>=free_3 && G>=1 && 0>=C && D==1 ], cost: 1
      4: f11 -> f34 : A'=0, B'=free_4, D'=1+D, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 ], cost: 1
      5: f11 -> f34 : A'=free_5, B'=free_6, C'=free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 ], cost: 1
      6: f11 -> f34 : A'=free_8, B'=free_9, C'=-1+C, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 ], cost: 1
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1
      7: f34 -> f38 : D'=1+D, [ 0>=B && 0>=C && 0>=D ], cost: 1
      8: f34 -> f38 : D'=1+D, [ B>=1 && 0>=C && D==1 ], cost: 1
      9: f34 -> f38 : D'=1+D, [ 0>=B && 0>=C && D==2 ], cost: 1
     10: f34 -> f38 : C'=free_10, D'=0, E'=1+E, [ free_10>=0 && 0>=C && D>=3 ], cost: 1
     11: f34 -> f38 : C'=-1+C, [ C>=1 ], cost: 1


Eliminated locations (branches):
  Start location: f0
      0: f38 -> f11 : B'=A, [ A==B ], cost: 1
     12: f38 -> f11 : G'=-1+G, [ B>=1+A ], cost: 1
     13: f38 -> f11 : G'=-1+G, [ A>=1+B ], cost: 1
     15: f11 -> f38 : A'=0, B'=free_2, D'=2+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && 0>=free_2 && 0>=C && 0>=1+D ], cost: 2
     16: f11 -> f38 : A'=0, B'=free_2, D'=2+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && free_2>=1 && 0>=C && 1+D==1 ], cost: 2
     17: f11 -> f38 : A'=1, B'=free_3, D'=2+D, [ free_3>=0 && 1>=free_3 && G>=1 && 0>=C && D==1 && 0>=free_3 && 0>=C && 1+D==2 ], cost: 2
     18: f11 -> f38 : A'=0, B'=free_4, C'=free_10, D'=0, E'=1+E, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 && free_10>=0 && 0>=C && 1+D>=3 ], cost: 2
     19: f11 -> f38 : A'=free_5, B'=free_6, C'=free_7, D'=1, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && 0>=free_6 && 0>=free_7 && 0>=0 ], cost: 2
     20: f11 -> f38 : A'=free_5, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 ], cost: 2
     21: f11 -> f38 : A'=free_8, B'=free_9, C'=-1+C, D'=1+D, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && 0>=free_9 && 0>=-1+C && 0>=D ], cost: 2
     22: f11 -> f38 : A'=free_8, B'=free_9, C'=-1+C, D'=1+D, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && free_9>=1 && 0>=-1+C && D==1 ], cost: 2
     23: f11 -> f38 : A'=free_8, B'=free_9, C'=-1+C, D'=1+D, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && 0>=free_9 && 0>=-1+C && D==2 ], cost: 2
     24: f11 -> f38 : A'=free_8, B'=free_9, C'=free_10, D'=0, E'=1+E, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && free_10>=0 && 0>=-1+C && D>=3 ], cost: 2
     25: f11 -> f38 : A'=free_8, B'=free_9, C'=-2+C, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && -1+C>=1 ], cost: 2
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1


Pruned:
  Start location: f0
      0: f38 -> f11 : B'=A, [ A==B ], cost: 1
     12: f38 -> f11 : G'=-1+G, [ B>=1+A ], cost: 1
     13: f38 -> f11 : G'=-1+G, [ A>=1+B ], cost: 1
     15: f11 -> f38 : A'=0, B'=free_2, D'=2+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && 0>=free_2 && 0>=C && 0>=1+D ], cost: 2
     16: f11 -> f38 : A'=0, B'=free_2, D'=2+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && free_2>=1 && 0>=C && 1+D==1 ], cost: 2
     18: f11 -> f38 : A'=0, B'=free_4, C'=free_10, D'=0, E'=1+E, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 && free_10>=0 && 0>=C && 1+D>=3 ], cost: 2
     20: f11 -> f38 : A'=free_5, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 ], cost: 2
     21: f11 -> f38 : A'=free_8, B'=free_9, C'=-1+C, D'=1+D, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && 0>=free_9 && 0>=-1+C && 0>=D ], cost: 2
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1


Eliminated locations (branches):
  Start location: f0
     26: f11 -> f11 : A'=0, B'=0, D'=2+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && 0>=free_2 && 0>=C && 0>=1+D && 0==free_2 ], cost: 3
     27: f11 -> f11 : A'=0, B'=free_2, D'=2+D, G'=-1+G, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && free_2>=1 && 0>=C && 1+D==1 && free_2>=1 ], cost: 3
     28: f11 -> f11 : A'=0, B'=0, C'=free_10, D'=0, E'=1+E, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 && free_10>=0 && 0>=C && 1+D>=3 && 0==free_4 ], cost: 3
     29: f11 -> f11 : A'=0, B'=free_4, C'=free_10, D'=0, E'=1+E, G'=-1+G, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 && free_10>=0 && 0>=C && 1+D>=3 && free_4>=1 ], cost: 3
     30: f11 -> f11 : A'=free_5, B'=free_5, C'=-1+free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 && free_5==free_6 ], cost: 3
     31: f11 -> f11 : A'=free_5, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, G'=-1+G, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 && free_6>=1+free_5 ], cost: 3
     32: f11 -> f11 : A'=free_5, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, G'=-1+G, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 && free_5>=1+free_6 ], cost: 3
     33: f11 -> f11 : A'=free_8, B'=free_8, C'=-1+C, D'=1+D, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && 0>=free_9 && 0>=-1+C && 0>=D && free_8==free_9 ], cost: 3
     34: f11 -> f11 : A'=free_8, B'=free_9, C'=-1+C, D'=1+D, G'=-1+G, [ free_9>=0 && 1>=free_9 && free_8>=0 && 1>=free_8 && C>=1 && G>=1 && 0>=free_9 && 0>=-1+C && 0>=D && free_8>=1+free_9 ], cost: 3
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1


Pruned:
  Start location: f0
     26: f11 -> f11 : A'=0, B'=0, D'=2+D, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && 0>=free_2 && 0>=C && 0>=1+D && 0==free_2 ], cost: 3
     27: f11 -> f11 : A'=0, B'=free_2, D'=2+D, G'=-1+G, [ free_2>=0 && 1>=free_2 && G>=1 && 0>=C && 0>=D && free_2>=1 && 0>=C && 1+D==1 && free_2>=1 ], cost: 3
     29: f11 -> f11 : A'=0, B'=free_4, C'=free_10, D'=0, E'=1+E, G'=-1+G, [ free_4>=0 && 1>=free_4 && G>=1 && 0>=C && D==2 && free_10>=0 && 0>=C && 1+D>=3 && free_4>=1 ], cost: 3
     30: f11 -> f11 : A'=free_5, B'=free_5, C'=-1+free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 && free_5==free_6 ], cost: 3
     32: f11 -> f11 : A'=free_5, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, G'=-1+G, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && free_7>=0 && G>=1 && 0>=C && D>=3 && free_7>=1 && free_5>=1+free_6 ], cost: 3
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1

Eliminating 5 self-loops for location f11
  Self-Loop 26 has the metering function: meter, resulting in the new transition 35.
  Self-Loop 36 has unbounded runtime, resulting in the new transition 42.
  Removing the self-loops: 26 27 29 30 32 36 37.

Accelerated all simple loops using metering functions (where possible):
  Start location: f0
     35: f11 -> f11 : A'=0, B'=0, D'=D+2*meter, [ G>=1 && 0>=C && 0>=1+D && 2*meter==-D ], cost: 3*meter
     38: f11 -> f11 : A'=0, B'=1, D'=2+D, G'=-1+G, [ G>=1 && 0>=C && 1+D==1 ], cost: 3
     39: f11 -> f11 : A'=0, B'=1, C'=free_10, D'=0, E'=1+E, G'=-1+G, [ G>=1 && 0>=C && D==2 && free_10>=0 ], cost: 3
     40: f11 -> f11 : A'=free_6, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, [ free_6>=0 && 1>=free_6 && free_6>=0 && 1>=free_6 && G>=1 && 0>=C && D>=3 && free_7>=1 ], cost: 3
     41: f11 -> f11 : A'=free_5, B'=free_6, C'=-1+free_7, D'=0, E'=1+E, G'=-1+G, [ free_6>=0 && 1>=free_6 && free_5>=0 && 1>=free_5 && G>=1 && 0>=C && D>=3 && free_7>=1 && free_5>=1+free_6 ], cost: 3
     42: f11 -> f11 : [ G>=1 && 0>=C && 1+D==1 && D>G ], cost: INF
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1


Chained simpled loops:
  Start location: f0
      1: f0 -> f11 : A'=0, B'=0, C'=free, D'=0, E'=1, F'=free_1, G'=free_1, [ free>=0 && free_1>=1 ], cost: 1
     43: f0 -> f11 : A'=0, B'=1, C'=free, D'=2, E'=1, F'=free_1, G'=-1+free_1, [ free>=0 && free_1>=1 && free_1>=1 && 0>=free && 1==1 ], cost: 4


Pruned:
  Start location: f0
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f0
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
