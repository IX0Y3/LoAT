Trying to load file: collatz.koat

Initial Control flow graph problem:
  Start location: f0
      0: f0 -> f2 : A'=free, B'=free_1, [ free>=1 && free>=5 && free>=2 && free>=3 ], cost: 1
      1: f0 -> f2 : A'=1, B'=free_2, [ 0>=4 && 0>=1 ], cost: 1
      2: f0 -> f2 : A'=free_3, B'=free_4, [ free_3>=1 && free_3>=5 && 0>=free_3 && free_3>=3 ], cost: 1
      3: f0 -> f2 : A'=1, B'=free_5, [ 0>=4 && 0>=1 ], cost: 1
      4: f0 -> f2 : A'=3, B'=free_6, [], cost: 1
      5: f0 -> f2 : A'=1, B'=free_7, [ 0>=1 ], cost: 1
      6: f0 -> f2 : A'=3, B'=free_8, [ 0>=3 ], cost: 1
      7: f0 -> f2 : A'=1, B'=free_9, [ 0>=1 ], cost: 1
      8: f2 -> f2 : A'=B, B'=free_10, [ B>=5 && B>=2 && B>=3 && A==2*B ], cost: 1
      9: f2 -> f2 : A'=B, B'=free_11, [ B>=5 && B>=2 && 1>=B && A==2*B ], cost: 1
     10: f2 -> f2 : A'=B, B'=free_12, [ B>=5 && 0>=B && B>=3 && A==2*B ], cost: 1
     11: f2 -> f2 : A'=B, B'=free_13, [ B>=5 && 0>=B && 1>=B && A==2*B ], cost: 1
     12: f2 -> f2 : A'=B, B'=free_14, [ B==3 && A==6 ], cost: 1
     13: f2 -> f2 : A'=B, B'=free_15, [ 3>=B && B>=2 && 1>=B && A==2*B ], cost: 1
     14: f2 -> f2 : A'=B, B'=free_16, [ 0>=3 && B==3 && A==6 ], cost: 1
     15: f2 -> f2 : A'=B, B'=free_17, [ 3>=B && 0>=B && 1>=B && A==2*B ], cost: 1
     16: f2 -> f2 : A'=4+6*B, B'=free_18, [ 6*B>=1 && 2+6*B>=0 && 1+6*B>=0 && A==1+2*B ], cost: 1
     17: f2 -> f2 : A'=4+6*B, B'=free_19, [ 6*B>=1 && 2+6*B>=0 && 0>=3+6*B && A==1+2*B ], cost: 1
     18: f2 -> f2 : A'=4+6*B, B'=free_20, [ 6*B>=1 && 0>=4+6*B && 1+6*B>=0 && A==1+2*B ], cost: 1
     19: f2 -> f2 : A'=4+6*B, B'=free_21, [ 6*B>=1 && 0>=4+6*B && 0>=3+6*B && A==1+2*B ], cost: 1
     20: f2 -> f2 : A'=4+6*B, B'=free_22, [ 0>=1+6*B && 2+6*B>=0 && 1+6*B>=0 && A==1+2*B ], cost: 1
     21: f2 -> f2 : A'=4+6*B, B'=free_23, [ 0>=1+6*B && 2+6*B>=0 && 0>=3+6*B && A==1+2*B ], cost: 1
     22: f2 -> f2 : A'=4+6*B, B'=free_24, [ 0>=1+6*B && 0>=4+6*B && 1+6*B>=0 && A==1+2*B ], cost: 1
     23: f2 -> f2 : A'=4+6*B, B'=free_25, [ 0>=1+6*B && 0>=4+6*B && 0>=3+6*B && A==1+2*B ], cost: 1


Removed unsatisfiable initial transitions:
  Start location: f0
      0: f0 -> f2 : A'=free, B'=free_1, [ free>=1 && free>=5 && free>=2 && free>=3 ], cost: 1
      4: f0 -> f2 : A'=3, B'=free_6, [], cost: 1
      8: f2 -> f2 : A'=B, B'=free_10, [ B>=5 && B>=2 && B>=3 && A==2*B ], cost: 1
      9: f2 -> f2 : A'=B, B'=free_11, [ B>=5 && B>=2 && 1>=B && A==2*B ], cost: 1
     10: f2 -> f2 : A'=B, B'=free_12, [ B>=5 && 0>=B && B>=3 && A==2*B ], cost: 1
     11: f2 -> f2 : A'=B, B'=free_13, [ B>=5 && 0>=B && 1>=B && A==2*B ], cost: 1
     12: f2 -> f2 : A'=B, B'=free_14, [ B==3 && A==6 ], cost: 1
     13: f2 -> f2 : A'=B, B'=free_15, [ 3>=B && B>=2 && 1>=B && A==2*B ], cost: 1
     14: f2 -> f2 : A'=B, B'=free_16, [ 0>=3 && B==3 && A==6 ], cost: 1
     15: f2 -> f2 : A'=B, B'=free_17, [ 3>=B && 0>=B && 1>=B && A==2*B ], cost: 1
     16: f2 -> f2 : A'=4+6*B, B'=free_18, [ 6*B>=1 && 2+6*B>=0 && 1+6*B>=0 && A==1+2*B ], cost: 1
     17: f2 -> f2 : A'=4+6*B, B'=free_19, [ 6*B>=1 && 2+6*B>=0 && 0>=3+6*B && A==1+2*B ], cost: 1
     18: f2 -> f2 : A'=4+6*B, B'=free_20, [ 6*B>=1 && 0>=4+6*B && 1+6*B>=0 && A==1+2*B ], cost: 1
     19: f2 -> f2 : A'=4+6*B, B'=free_21, [ 6*B>=1 && 0>=4+6*B && 0>=3+6*B && A==1+2*B ], cost: 1
     20: f2 -> f2 : A'=4+6*B, B'=free_22, [ 0>=1+6*B && 2+6*B>=0 && 1+6*B>=0 && A==1+2*B ], cost: 1
     21: f2 -> f2 : A'=4+6*B, B'=free_23, [ 0>=1+6*B && 2+6*B>=0 && 0>=3+6*B && A==1+2*B ], cost: 1
     22: f2 -> f2 : A'=4+6*B, B'=free_24, [ 0>=1+6*B && 0>=4+6*B && 1+6*B>=0 && A==1+2*B ], cost: 1
     23: f2 -> f2 : A'=4+6*B, B'=free_25, [ 0>=1+6*B && 0>=4+6*B && 0>=3+6*B && A==1+2*B ], cost: 1


Simplified the transitions:
  Start location: f0
      0: f0 -> f2 : A'=free, B'=free_1, [ free>=5 ], cost: 1
      4: f0 -> f2 : A'=3, B'=free_6, [], cost: 1
      8: f2 -> f2 : A'=B, B'=free_10, [ B>=5 && A==2*B ], cost: 1
      9: f2 -> f2 : A'=B, B'=free_11, [ B>=5 && 1>=B ], cost: 1
     10: f2 -> f2 : A'=B, B'=free_12, [ B>=5 && 0>=B ], cost: 1
     11: f2 -> f2 : A'=B, B'=free_13, [ B>=5 && 0>=B ], cost: 1
     12: f2 -> f2 : A'=B, B'=free_14, [ B==3 && A==6 ], cost: 1
     13: f2 -> f2 : A'=B, B'=free_15, [ B>=2 && 1>=B ], cost: 1
     14: f2 -> f2 : A'=B, B'=free_16, [ 0>=3 ], cost: 1
     15: f2 -> f2 : A'=B, B'=free_17, [ 0>=B && A==2*B ], cost: 1
     16: f2 -> f2 : A'=4+6*B, B'=free_18, [ 6*B>=1 && A==1+2*B ], cost: 1
     17: f2 -> f2 : A'=4+6*B, B'=free_19, [ 6*B>=1 && 0>=3+6*B ], cost: 1
     18: f2 -> f2 : A'=4+6*B, B'=free_20, [ 6*B>=1 && 0>=4+6*B ], cost: 1
     19: f2 -> f2 : A'=4+6*B, B'=free_21, [ 6*B>=1 && 0>=4+6*B ], cost: 1
     20: f2 -> f2 : A'=4+6*B, B'=free_22, [ 0>=1+6*B && 2+6*B>=0 ], cost: 1
     21: f2 -> f2 : A'=4+6*B, B'=free_23, [ 0>=1+6*B && 2+6*B>=0 ], cost: 1
     22: f2 -> f2 : A'=4+6*B, B'=free_24, [ 1+6*B==0 ], cost: 1
     23: f2 -> f2 : A'=4+6*B, B'=free_25, [ 0>=1+6*B && A==1+2*B ], cost: 1

Eliminating 16 self-loops for location f2
  Self-Loop 9 has unbounded runtime, resulting in the new transition 25.
  Self-Loop 10 has unbounded runtime, resulting in the new transition 26.
  Self-Loop 11 has unbounded runtime, resulting in the new transition 27.
  Self-Loop 13 has unbounded runtime, resulting in the new transition 29.
  Self-Loop 14 has unbounded runtime, resulting in the new transition 30.
  Self-Loop 17 has unbounded runtime, resulting in the new transition 33.
  Self-Loop 18 has unbounded runtime, resulting in the new transition 34.
  Self-Loop 19 has unbounded runtime, resulting in the new transition 35.
  Self-Loop 20 has unbounded runtime, resulting in the new transition 36.
  Self-Loop 21 has unbounded runtime, resulting in the new transition 37.
  Self-Loop 22 has unbounded runtime, resulting in the new transition 38.
  Removing the self-loops: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23.
Removing duplicate transition: 26.
Removing duplicate transition: 34.
Removing duplicate transition: 36.

Accelerated all simple loops using metering functions (where possible):
  Start location: f0
      0: f0 -> f2 : A'=free, B'=free_1, [ free>=5 ], cost: 1
      4: f0 -> f2 : A'=3, B'=free_6, [], cost: 1
     24: f2 -> f2 : A'=B, B'=free_10, [ B>=5 && A==2*B ], cost: 1
     25: f2 -> f2 : [ B>=5 && 1>=B ], cost: INF
     27: f2 -> f2 : [ B>=5 && 0>=B ], cost: INF
     28: f2 -> f2 : A'=B, B'=free_14, [ B==3 && A==6 ], cost: 1
     29: f2 -> f2 : [ B>=2 && 1>=B ], cost: INF
     30: f2 -> f2 : [ 0>=3 ], cost: INF
     31: f2 -> f2 : A'=B, B'=free_17, [ 0>=B && A==2*B ], cost: 1
     32: f2 -> f2 : A'=4+6*B, B'=free_18, [ 6*B>=1 && A==1+2*B ], cost: 1
     33: f2 -> f2 : [ 6*B>=1 && 0>=3+6*B ], cost: INF
     35: f2 -> f2 : [ 6*B>=1 && 0>=4+6*B ], cost: INF
     37: f2 -> f2 : [ 0>=1+6*B && 2+6*B>=0 ], cost: INF
     38: f2 -> f2 : [ 1+6*B==0 ], cost: INF
     39: f2 -> f2 : A'=4+6*B, B'=free_25, [ 0>=1+6*B && A==1+2*B ], cost: 1


Chained simpled loops:
  Start location: f0
      0: f0 -> f2 : A'=free, B'=free_1, [ free>=5 ], cost: 1
      4: f0 -> f2 : A'=3, B'=free_6, [], cost: 1
     40: f0 -> f2 : A'=free_1, B'=free_10, [ free>=5 && free_1>=5 && free==2*free_1 ], cost: 2
     41: f0 -> f2 : A'=free_1, B'=free_14, [ free>=5 && free_1==3 && free==6 ], cost: 2
     42: f0 -> f2 : A'=4+6*free_1, B'=free_18, [ free>=5 && 6*free_1>=1 && free==1+2*free_1 ], cost: 2
     43: f0 -> f2 : A'=4+6*free_6, B'=free_18, [ 6*free_6>=1 && 3==1+2*free_6 ], cost: 2


Pruned:
  Start location: f0
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f0
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
