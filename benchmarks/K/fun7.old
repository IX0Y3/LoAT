Trying to load file: fun7.koat

Initial Control flow graph problem:
  Start location: f33
      0: f33 -> f3 : [], cost: 1
      1: f3 -> f25 : A'=free, C'=B, D'=0, [ A>=1 && B>=1 && free>=1 ], cost: 1
      2: f3 -> f25 : A'=free_1, C'=B, D'=0, [ A>=1 && 0>=1+B && free_1>=1 ], cost: 1
      3: f3 -> f16 : A'=J, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=1+J, K'=free_3, [], cost: 1
      4: f3 -> f16 : A'=1+free_4, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=1+J, K'=free_5, [ free_4>=0 && A>=0 ], cost: 1
      5: f3 -> f22 : A'=free_6, B'=L, C'=0, D'=0, Q'=L, M'=L, N'=L, [ free_7>=1 && A>=1 && B==0 ], cost: 1
     11: f16 -> f3 : A'=free_43, B'=free_44, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ A>=0 && free_57>=0 && free_58>=0 && J>=Q_1 && free_53>=1 ], cost: 1
     12: f16 -> f3 : A'=free_59, B'=free_60, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ A>=0 && free_73>=0 && free_74>=0 && J>=Q_1 && 0>=1+free_69 ], cost: 1
      9: f16 -> f16 : A'=1+free_26, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=1+free_28, K'=free_27, P'=free_29, Q_1'=free_30, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, [ A>=0 && free_36>=0 && Q_1>=1+J && free_26>=0 ], cost: 1
     10: f16 -> f18 : A'=free_37, J'=free_38, M'=0, O'=0, P'=free_39, Q_1'=free_40, R'=0, Z'=free_41, [ A>=0 && free_42>=0 && J>=Q_1 && free_37>=0 ], cost: 1
     13: f23 -> f16 : A'=free_75, F'=free_76, G'=free_76, H'=free_76, Q'=free_76, J'=1+free_75, K'=free_76, P'=free_77, Q_1'=free_78, U'=free_79, V'=free_80, W'=free_81, E1'=free_82, F1'=free_83, [ free_84>=1 ], cost: 1
      6: f23 -> f17 : J'=free_8, K'=0, M'=0, O'=free_9, P'=free_10, Q_1'=free_11, R'=free_9, S'=free_12, [ free_9>=1 && 0>=free_13 ], cost: 1
      7: f23 -> f17 : J'=free_14, K'=0, M'=0, O'=free_15, P'=free_16, Q_1'=free_17, R'=free_15, S'=free_18, [ 0>=1+free_15 && 0>=free_19 ], cost: 1
      8: f23 -> f21 : Q'=free_20, J'=free_21, K'=0, M'=0, O'=0, P'=free_22, Q_1'=free_23, R'=0, S'=free_24, T'=0, [ 0>=free_25 ], cost: 1


Simplified the transitions:
  Start location: f33
      0: f33 -> f3 : [], cost: 1
      3: f3 -> f16 : A'=J, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=1+J, K'=free_3, [], cost: 1
      4: f3 -> f16 : A'=1+free_4, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=1+J, K'=free_5, [ free_4>=0 && A>=0 ], cost: 1
     11: f16 -> f3 : A'=free_43, B'=free_44, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ A>=0 && J>=Q_1 && free_53>=1 ], cost: 1
     12: f16 -> f3 : A'=free_59, B'=free_60, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ A>=0 && J>=Q_1 && 0>=1+free_69 ], cost: 1
      9: f16 -> f16 : A'=1+free_26, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=1+free_28, K'=free_27, P'=free_29, Q_1'=free_30, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, [ A>=0 && Q_1>=1+J && free_26>=0 ], cost: 1

Eliminating 1 self-loops for location f16
  Removing the self-loops: 9.

Accelerated all simple loops using metering functions (where possible):
  Start location: f33
      0: f33 -> f3 : [], cost: 1
      3: f3 -> f16 : A'=J, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=1+J, K'=free_3, [], cost: 1
      4: f3 -> f16 : A'=1+free_4, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=1+J, K'=free_5, [ free_4>=0 && A>=0 ], cost: 1
     11: f16 -> f3 : A'=free_43, B'=free_44, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ A>=0 && J>=Q_1 && free_53>=1 ], cost: 1
     12: f16 -> f3 : A'=free_59, B'=free_60, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ A>=0 && J>=Q_1 && 0>=1+free_69 ], cost: 1
     14: f16 -> f16 : A'=1+free_26, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=1+free_28, K'=free_27, P'=free_29, Q_1'=free_30, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, [ A>=0 && Q_1>=1+J && free_26>=0 ], cost: 1


Chained simpled loops:
  Start location: f33
      0: f33 -> f3 : [], cost: 1
      3: f3 -> f16 : A'=J, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=1+J, K'=free_3, [], cost: 1
      4: f3 -> f16 : A'=1+free_4, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=1+J, K'=free_5, [ free_4>=0 && A>=0 ], cost: 1
     15: f3 -> f16 : A'=1+free_26, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=1+free_28, K'=free_27, P'=free_29, Q_1'=free_30, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, [ J>=0 && Q_1>=2+J && free_26>=0 ], cost: 2
     16: f3 -> f16 : A'=1+free_26, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=1+free_28, K'=free_27, P'=free_29, Q_1'=free_30, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, [ free_4>=0 && A>=0 && 1+free_4>=0 && Q_1>=2+J && free_26>=0 ], cost: 2
     11: f16 -> f3 : A'=free_43, B'=free_44, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ A>=0 && J>=Q_1 && free_53>=1 ], cost: 1
     12: f16 -> f3 : A'=free_59, B'=free_60, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ A>=0 && J>=Q_1 && 0>=1+free_69 ], cost: 1


Eliminated locations (branches):
  Start location: f33
      0: f33 -> f3 : [], cost: 1
     17: f3 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && 1+J>=Q_1 && free_53>=1 ], cost: 2
     18: f3 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 2
     19: f3 -> f3 : A'=free_43, B'=free_44, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ free_4>=0 && A>=0 && 1+free_4>=0 && 1+J>=Q_1 && free_53>=1 ], cost: 2
     20: f3 -> f3 : A'=free_59, B'=free_60, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ free_4>=0 && A>=0 && 1+free_4>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 2
     21: f3 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && Q_1>=2+J && free_26>=0 && 1+free_26>=0 && 1+free_28>=free_30 && free_53>=1 ], cost: 3
     22: f3 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && Q_1>=2+J && free_26>=0 && 1+free_26>=0 && 1+free_28>=free_30 && 0>=1+free_69 ], cost: 3
     23: f3 -> f3 : A'=free_43, B'=free_44, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ free_4>=0 && A>=0 && 1+free_4>=0 && Q_1>=2+J && free_26>=0 && 1+free_26>=0 && 1+free_28>=free_30 && free_53>=1 ], cost: 3
     24: f3 -> f3 : A'=free_59, B'=free_60, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ free_4>=0 && A>=0 && 1+free_4>=0 && Q_1>=2+J && free_26>=0 && 1+free_26>=0 && 1+free_28>=free_30 && 0>=1+free_69 ], cost: 3


Pruned:
  Start location: f33
      0: f33 -> f3 : [], cost: 1
     17: f3 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && 1+J>=Q_1 && free_53>=1 ], cost: 2
     18: f3 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 2
     20: f3 -> f3 : A'=free_59, B'=free_60, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ free_4>=0 && A>=0 && 1+free_4>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 2
     21: f3 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && Q_1>=2+J && free_26>=0 && 1+free_26>=0 && 1+free_28>=free_30 && free_53>=1 ], cost: 3
     22: f3 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && Q_1>=2+J && free_26>=0 && 1+free_26>=0 && 1+free_28>=free_30 && 0>=1+free_69 ], cost: 3

Eliminating 5 self-loops for location f3
  Removing the self-loops: 17 18 20 21 22.

Accelerated all simple loops using metering functions (where possible):
  Start location: f33
      0: f33 -> f3 : [], cost: 1
     25: f3 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && 1+J>=Q_1 && free_53>=1 ], cost: 2
     26: f3 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 2
     27: f3 -> f3 : A'=free_59, B'=free_60, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ A>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 2
     28: f3 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && Q_1>=2+J && free_53>=1 ], cost: 3
     29: f3 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && Q_1>=2+J && 0>=1+free_69 ], cost: 3


Chained simpled loops:
  Start location: f33
      0: f33 -> f3 : [], cost: 1
     30: f33 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && 1+J>=Q_1 && free_53>=1 ], cost: 3
     31: f33 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_3, G'=free_3, H'=free_3, Q'=free_3, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 3
     32: f33 -> f3 : A'=free_59, B'=free_60, F'=free_5, G'=free_5, H'=free_5, Q'=free_5, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ A>=0 && 1+J>=Q_1 && 0>=1+free_69 ], cost: 3
     33: f33 -> f3 : A'=free_43, B'=free_44, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_45, K'=free_46, L'=free_47, M'=0, O'=free_48, P'=free_49, Q_1'=free_50, R'=free_51, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_52, A1'=free_53, B1'=free_54, C1'=free_55, D1'=free_56, [ J>=0 && Q_1>=2+J && free_53>=1 ], cost: 4
     34: f33 -> f3 : A'=free_59, B'=free_60, E'=free_2, F'=free_27, G'=free_27, H'=free_27, Q'=free_27, J'=free_61, K'=free_62, L'=free_63, M'=0, O'=free_64, P'=free_65, Q_1'=free_66, R'=free_67, U'=free_31, V'=free_32, W'=free_33, X'=free_34, Y'=free_35, Z'=free_68, A1'=free_69, B1'=free_70, C1'=free_71, D1'=free_72, [ J>=0 && Q_1>=2+J && 0>=1+free_69 ], cost: 4


Pruned:
  Start location: f33
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f33
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
