Trying to load file: fun5.koat

Initial Control flow graph problem:
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
      1: f1 -> f2 : F'=1+D, [ 1+B>=2*D ], cost: 1
      2: f1 -> f2 : F'=-1+D, [ 2*D>=4+B ], cost: 1
      3: f1 -> f2 : F'=D, [ 2+B==2*D ], cost: 1
      4: f1 -> f2 : F'=D, [ 3+B==2*D ], cost: 1
      5: f2 -> f3 : G'=1+E, [ A+D>=1+2*E ], cost: 1
      6: f2 -> f3 : G'=-1+E, [ 2*E>=2+A+D ], cost: 1
      7: f2 -> f3 : G'=E, [ A+D==2*E ], cost: 1
      8: f2 -> f3 : G'=E, [ 1+A+D==2*E ], cost: 1
      9: f3 -> f1 : D'=F, E'=G, [ D>=1+F ], cost: 1
     10: f3 -> f1 : D'=F, E'=G, [ F>=1+D ], cost: 1
     11: f3 -> f1 : D'=F, E'=G, [ E>=1+G ], cost: 1
     12: f3 -> f1 : D'=F, E'=G, [ G>=1+E ], cost: 1


Eliminated locations (branches):
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
     13: f1 -> f3 : F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E ], cost: 2
     14: f1 -> f3 : F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D ], cost: 2
     15: f1 -> f3 : F'=1+D, G'=E, [ 1+B>=2*D && A+D==2*E ], cost: 2
     16: f1 -> f3 : F'=1+D, G'=E, [ 1+B>=2*D && 1+A+D==2*E ], cost: 2
     17: f1 -> f3 : F'=-1+D, G'=1+E, [ 2*D>=4+B && A+D>=1+2*E ], cost: 2
     18: f1 -> f3 : F'=-1+D, G'=-1+E, [ 2*D>=4+B && 2*E>=2+A+D ], cost: 2
     19: f1 -> f3 : F'=-1+D, G'=E, [ 2*D>=4+B && A+D==2*E ], cost: 2
     20: f1 -> f3 : F'=-1+D, G'=E, [ 2*D>=4+B && 1+A+D==2*E ], cost: 2
     21: f1 -> f3 : F'=D, G'=1+E, [ 2+B==2*D && A+D>=1+2*E ], cost: 2
     22: f1 -> f3 : F'=D, G'=-1+E, [ 2+B==2*D && 2*E>=2+A+D ], cost: 2
     23: f1 -> f3 : F'=D, G'=E, [ 2+B==2*D && A+D==2*E ], cost: 2
     24: f1 -> f3 : F'=D, G'=E, [ 2+B==2*D && 1+A+D==2*E ], cost: 2
     25: f1 -> f3 : F'=D, G'=1+E, [ 3+B==2*D && A+D>=1+2*E ], cost: 2
     26: f1 -> f3 : F'=D, G'=-1+E, [ 3+B==2*D && 2*E>=2+A+D ], cost: 2
     27: f1 -> f3 : F'=D, G'=E, [ 3+B==2*D && A+D==2*E ], cost: 2
     28: f1 -> f3 : F'=D, G'=E, [ 3+B==2*D && 1+A+D==2*E ], cost: 2
      9: f3 -> f1 : D'=F, E'=G, [ D>=1+F ], cost: 1
     10: f3 -> f1 : D'=F, E'=G, [ F>=1+D ], cost: 1
     11: f3 -> f1 : D'=F, E'=G, [ E>=1+G ], cost: 1
     12: f3 -> f1 : D'=F, E'=G, [ G>=1+E ], cost: 1


Pruned:
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
     13: f1 -> f3 : F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E ], cost: 2
     14: f1 -> f3 : F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D ], cost: 2
     16: f1 -> f3 : F'=1+D, G'=E, [ 1+B>=2*D && 1+A+D==2*E ], cost: 2
     20: f1 -> f3 : F'=-1+D, G'=E, [ 2*D>=4+B && 1+A+D==2*E ], cost: 2
     22: f1 -> f3 : F'=D, G'=-1+E, [ 2+B==2*D && 2*E>=2+A+D ], cost: 2
      9: f3 -> f1 : D'=F, E'=G, [ D>=1+F ], cost: 1
     10: f3 -> f1 : D'=F, E'=G, [ F>=1+D ], cost: 1
     11: f3 -> f1 : D'=F, E'=G, [ E>=1+G ], cost: 1
     12: f3 -> f1 : D'=F, E'=G, [ G>=1+E ], cost: 1


Eliminated locations (branches):
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
     29: f1 -> f1 : D'=1+D, E'=1+E, F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E && 1+D>=1+D ], cost: 3
     30: f1 -> f1 : D'=1+D, E'=1+E, F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E && 1+E>=1+E ], cost: 3
     31: f1 -> f1 : D'=1+D, E'=-1+E, F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D && 1+D>=1+D ], cost: 3
     32: f1 -> f1 : D'=1+D, E'=-1+E, F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D && E>=E ], cost: 3
     33: f1 -> f1 : D'=1+D, E'=E, F'=1+D, G'=E, [ 1+B>=2*D && 1+A+D==2*E && 1+D>=1+D ], cost: 3
     34: f1 -> f1 : D'=-1+D, E'=E, F'=-1+D, G'=E, [ 2*D>=4+B && 1+A+D==2*E && D>=D ], cost: 3
     35: f1 -> f1 : D'=D, E'=-1+E, F'=D, G'=-1+E, [ 2+B==2*D && 2*E>=2+A+D && E>=E ], cost: 3


Pruned:
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
     29: f1 -> f1 : D'=1+D, E'=1+E, F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E && 1+D>=1+D ], cost: 3
     30: f1 -> f1 : D'=1+D, E'=1+E, F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E && 1+E>=1+E ], cost: 3
     31: f1 -> f1 : D'=1+D, E'=-1+E, F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D && 1+D>=1+D ], cost: 3
     32: f1 -> f1 : D'=1+D, E'=-1+E, F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D && E>=E ], cost: 3
     33: f1 -> f1 : D'=1+D, E'=E, F'=1+D, G'=E, [ 1+B>=2*D && 1+A+D==2*E && 1+D>=1+D ], cost: 3

Eliminating 5 self-loops for location f1
  Removing the self-loops: 29 30 31 32 33 36 37 39 40 42 43 45 46.
Removing duplicate transition: 38.
Removing duplicate transition: 44.

Accelerated all simple loops using metering functions (where possible):
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
     41: f1 -> f1 : D'=1+D, E'=1+E, F'=1+D, G'=1+E, [ 1+B>=2*D && A+D>=1+2*E ], cost: 3
     47: f1 -> f1 : D'=1+D, E'=-1+E, F'=1+D, G'=-1+E, [ 1+B>=2*D && 2*E>=2+A+D ], cost: 3
     48: f1 -> f1 : D'=1+D, F'=1+D, G'=E, [ 1+B>=2*D && 1+A+D==2*E ], cost: 3


Chained simpled loops:
  Start location: f0
      0: f0 -> f1 : [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 ], cost: 1
     49: f0 -> f1 : D'=1+D, E'=1+E, F'=1+D, G'=1+E, [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 && 1+B>=2*D && A+D>=1+2*E ], cost: 4
     50: f0 -> f1 : D'=1+D, E'=-1+E, F'=1+D, G'=-1+E, [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 && 1+B>=2*D && 2*E>=2+A+D ], cost: 4
     51: f0 -> f1 : D'=1+D, F'=1+D, G'=E, [ A>=0 && 3>=A && B>=0 && 3>=B && 3>=C && D>=0 && 3>=E && E>=0 && 1+B>=2*D && 1+A+D==2*E ], cost: 4


Pruned:
  Start location: f0
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f0
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
