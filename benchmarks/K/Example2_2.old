Trying to load file: Example2_2.koat

Initial Control flow graph problem:
  Start location: evalfstart
      0: evalfstart -> evalfentryin : [], cost: 1
      1: evalfentryin -> evalfbb3in : A'=B, B'=A, C'=0, [ A>=1 && B>=1 ], cost: 1
      2: evalfbb3in -> evalfreturnin : [ 0>=B ], cost: 1
      3: evalfbb3in -> evalfbb4in : [ B>=1 ], cost: 1
     10: evalfreturnin -> evalfstop : [], cost: 1
      6: evalfbb4in -> evalfreturnin : [], cost: 1
      4: evalfbb4in -> evalfbbin : [ 0>=1+free ], cost: 1
      5: evalfbb4in -> evalfbbin : [ free_1>=1 ], cost: 1
      8: evalfbbin -> evalfbb3in : C'=0, [ C>=A ], cost: 1
      7: evalfbbin -> evalfbb1in : [ A>=1+C ], cost: 1
      9: evalfbb1in -> evalfbb3in : B'=-1+B, C'=1+C, [], cost: 1

Removing duplicate transition: 4.

Simplified the transitions:
  Start location: evalfstart
      0: evalfstart -> evalfentryin : [], cost: 1
      1: evalfentryin -> evalfbb3in : A'=B, B'=A, C'=0, [ A>=1 && B>=1 ], cost: 1
      3: evalfbb3in -> evalfbb4in : [ B>=1 ], cost: 1
      5: evalfbb4in -> evalfbbin : [], cost: 1
      8: evalfbbin -> evalfbb3in : C'=0, [ C>=A ], cost: 1
      7: evalfbbin -> evalfbb1in : [ A>=1+C ], cost: 1
      9: evalfbb1in -> evalfbb3in : B'=-1+B, C'=1+C, [], cost: 1


Eliminated locations (linear):
  Start location: evalfstart
      0: evalfstart -> evalfbb3in : A'=B, B'=A, C'=0, [ A>=1 && B>=1 ], cost: 2
      3: evalfbb3in -> evalfbbin : [ B>=1 ], cost: 2
      8: evalfbbin -> evalfbb3in : C'=0, [ C>=A ], cost: 1
      7: evalfbbin -> evalfbb3in : B'=-1+B, C'=1+C, [ A>=1+C ], cost: 2


Eliminated locations (branches):
  Start location: evalfstart
      0: evalfstart -> evalfbb3in : A'=B, B'=A, C'=0, [ A>=1 && B>=1 ], cost: 2
     11: evalfbb3in -> evalfbb3in : C'=0, [ B>=1 && C>=A ], cost: 3
     12: evalfbb3in -> evalfbb3in : B'=-1+B, C'=1+C, [ B>=1 && A>=1+C ], cost: 4

Eliminating 2 self-loops for location evalfbb3in
  Removing the self-loops: 11 12 14 15.

Accelerated all simple loops using metering functions (where possible):
  Start location: evalfstart
      0: evalfstart -> evalfbb3in : A'=B, B'=A, C'=0, [ A>=1 && B>=1 ], cost: 2
     13: evalfbb3in -> evalfbb3in : C'=0, [ B>=1 && C>=A ], cost: 3
     16: evalfbb3in -> evalfbb3in : B'=-1+B, C'=1+C, [ B>=1 && A>=1+C ], cost: 4


Chained simpled loops:
  Start location: evalfstart
      0: evalfstart -> evalfbb3in : A'=B, B'=A, C'=0, [ A>=1 && B>=1 ], cost: 2
     17: evalfstart -> evalfbb3in : A'=B, B'=-1+A, C'=1, [ A>=1 && B>=1 && A>=1 && B>=1 ], cost: 6


Pruned:
  Start location: evalfstart
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: evalfstart
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
