Trying to load file: pentagon.koat

Initial Control flow graph problem:
  Start location: f1
      0: f0 -> f0 : A'=-A, B'=B+A, C'=A+C, [ 0>=1+A ], cost: 1
      1: f0 -> f0 : A'=B+A, B'=-B, D'=D+B, [ 0>=1+B ], cost: 1
      2: f0 -> f0 : B'=D+B, D'=-D, E'=D+E, [ 0>=1+D ], cost: 1
      3: f0 -> f0 : C'=E+C, D'=D+E, E'=-E, [ 0>=1+E ], cost: 1
      4: f0 -> f0 : A'=A+C, C'=-C, E'=E+C, [ 0>=1+C ], cost: 1
      5: f1 -> f0 : A'=free_3, B'=free_4, C'=free_2, D'=free_1, E'=free, F'=free_1+free_3+free_4+free+free_2, [ free_1+free_3+free_4+free+free_2>=1 ], cost: 1


Try instantiation
  Start location: f1
      6: f0 -> f0 : A'=A+C, C'=-C, E'=E+C, [ 0>=1+C ], cost: 1
      7: f0 -> f0 : C'=E+C, D'=D+E, E'=-E, [ 0>=1+E ], cost: 1
      8: f0 -> f0 : B'=D+B, D'=-D, E'=D+E, [ 0>=1+D ], cost: 1
      9: f0 -> f0 : A'=B+A, B'=-B, D'=D+B, [ 0>=1+B ], cost: 1
     10: f0 -> f0 : A'=-A, B'=B+A, C'=A+C, [ 0>=1+A ], cost: 1
      5: f1 -> f0 : A'=free_3, B'=free_4, C'=free_2, D'=free_1, E'=free, F'=free_1+free_3+free_4+free+free_2, [ free_1+free_3+free_4+free+free_2>=1 ], cost: 1

Eliminating 5 self-loops for location f0
  Removing the self-loops: 6 7 8 9 10.
Adding an epsilon transition (to model nonexecution of the loops): 16.

Removed all Self-loops using metering functions (where possible):
  Start location: f1
     11: f0 -> [2] : A'=A+C, C'=-C, E'=E+C, [ 0>=1+C ], cost: 1
     12: f0 -> [2] : C'=E+C, D'=D+E, E'=-E, [ 0>=1+E ], cost: 1
     13: f0 -> [2] : B'=D+B, D'=-D, E'=D+E, [ 0>=1+D ], cost: 1
     14: f0 -> [2] : A'=B+A, B'=-B, D'=D+B, [ 0>=1+B ], cost: 1
     15: f0 -> [2] : A'=-A, B'=B+A, C'=A+C, [ 0>=1+A ], cost: 1
     16: f0 -> [2] : [], cost: 0
      5: f1 -> f0 : A'=free_3, B'=free_4, C'=free_2, D'=free_1, E'=free, F'=free_1+free_3+free_4+free+free_2, [ free_1+free_3+free_4+free+free_2>=1 ], cost: 1


Applied chaining over branches and pruning:
  Start location: f1
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f1
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
