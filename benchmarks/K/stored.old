Trying to load file: stored.koat

Initial Control flow graph problem:
  Start location: f0
      0: f6 -> f9 : B'=free, [ 0>=1+A ], cost: 1
      1: f6 -> f9 : B'=free_1, [ A>=1 ], cost: 1
      2: f6 -> f17 : A'=0, [ A==0 ], cost: 1
      7: f9 -> f6 : A'=free_2, [ 0>=1+B ], cost: 1
      8: f9 -> f6 : A'=free_3, [ B>=1 ], cost: 1
      6: f9 -> f17 : B'=0, C'=1, [ B==0 ], cost: 1
      3: f17 -> f24 : [ 0>=C ], cost: 1
      4: f17 -> f24 : [ C>=2 ], cost: 1
      5: f17 -> f24 : C'=0, [ C==1 ], cost: 1
      9: f0 -> f6 : A'=free_4, C'=0, [], cost: 1


Simplified the transitions:
  Start location: f0
      0: f6 -> f9 : B'=free, [ 0>=1+A ], cost: 1
      1: f6 -> f9 : B'=free_1, [ A>=1 ], cost: 1
      7: f9 -> f6 : A'=free_2, [ 0>=1+B ], cost: 1
      8: f9 -> f6 : A'=free_3, [ B>=1 ], cost: 1
      9: f0 -> f6 : A'=free_4, C'=0, [], cost: 1


Eliminated locations (branches):
  Start location: f0
     10: f6 -> f6 : A'=free_2, B'=free, [ 0>=1+A && 0>=1+free ], cost: 2
     11: f6 -> f6 : A'=free_3, B'=free, [ 0>=1+A && free>=1 ], cost: 2
     12: f6 -> f6 : A'=free_2, B'=free_1, [ A>=1 && 0>=1+free_1 ], cost: 2
     13: f6 -> f6 : A'=free_3, B'=free_1, [ A>=1 && free_1>=1 ], cost: 2
      9: f0 -> f6 : A'=free_4, C'=0, [], cost: 1

Eliminating 4 self-loops for location f6
  Removing the self-loops: 10 11 12 13.

Accelerated all simple loops using metering functions (where possible):
  Start location: f0
     14: f6 -> f6 : A'=free_2, B'=free, [ 0>=1+A && 0>=1+free ], cost: 2
     15: f6 -> f6 : A'=free_3, B'=free, [ 0>=1+A && free>=1 ], cost: 2
     16: f6 -> f6 : A'=free_2, B'=free_1, [ A>=1 && 0>=1+free_1 ], cost: 2
     17: f6 -> f6 : A'=free_3, B'=free_1, [ A>=1 && free_1>=1 ], cost: 2
      9: f0 -> f6 : A'=free_4, C'=0, [], cost: 1


Chained simpled loops:
  Start location: f0
      9: f0 -> f6 : A'=free_4, C'=0, [], cost: 1
     18: f0 -> f6 : A'=free_2, B'=free, C'=0, [ 0>=1+free_4 && 0>=1+free ], cost: 3
     19: f0 -> f6 : A'=free_3, B'=free, C'=0, [ 0>=1+free_4 && free>=1 ], cost: 3
     20: f0 -> f6 : A'=free_2, B'=free_1, C'=0, [ free_4>=1 && 0>=1+free_1 ], cost: 3
     21: f0 -> f6 : A'=free_3, B'=free_1, C'=0, [ free_4>=1 && free_1>=1 ], cost: 3


Pruned:
  Start location: f0
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: f0
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
