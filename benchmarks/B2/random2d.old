Trying to load file: random2d.koat

Initial Control flow graph problem:
  Start location: start0
      0: start -> stop : B'=0, D'=0, H'=0, [ 0>=A && B==C && D==E && F==G && H==Q && J==A ], cost: 1
      1: start -> lbl81 : B'=0, D'=0, F'=free, H'=1, [ A>=1 && B==C && D==E && F==G && H==Q && J==A ], cost: 1
     12: lbl81 -> lbl21 : [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     14: lbl81 -> lbl121 : D'=1+D, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==0 && J==A ], cost: 1
     15: lbl81 -> lbl141 : D'=-1+D, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==1 && J==A ], cost: 1
     16: lbl81 -> lbl171 : B'=1+B, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==2 && J==A ], cost: 1
     17: lbl81 -> lbl191 : B'=-1+B, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==3 && J==A ], cost: 1
      2: lbl21 -> stop : [ D+B+A>=1 && D+A>=1+B && B+A>=1+D && A>=1+D+B && H==A && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && A>=H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 1
      4: lbl121 -> stop : [ D+B+A>=2 && D+A>=2+B && B+A>=D && A>=D+B && H==A && F==0 && J==A ], cost: 1
      5: lbl121 -> lbl81 : F'=free_2, H'=1+H, [ A>=1+H && A>=H && D+B+H>=2 && D+H>=2+B && B+H>=D && H>=D+B && F==0 && J==A ], cost: 1
      6: lbl141 -> stop : [ D+B+A>=0 && D+A>=B && B+A>=2+D && A>=2+D+B && H==A && F==1 && J==A ], cost: 1
      7: lbl141 -> lbl81 : F'=free_3, H'=1+H, [ A>=1+H && A>=H && D+B+H>=0 && D+H>=B && B+H>=2+D && H>=2+D+B && F==1 && J==A ], cost: 1
      8: lbl171 -> stop : [ D+B+A>=2 && D+A>=B && B+A>=2+D && A>=D+B && H==A && F==2 && J==A ], cost: 1
      9: lbl171 -> lbl81 : F'=free_4, H'=1+H, [ A>=1+H && A>=H && D+B+H>=2 && D+H>=B && B+H>=2+D && H>=D+B && F==2 && J==A ], cost: 1
     10: lbl191 -> stop : [ D+B+A>=0 && D+A>=2+B && B+A>=D && A>=2+D+B && H==A && F==3 && J==A ], cost: 1
     11: lbl191 -> lbl81 : F'=free_5, H'=1+H, [ A>=1+H && A>=H && D+B+H>=0 && D+H>=2+B && B+H>=D && H>=2+D+B && F==3 && J==A ], cost: 1
     18: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=A, [], cost: 1


Simplified the transitions:
  Start location: start0
      1: start -> lbl81 : B'=0, D'=0, F'=free, H'=1, [ A>=1 && B==C && D==E && F==G && H==Q && J==A ], cost: 1
     12: lbl81 -> lbl21 : [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     14: lbl81 -> lbl121 : D'=1+D, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==0 && J==A ], cost: 1
     15: lbl81 -> lbl141 : D'=-1+D, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==1 && J==A ], cost: 1
     16: lbl81 -> lbl171 : B'=1+B, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==2 && J==A ], cost: 1
     17: lbl81 -> lbl191 : B'=-1+B, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==3 && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 1
      5: lbl121 -> lbl81 : F'=free_2, H'=1+H, [ A>=1+H && D+B+H>=2 && D+H>=2+B && B+H>=D && H>=D+B && F==0 && J==A ], cost: 1
      7: lbl141 -> lbl81 : F'=free_3, H'=1+H, [ A>=1+H && D+B+H>=0 && D+H>=B && B+H>=2+D && H>=2+D+B && F==1 && J==A ], cost: 1
      9: lbl171 -> lbl81 : F'=free_4, H'=1+H, [ A>=1+H && D+B+H>=2 && D+H>=B && B+H>=2+D && H>=D+B && F==2 && J==A ], cost: 1
     11: lbl191 -> lbl81 : F'=free_5, H'=1+H, [ A>=1+H && D+B+H>=0 && D+H>=2+B && B+H>=D && H>=2+D+B && F==3 && J==A ], cost: 1
     18: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=A, [], cost: 1


Eliminated locations (linear):
  Start location: start0
     14: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==0 && J==A && A>=1+H && 1+D+B+H>=2 && 1+D+H>=2+B && B+H>=1+D && H>=1+D+B && F==0 && J==A ], cost: 2
     15: lbl81 -> lbl81 : D'=-1+D, F'=free_3, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==1 && J==A && A>=1+H && -1+D+B+H>=0 && -1+D+H>=B && B+H>=1+D && H>=1+D+B && F==1 && J==A ], cost: 2
     16: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==2 && J==A && A>=1+H && 1+D+B+H>=2 && D+H>=1+B && 1+B+H>=2+D && H>=1+D+B && F==2 && J==A ], cost: 2
     17: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && F==3 && J==A && A>=1+H && -1+D+B+H>=0 && D+H>=1+B && -1+B+H>=D && H>=1+D+B && F==3 && J==A ], cost: 2
     12: lbl81 -> lbl21 : [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 1
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2

Eliminating 4 self-loops for location lbl81
  Removing the self-loops: 14 15 16 17.

Accelerated all simple loops using metering functions (where possible):
  Start location: start0
     19: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && F==0 && J==A && A>=1+H ], cost: 2
     20: lbl81 -> lbl81 : D'=-1+D, F'=free_3, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && F==1 && J==A && A>=1+H ], cost: 2
     21: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && F==2 && J==A && A>=1+H ], cost: 2
     22: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=1+H, [ D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && F==3 && J==A && A>=1+H ], cost: 2
     12: lbl81 -> lbl21 : [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 1
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2


Chained simpled loops:
  Start location: start0
     12: lbl81 -> lbl21 : [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 1
     23: lbl21 -> lbl81 : D'=1+D, F'=free_2, H'=2+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==0 && J==A && A>=2+H ], cost: 3
     25: lbl21 -> lbl81 : D'=-1+D, F'=free_3, H'=2+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==1 && J==A && A>=2+H ], cost: 3
     27: lbl21 -> lbl81 : B'=1+B, F'=free_4, H'=2+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==2 && J==A && A>=2+H ], cost: 3
     29: lbl21 -> lbl81 : B'=-1+B, F'=free_5, H'=2+H, [ A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==3 && J==A && A>=2+H ], cost: 3
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2
     24: start0 -> lbl81 : B'=0, D'=1, F'=free_2, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 ], cost: 4
     26: start0 -> lbl81 : B'=0, D'=-1, F'=free_3, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 ], cost: 4
     28: start0 -> lbl81 : B'=1, D'=0, F'=free_4, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 ], cost: 4
     30: start0 -> lbl81 : B'=-1, D'=0, F'=free_5, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 ], cost: 4


Eliminated locations (branches):
  Start location: start0
     31: lbl81 -> lbl81 : F'=free_1, H'=1+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 2
     32: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==0 && J==A && A>=2+H ], cost: 4
     33: lbl81 -> lbl81 : D'=-1+D, F'=free_3, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==1 && J==A && A>=2+H ], cost: 4
     34: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==2 && J==A && A>=2+H ], cost: 4
     35: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==3 && J==A && A>=2+H ], cost: 4
     36: lbl81 -> lbl81 : F'=free_1, H'=1+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 2
     37: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=2+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==0 && J==A && A>=2+H ], cost: 4
     38: lbl81 -> lbl81 : D'=-1+D, F'=free_3, H'=2+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==1 && J==A && A>=2+H ], cost: 4
     39: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=2+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==2 && J==A && A>=2+H ], cost: 4
     40: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=2+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==3 && J==A && A>=2+H ], cost: 4
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2
     24: start0 -> lbl81 : B'=0, D'=1, F'=free_2, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 ], cost: 4
     26: start0 -> lbl81 : B'=0, D'=-1, F'=free_3, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 ], cost: 4
     28: start0 -> lbl81 : B'=1, D'=0, F'=free_4, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 ], cost: 4
     30: start0 -> lbl81 : B'=-1, D'=0, F'=free_5, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 ], cost: 4


Pruned:
  Start location: start0
     31: lbl81 -> lbl81 : F'=free_1, H'=1+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 2
     32: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==0 && J==A && A>=2+H ], cost: 4
     34: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==2 && J==A && A>=2+H ], cost: 4
     35: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A && 1+D+H>=1+B && 1+B+H>=1+D && 1+H>=1+D+B && 1+D+B+H>=1 && free_1==3 && J==A && A>=2+H ], cost: 4
     36: lbl81 -> lbl81 : F'=free_1, H'=1+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && A>=H && J==A && A>=1+H && D+B+H>=1 && D+H>=1+B && B+H>=1+D && H>=1+D+B && J==A ], cost: 2
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2
     24: start0 -> lbl81 : B'=0, D'=1, F'=free_2, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 ], cost: 4
     26: start0 -> lbl81 : B'=0, D'=-1, F'=free_3, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 ], cost: 4
     28: start0 -> lbl81 : B'=1, D'=0, F'=free_4, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 ], cost: 4
     30: start0 -> lbl81 : B'=-1, D'=0, F'=free_5, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 ], cost: 4

Eliminating 5 self-loops for location lbl81
  Removing the self-loops: 31 32 34 35 36.

Accelerated all simple loops using metering functions (where possible):
  Start location: start0
     41: lbl81 -> lbl81 : F'=free_1, H'=1+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && J==A && A>=1+H ], cost: 2
     42: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && J==A && A>=2+H ], cost: 4
     43: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && J==A && A>=2+H ], cost: 4
     44: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=2+H, [ 0>=1+F && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && J==A && A>=2+H ], cost: 4
     45: lbl81 -> lbl81 : F'=free_1, H'=1+H, [ F>=4 && D+H>=1+B && B+H>=1+D && H>=1+D+B && D+B+H>=1 && J==A && A>=1+H ], cost: 2
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2
     24: start0 -> lbl81 : B'=0, D'=1, F'=free_2, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 ], cost: 4
     26: start0 -> lbl81 : B'=0, D'=-1, F'=free_3, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 ], cost: 4
     28: start0 -> lbl81 : B'=1, D'=0, F'=free_4, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 ], cost: 4
     30: start0 -> lbl81 : B'=-1, D'=0, F'=free_5, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 ], cost: 4


Chained simpled loops:
  Start location: start0
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2
     24: start0 -> lbl81 : B'=0, D'=1, F'=free_2, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 ], cost: 4
     26: start0 -> lbl81 : B'=0, D'=-1, F'=free_3, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 ], cost: 4
     28: start0 -> lbl81 : B'=1, D'=0, F'=free_4, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 ], cost: 4
     30: start0 -> lbl81 : B'=-1, D'=0, F'=free_5, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 ], cost: 4
     46: start0 -> lbl81 : B'=0, D'=0, F'=free_1, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 0>=1+free && 1>=1 && 1>=1 && 1>=1 && 1>=1 && A==A && A>=2 ], cost: 4
     47: start0 -> lbl81 : B'=0, D'=1, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 && 0>=1+free_2 && 3>=1 && 2>=2 && 2>=2 && 3>=1 && A==A && A>=3 ], cost: 6
     48: start0 -> lbl81 : B'=0, D'=-1, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 && 0>=1+free_3 && 1>=1 && 2>=0 && 2>=0 && 1>=1 && A==A && A>=3 ], cost: 6
     49: start0 -> lbl81 : B'=1, D'=0, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 && 0>=1+free_4 && 2>=2 && 3>=1 && 2>=2 && 3>=1 && A==A && A>=3 ], cost: 6
     50: start0 -> lbl81 : B'=-1, D'=0, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 && 0>=1+free_5 && 2>=0 && 1>=1 && 2>=0 && 1>=1 && A==A && A>=3 ], cost: 6
     51: start0 -> lbl81 : B'=0, D'=1, F'=free_2, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 0>=1+free && 1>=1 && 1>=1 && 1>=1 && 1>=1 && A==A && A>=3 ], cost: 6
     52: start0 -> lbl81 : B'=0, D'=2, F'=free_2, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 && 0>=1+free_2 && 3>=1 && 2>=2 && 2>=2 && 3>=1 && A==A && A>=4 ], cost: 8
     53: start0 -> lbl81 : B'=0, D'=0, F'=free_2, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 && 0>=1+free_3 && 1>=1 && 2>=0 && 2>=0 && 1>=1 && A==A && A>=4 ], cost: 8
     54: start0 -> lbl81 : B'=1, D'=1, F'=free_2, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 && 0>=1+free_4 && 2>=2 && 3>=1 && 2>=2 && 3>=1 && A==A && A>=4 ], cost: 8
     55: start0 -> lbl81 : B'=-1, D'=1, F'=free_2, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 && 0>=1+free_5 && 2>=0 && 1>=1 && 2>=0 && 1>=1 && A==A && A>=4 ], cost: 8
     56: start0 -> lbl81 : B'=1, D'=0, F'=free_4, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 0>=1+free && 1>=1 && 1>=1 && 1>=1 && 1>=1 && A==A && A>=3 ], cost: 6
     57: start0 -> lbl81 : B'=1, D'=1, F'=free_4, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 && 0>=1+free_2 && 3>=1 && 2>=2 && 2>=2 && 3>=1 && A==A && A>=4 ], cost: 8
     58: start0 -> lbl81 : B'=1, D'=-1, F'=free_4, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 && 0>=1+free_3 && 1>=1 && 2>=0 && 2>=0 && 1>=1 && A==A && A>=4 ], cost: 8
     59: start0 -> lbl81 : B'=2, D'=0, F'=free_4, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 && 0>=1+free_4 && 2>=2 && 3>=1 && 2>=2 && 3>=1 && A==A && A>=4 ], cost: 8
     60: start0 -> lbl81 : B'=0, D'=0, F'=free_4, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 && 0>=1+free_5 && 2>=0 && 1>=1 && 2>=0 && 1>=1 && A==A && A>=4 ], cost: 8
     61: start0 -> lbl81 : B'=-1, D'=0, F'=free_5, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 0>=1+free && 1>=1 && 1>=1 && 1>=1 && 1>=1 && A==A && A>=3 ], cost: 6
     62: start0 -> lbl81 : B'=-1, D'=1, F'=free_5, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 && 0>=1+free_2 && 3>=1 && 2>=2 && 2>=2 && 3>=1 && A==A && A>=4 ], cost: 8
     63: start0 -> lbl81 : B'=-1, D'=-1, F'=free_5, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 && 0>=1+free_3 && 1>=1 && 2>=0 && 2>=0 && 1>=1 && A==A && A>=4 ], cost: 8
     64: start0 -> lbl81 : B'=0, D'=0, F'=free_5, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 && 0>=1+free_4 && 2>=2 && 3>=1 && 2>=2 && 3>=1 && A==A && A>=4 ], cost: 8
     65: start0 -> lbl81 : B'=-2, D'=0, F'=free_5, H'=4, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 && 0>=1+free_5 && 2>=0 && 1>=1 && 2>=0 && 1>=1 && A==A && A>=4 ], cost: 8
     66: start0 -> lbl81 : B'=0, D'=0, F'=free_1, H'=2, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && free>=4 && 1>=1 && 1>=1 && 1>=1 && 1>=1 && A==A && A>=2 ], cost: 4
     67: start0 -> lbl81 : B'=0, D'=1, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==0 && A==A && A>=2 && free_2>=4 && 3>=1 && 2>=2 && 2>=2 && 3>=1 && A==A && A>=3 ], cost: 6
     68: start0 -> lbl81 : B'=0, D'=-1, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==1 && A==A && A>=2 && free_3>=4 && 1>=1 && 2>=0 && 2>=0 && 1>=1 && A==A && A>=3 ], cost: 6
     69: start0 -> lbl81 : B'=1, D'=0, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==2 && A==A && A>=2 && free_4>=4 && 2>=2 && 3>=1 && 2>=2 && 3>=1 && A==A && A>=3 ], cost: 6
     70: start0 -> lbl81 : B'=-1, D'=0, F'=free_1, H'=3, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A && 1>=1 && 1>=1 && 1>=1 && 1>=1 && free==3 && A==A && A>=2 && free_5>=4 && 2>=0 && 1>=1 && 2>=0 && 1>=1 && A==A && A>=3 ], cost: 6


Pruned:
  Start location: start0
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start0
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
