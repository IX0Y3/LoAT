Trying to load file: random2d.koat

Initial Control flow graph problem:
  Start location: start0
      0: start -> stop : B'=0, D'=0, H'=0, [ 0>=A && B==C && D==E && F==G && H==Q && J==A ], cost: 1
      1: start -> lbl81 : B'=0, D'=0, F'=free, H'=1, [ A>=1 && B==C && D==E && F==G && H==Q && J==A ], cost: 1
     12: lbl81 -> lbl21 : [ 0>=1+F && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     14: lbl81 -> lbl121 : D'=1+D, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==0 && J==A ], cost: 1
     15: lbl81 -> lbl141 : D'=-1+D, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==1 && J==A ], cost: 1
     16: lbl81 -> lbl171 : B'=1+B, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==2 && J==A ], cost: 1
     17: lbl81 -> lbl191 : B'=-1+B, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==3 && J==A ], cost: 1
      2: lbl21 -> stop : [ A+D+B>=1 && A+D>=1+B && A+B>=1+D && A>=1+D+B && H==A && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && A>=H && H+D+B>=1 && H+D>=1+B && H+B>=1+D && H>=1+D+B && J==A ], cost: 1
      4: lbl121 -> stop : [ A+D+B>=2 && A+D>=2+B && A+B>=D && A>=D+B && H==A && F==0 && J==A ], cost: 1
      5: lbl121 -> lbl81 : F'=free_2, H'=1+H, [ A>=1+H && A>=H && H+D+B>=2 && H+D>=2+B && H+B>=D && H>=D+B && F==0 && J==A ], cost: 1
      6: lbl141 -> stop : [ A+D+B>=0 && A+D>=B && A+B>=2+D && A>=2+D+B && H==A && F==1 && J==A ], cost: 1
      7: lbl141 -> lbl81 : F'=free_3, H'=1+H, [ A>=1+H && A>=H && H+D+B>=0 && H+D>=B && H+B>=2+D && H>=2+D+B && F==1 && J==A ], cost: 1
      8: lbl171 -> stop : [ A+D+B>=2 && A+D>=B && A+B>=2+D && A>=D+B && H==A && F==2 && J==A ], cost: 1
      9: lbl171 -> lbl81 : F'=free_4, H'=1+H, [ A>=1+H && A>=H && H+D+B>=2 && H+D>=B && H+B>=2+D && H>=D+B && F==2 && J==A ], cost: 1
     10: lbl191 -> stop : [ A+D+B>=0 && A+D>=2+B && A+B>=D && A>=2+D+B && H==A && F==3 && J==A ], cost: 1
     11: lbl191 -> lbl81 : F'=free_5, H'=1+H, [ A>=1+H && A>=H && H+D+B>=0 && H+D>=2+B && H+B>=D && H>=2+D+B && F==3 && J==A ], cost: 1
     18: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=A, [], cost: 1


Simplified the transitions:
  Start location: start0
      1: start -> lbl81 : B'=0, D'=0, F'=free, H'=1, [ A>=1 && B==C && D==E && F==G && H==Q && J==A ], cost: 1
     12: lbl81 -> lbl21 : [ 0>=1+F && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     14: lbl81 -> lbl121 : D'=1+D, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==0 && J==A ], cost: 1
     15: lbl81 -> lbl141 : D'=-1+D, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==1 && J==A ], cost: 1
     16: lbl81 -> lbl171 : B'=1+B, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==2 && J==A ], cost: 1
     17: lbl81 -> lbl191 : B'=-1+B, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==3 && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && H+D+B>=1 && H+D>=1+B && H+B>=1+D && H>=1+D+B && J==A ], cost: 1
      5: lbl121 -> lbl81 : F'=free_2, H'=1+H, [ A>=1+H && H+D+B>=2 && H+D>=2+B && H+B>=D && H>=D+B && F==0 && J==A ], cost: 1
      7: lbl141 -> lbl81 : F'=free_3, H'=1+H, [ A>=1+H && H+D+B>=0 && H+D>=B && H+B>=2+D && H>=2+D+B && F==1 && J==A ], cost: 1
      9: lbl171 -> lbl81 : F'=free_4, H'=1+H, [ A>=1+H && H+D+B>=2 && H+D>=B && H+B>=2+D && H>=D+B && F==2 && J==A ], cost: 1
     11: lbl191 -> lbl81 : F'=free_5, H'=1+H, [ A>=1+H && H+D+B>=0 && H+D>=2+B && H+B>=D && H>=2+D+B && F==3 && J==A ], cost: 1
     18: start0 -> start : B'=C, D'=E, F'=G, H'=Q, J'=A, [], cost: 1


Applied simple chaining:
  Start location: start0
     14: lbl81 -> lbl81 : D'=1+D, F'=free_2, H'=1+H, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==0 && J==A && A>=1+H && 1+H+D+B>=2 && 1+H+D>=2+B && H+B>=1+D && H>=1+D+B && F==0 && J==A ], cost: 2
     15: lbl81 -> lbl81 : D'=-1+D, F'=free_3, H'=1+H, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==1 && J==A && A>=1+H && -1+H+D+B>=0 && -1+H+D>=B && H+B>=1+D && H>=1+D+B && F==1 && J==A ], cost: 2
     16: lbl81 -> lbl81 : B'=1+B, F'=free_4, H'=1+H, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==2 && J==A && A>=1+H && 1+H+D+B>=2 && H+D>=1+B && 1+H+B>=2+D && H>=1+D+B && F==2 && J==A ], cost: 2
     17: lbl81 -> lbl81 : B'=-1+B, F'=free_5, H'=1+H, [ H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F==3 && J==A && A>=1+H && -1+H+D+B>=0 && H+D>=1+B && -1+H+B>=D && H>=1+D+B && F==3 && J==A ], cost: 2
     12: lbl81 -> lbl21 : [ 0>=1+F && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && H+D+B>=1 && H+D>=1+B && H+B>=1+D && H>=1+D+B && J==A ], cost: 1
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2


Try instantiation
  Start location: start0
     19: lbl81 -> lbl81 : B'=-H+D, F'=free_5, H'=2*H-D+B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=3 && J<=A && A>=1+H && F>=3 && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=-1+2*H-D+B && A>=2*H-D+B ], cost: 2*H-2*D+2*B
     20: lbl81 -> lbl81 : B'=-H-D, F'=free_5, H'=2*H+D+B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=3 && J<=A && A>=1+H && F>=3 && 3*H+3*D+B>=3 && 3*H+D+B>=3 && A>=-1+2*H+D+B && A>=2*H+D+B ], cost: 2*H+2*D+2*B
     21: lbl81 -> lbl81 : B'=H+D, F'=free_4, H'=2*H+D-B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=2 && J<=A && A>=1+H && F>=2 && H+D-B>=1 && 3*H+D-B>=3 && H-D-B>=1 && 3*H+3*D-B>=3 && A>=-1+2*H+D-B && A>=2*H+D-B ], cost: 2*H+2*D-2*B
     22: lbl81 -> lbl81 : B'=H-D, F'=free_4, H'=2*H-D-B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=2 && J<=A && A>=1+H && F>=2 && H-B>=1-D && 3*H-3*D-B>=3 && H-D-B>=1 && 3*H-D-B>=3 && A>=-1+2*H-D-B && A>=2*H-D-B ], cost: 2*H-2*D-2*B
     23: lbl81 -> lbl81 : D'=-H+B, F'=free_3, H'=2*H+D-B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=1 && J<=A && A>=1+H && F>=1 && 3*H+D>=3+B && 3*H+D-3*B>=3 && A>=-1+2*H+D-B && A>=2*H+D-B ], cost: 2*H+2*D-2*B
     24: lbl81 -> lbl81 : D'=-H-B, F'=free_3, H'=2*H+D+B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=1 && J<=A && A>=1+H && F>=1 && 3*H+D+3*B>=3 && 3*H+D+B>=3 && A>=-1+2*H+D+B && A>=2*H+D+B ], cost: 2*H+2*D+2*B
     25: lbl81 -> lbl81 : D'=H+B, F'=free_2, H'=2*H-D+B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=0 && J<=A && A>=1+H && F>=0 && 3*H-D+B>=3 && H-D+B>=1 && H-D-B>=1 && 3*H-D+3*B>=3 && A>=-1+2*H-D+B && A>=2*H-D+B ], cost: 2*H-2*D+2*B
     26: lbl81 -> lbl81 : D'=H-B, F'=free_2, H'=2*H-D-B, [ J>=A && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && F<=0 && J<=A && A>=1+H && F>=0 && 3*H-D-3*B>=3 && H-D>=1-B && H-D-B>=1 && 3*H-D-B>=3 && A>=-1+2*H-D-B && A>=2*H-D-B ], cost: 2*H-2*D-2*B
     12: lbl81 -> lbl21 : [ 0>=1+F && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     13: lbl81 -> lbl21 : [ F>=4 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && H+D+B>=1 && H+D>=1+B && H+B>=1+D && H>=1+D+B && J==A ], cost: 1
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2

Eliminating 8 self-loops for location lbl81
  Removing the self-loops: 19 20 21 22 23 24 25 26.
Adding an epsilon transition (to model nonexecution of the loops): 35.

Removed all Self-loops using metering functions (where possible):
  Start location: start0
     27: lbl81 -> [9] : B'=-H+D, F'=free_5, H'=2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B ], cost: 2*H-2*D+2*B
     28: lbl81 -> [9] : B'=-H-D, F'=free_5, H'=2*H+D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+3*D+B>=3 && 3*H+D+B>=3 && A>=2*H+D+B ], cost: 2*H+2*D+2*B
     29: lbl81 -> [9] : B'=H+D, F'=free_4, H'=2*H+D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -2+F==0 && A>=1+H && 3*H+D-B>=3 && 3*H+3*D-B>=3 && A>=2*H+D-B ], cost: 2*H+2*D-2*B
     30: lbl81 -> [9] : B'=H-D, F'=free_4, H'=2*H-D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -2+F==0 && A>=1+H && 3*H-3*D-B>=3 && 3*H-D-B>=3 && A>=2*H-D-B ], cost: 2*H-2*D-2*B
     31: lbl81 -> [9] : D'=-H+B, F'=free_3, H'=2*H+D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -1+F==0 && A>=1+H && 3*H+D>=3+B && 3*H+D-3*B>=3 && A>=2*H+D-B ], cost: 2*H+2*D-2*B
     32: lbl81 -> [9] : D'=-H-B, F'=free_3, H'=2*H+D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -1+F==0 && A>=1+H && 3*H+D+3*B>=3 && 3*H+D+B>=3 && A>=2*H+D+B ], cost: 2*H+2*D+2*B
     33: lbl81 -> [9] : D'=H+B, F'=free_2, H'=2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && F==0 && A>=1+H && 3*H-D+B>=3 && 3*H-D+3*B>=3 && A>=2*H-D+B ], cost: 2*H-2*D+2*B
     34: lbl81 -> [9] : D'=H-B, F'=free_2, H'=2*H-D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && F==0 && A>=1+H && 3*H-D-3*B>=3 && 3*H-D-B>=3 && A>=-1+2*H-D-B && A>=2*H-D-B ], cost: 2*H-2*D-2*B
     35: lbl81 -> [9] : [], cost: 0
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && H+D+B>=1 && H+D>=1+B && H+B>=1+D && H>=1+D+B && J==A ], cost: 1
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2
     12: [9] -> lbl21 : [ 0>=1+F && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1
     13: [9] -> lbl21 : [ F>=4 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && A>=H && J==A ], cost: 1


Applied chaining over branches and pruning:
  Start location: start0
     36: lbl81 -> lbl21 : B'=-H+D, F'=free_5, H'=2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && 0>=1+free_5 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && H+D+B>=1 && A>=2*H-D+B && J==A ], cost: 1+2*H-2*D+2*B
     37: lbl81 -> lbl21 : B'=-H+D, F'=free_5, H'=2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && free_5>=4 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && H+D+B>=1 && A>=2*H-D+B && J==A ], cost: 1+2*H-2*D+2*B
     39: lbl81 -> lbl21 : B'=-H-D, F'=free_5, H'=2*H+D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+3*D+B>=3 && 3*H+D+B>=3 && A>=2*H+D+B && free_5>=4 && 2*H+2*D+B>=1-H-D && H+B>=1+D && 2*H+D+B>=1-H && H+D+B>=1 && A>=2*H+D+B && J==A ], cost: 1+2*H+2*D+2*B
     43: lbl81 -> lbl21 : B'=H-D, F'=free_4, H'=2*H-D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -2+F==0 && A>=1+H && 3*H-3*D-B>=3 && 3*H-D-B>=3 && A>=2*H-D-B && free_4>=4 && 2*H-B>=1+H-D && 3*H-2*D-B>=1+D && 2*H-D-B>=1+H && 3*H-D-B>=1 && A>=2*H-D-B && J==A ], cost: 1+2*H-2*D-2*B
     45: lbl81 -> lbl21 : D'=-H+B, F'=free_3, H'=2*H+D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -1+F==0 && A>=1+H && 3*H+D>=3+B && 3*H+D-3*B>=3 && A>=2*H+D-B && free_3>=4 && H+D>=1+B && 2*H+D>=1-H+B && 2*H+D-B>=1-H+2*B && H+D+B>=1 && A>=2*H+D-B && J==A ], cost: 1+2*H+2*D-2*B
      3: lbl21 -> lbl81 : F'=free_1, H'=1+H, [ A>=1+H && H+D+B>=1 && H+D>=1+B && H+B>=1+D && H>=1+D+B && J==A ], cost: 1
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2


Applied chaining over branches and pruning:
  Start location: start0
     54: lbl81 -> lbl81 : B'=-H+D, F'=free_1, H'=1+2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && 0>=1+free_5 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && H+D+B>=1 && A>=2*H-D+B && J==A && A>=1+2*H-D+B && H+D+B>=1 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && J==A ], cost: 2+2*H-2*D+2*B
     55: lbl81 -> lbl81 : B'=-H+D, F'=free_1, H'=1+2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && free_5>=4 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && H+D+B>=1 && A>=2*H-D+B && J==A && A>=1+2*H-D+B && H+D+B>=1 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && J==A ], cost: 2+2*H-2*D+2*B
     56: lbl81 -> lbl81 : B'=-H-D, F'=free_1, H'=1+2*H+D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+3*D+B>=3 && 3*H+D+B>=3 && A>=2*H+D+B && free_5>=4 && 2*H+2*D+B>=1-H-D && H+B>=1+D && 2*H+D+B>=1-H && H+D+B>=1 && A>=2*H+D+B && J==A && A>=1+2*H+D+B && H+D+B>=1 && 2*H+2*D+B>=1-H-D && H+B>=1+D && 2*H+D+B>=1-H && J==A ], cost: 2+2*H+2*D+2*B
     57: lbl81 -> lbl81 : B'=H-D, F'=free_1, H'=1+2*H-D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -2+F==0 && A>=1+H && 3*H-3*D-B>=3 && 3*H-D-B>=3 && A>=2*H-D-B && free_4>=4 && 2*H-B>=1+H-D && 3*H-2*D-B>=1+D && 2*H-D-B>=1+H && 3*H-D-B>=1 && A>=2*H-D-B && J==A && A>=1+2*H-D-B && 3*H-D-B>=1 && 2*H-B>=1+H-D && 3*H-2*D-B>=1+D && 2*H-D-B>=1+H && J==A ], cost: 2+2*H-2*D-2*B
     58: lbl81 -> lbl81 : D'=-H+B, F'=free_1, H'=1+2*H+D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -1+F==0 && A>=1+H && 3*H+D>=3+B && 3*H+D-3*B>=3 && A>=2*H+D-B && free_3>=4 && H+D>=1+B && 2*H+D>=1-H+B && 2*H+D-B>=1-H+2*B && H+D+B>=1 && A>=2*H+D-B && J==A && A>=1+2*H+D-B && H+D+B>=1 && H+D>=1+B && 2*H+D>=1-H+B && 2*H+D-B>=1-H+2*B && J==A ], cost: 2+2*H+2*D-2*B
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2


Try instantiation
  Start location: start0
     59: lbl81 -> lbl81 : D'=-H+B, F'=free_1, H'=1+2*H+D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -1+F==0 && A>=1+H && 3*H+D>=3+B && 3*H+D-3*B>=3 && A>=2*H+D-B && free_3>=4 && H+D>=1+B && 2*H+D>=1-H+B && 2*H+D-B>=1-H+2*B && H+D+B>=1 && A>=2*H+D-B && J==A && A>=1+2*H+D-B && H+D+B>=1 && H+D>=1+B && 2*H+D>=1-H+B && 2*H+D-B>=1-H+2*B && J==A ], cost: 2+2*H+2*D-2*B
     60: lbl81 -> lbl81 : B'=H-D, F'=free_1, H'=1+2*H-D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -2+F==0 && A>=1+H && 3*H-3*D-B>=3 && 3*H-D-B>=3 && A>=2*H-D-B && free_4>=4 && 2*H-B>=1+H-D && 3*H-2*D-B>=1+D && 2*H-D-B>=1+H && 3*H-D-B>=1 && A>=2*H-D-B && J==A && A>=1+2*H-D-B && 3*H-D-B>=1 && 2*H-B>=1+H-D && 3*H-2*D-B>=1+D && 2*H-D-B>=1+H && J==A ], cost: 2+2*H-2*D-2*B
     61: lbl81 -> lbl81 : B'=-H-D, F'=free_1, H'=1+2*H+D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+3*D+B>=3 && 3*H+D+B>=3 && A>=2*H+D+B && free_5>=4 && 2*H+2*D+B>=1-H-D && H+B>=1+D && 2*H+D+B>=1-H && H+D+B>=1 && A>=2*H+D+B && J==A && A>=1+2*H+D+B && H+D+B>=1 && 2*H+2*D+B>=1-H-D && H+B>=1+D && 2*H+D+B>=1-H && J==A ], cost: 2+2*H+2*D+2*B
     62: lbl81 -> lbl81 : B'=-H+D, F'=free_1, H'=1+2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && free_5>=4 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && H+D+B>=1 && A>=2*H-D+B && J==A && A>=1+2*H-D+B && H+D+B>=1 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && J==A ], cost: 2+2*H-2*D+2*B
     63: lbl81 -> lbl81 : B'=-H+D, F'=free_1, H'=1+2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && 0>=1+free_5 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && H+D+B>=1 && A>=2*H-D+B && J==A && A>=1+2*H-D+B && H+D+B>=1 && 2*H+B>=1-H+D && H+B>=1+D && 2*H-D+B>=1-H+2*D && J==A ], cost: 2+2*H-2*D+2*B
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2

Eliminating 5 self-loops for location lbl81
  Removing the self-loops: 59 60 61 62 63.
Adding an epsilon transition (to model nonexecution of the loops): 69.
Removing duplicate transition: 67.

Removed all Self-loops using metering functions (where possible):
  Start location: start0
     64: lbl81 -> [10] : D'=-H+B, F'=free_1, H'=1+2*H+D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -1+F==0 && A>=1+H && 3*H+D>=3+B && 3*H+D-3*B>=3 && A>=2*H+D-B && A>=1+2*H+D-B ], cost: 2+2*H+2*D-2*B
     65: lbl81 -> [10] : B'=H-D, F'=free_1, H'=1+2*H-D-B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -2+F==0 && A>=1+H && 3*H-3*D-B>=3 && 3*H-D-B>=3 && A>=2*H-D-B && A>=1+2*H-D-B ], cost: 2+2*H-2*D-2*B
     66: lbl81 -> [10] : B'=-H-D, F'=free_1, H'=1+2*H+D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+3*D+B>=3 && 3*H+D+B>=3 && A>=2*H+D+B && A>=1+2*H+D+B ], cost: 2+2*H+2*D+2*B
     68: lbl81 -> [10] : B'=-H+D, F'=free_1, H'=1+2*H-D+B, [ A-J==0 && H+D>=1+B && H+B>=1+D && H>=1+D+B && H+D+B>=1 && -3+F==0 && A>=1+H && 3*H+B>=3+D && 3*H-3*D+B>=3 && A>=2*H-D+B && A>=1+2*H-D+B ], cost: 2+2*H-2*D+2*B
     69: lbl81 -> [10] : [], cost: 0
     18: start0 -> lbl81 : B'=0, D'=0, F'=free, H'=1, J'=A, [ A>=1 && C==C && E==E && G==G && Q==Q && A==A ], cost: 2


Applied chaining over branches and pruning:
  Start location: start0
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start0
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
