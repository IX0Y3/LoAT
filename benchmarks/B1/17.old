Trying to load file: 17.koat

Initial Control flow graph problem:
  Start location: start
      0: eval -> eval : A'=-1+A, [ B+A>=1 && A>=1+B ], cost: 1
      1: eval -> eval : A'=-1+A, [ 2*A>=1 && B==A ], cost: 1
      2: eval -> eval : B'=-1+B, [ B+A>=1 && B>=A && B>=1+A ], cost: 1
      3: eval -> eval : B'=-1+B, [ B+A>=1 && B>=A && A>=1+B ], cost: 1
      4: start -> eval : [], cost: 1


Simplified the transitions:
  Start location: start
      0: eval -> eval : A'=-1+A, [ B+A>=1 && A>=1+B ], cost: 1
      1: eval -> eval : A'=-1+A, [ 2*A>=1 && B==A ], cost: 1
      2: eval -> eval : B'=-1+B, [ B+A>=1 && B>=1+A ], cost: 1
      3: eval -> eval : B'=-1+B, [ B+A>=1 && B>=A && A>=1+B ], cost: 1
      4: start -> eval : [], cost: 1

Eliminating 4 self-loops for location eval
  Self-Loop 3 has unbounded runtime, resulting in the new transition 8.
  Removing the self-loops: 0 1 2 3.

Accelerated all simple loops using metering functions (where possible):
  Start location: start
      5: eval -> eval : A'=-1+A, [ B+A>=1 && A>=1+B ], cost: 1
      6: eval -> eval : A'=-1+A, [ 2*A>=1 && B==A ], cost: 1
      7: eval -> eval : B'=-1+B, [ B+A>=1 && B>=1+A ], cost: 1
      8: eval -> eval : [ B+A>=1 && B>=A && A>=1+B ], cost: INF
      4: start -> eval : [], cost: 1


Chained simpled loops:
  Start location: start
      4: start -> eval : [], cost: 1
      9: start -> eval : A'=-1+A, [ B+A>=1 && A>=1+B ], cost: 2
     10: start -> eval : A'=-1+A, [ 2*A>=1 && B==A ], cost: 2
     11: start -> eval : B'=-1+B, [ B+A>=1 && B>=1+A ], cost: 2


Pruned:
  Start location: start
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
