Trying to load file: mspe.koat

Initial Control flow graph problem:
  Start location: start
      0: start -> m1 : [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A ], cost: 1
      1: m1 -> m1 : C'=free, F'=free_1, [ B>=1 && D>=0 && A>=1+E && 1+B>=free_1 && 1+C>=free && free>=1+C && 1+F>=free_1 && free_1>=1+F ], cost: 1
      2: m1 -> m1 : A'=free_2, F'=free_3, [ B>=1 && D>=0 && B>=F && 1+E>=free_2 && C>=1+B && 1+F>=free_3 && free_3>=1+F && 1+A>=free_2 && free_2>=1+A ], cost: 1
      3: m1 -> m1 : C'=free_4, F'=free_5, [ B>=1 && D>=0 && B>=F && 1+B>=free_4 && E>=A && 1+F>=free_5 && free_5>=1+F && 1+C>=free_4 && free_4>=1+C ], cost: 1
      4: m1 -> m1 : A'=free_6, F'=free_7, [ B>=1 && D>=0 && B>=F && B>=C && 1+E>=free_6 && 1+A>=free_6 && free_6>=1+A && 1+F>=free_7 && free_7>=1+F ], cost: 1


Simplified the transitions:
  Start location: start
      0: start -> m1 : [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A ], cost: 1
      1: m1 -> m1 : C'=1+C, F'=1+F, [ B>=1 && D>=0 && A>=1+E && 1+B>=1+F ], cost: 1
      2: m1 -> m1 : A'=1+A, F'=1+F, [ B>=1 && D>=0 && B>=F && 1+E>=1+A && C>=1+B ], cost: 1
      3: m1 -> m1 : C'=1+C, F'=1+F, [ B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A ], cost: 1
      4: m1 -> m1 : A'=1+A, F'=1+F, [ B>=1 && D>=0 && B>=F && B>=C && 1+E>=1+A ], cost: 1

Eliminating 4 self-loops for location m1
  Self-Loop 1 has the metering function: 1+B-F, resulting in the new transition 5.
  Self-Loop 9 has the metering function: 1+B-C, resulting in the new transition 15.
  Self-Loop 10 has the metering function: 1+B-F, resulting in the new transition 16.
  Removing the self-loops: 1 2 3 4 6 7 9 10 12 13.

Accelerated all simple loops using metering functions (where possible):
  Start location: start
      0: start -> m1 : [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A ], cost: 1
      5: m1 -> m1 : C'=1+B+C-F, F'=1+B, [ B>=1 && D>=0 && A>=1+E && 1+B>=1+F ], cost: 1+B-F
      8: m1 -> m1 : A'=1+A, F'=1+F, [ B>=1 && D>=0 && B>=F && 1+E>=1+A && C>=1+B ], cost: 1
     11: m1 -> m1 : C'=1+C, F'=1+F, [ B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A ], cost: 1
     14: m1 -> m1 : A'=1+A, F'=1+F, [ B>=1 && D>=0 && B>=F && B>=C && 1+E>=1+A ], cost: 1
     15: m1 -> m1 : C'=1+B, F'=1+B-C+F, [ B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A && C>F ], cost: 1+B-C
     16: m1 -> m1 : C'=1+B+C-F, F'=1+B, [ B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A && F>C ], cost: 1+B-F


Chained simpled loops:
  Start location: start
      0: start -> m1 : [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A ], cost: 1
     17: start -> m1 : C'=1+C, F'=1+F, [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A && B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A ], cost: 2
     18: start -> m1 : A'=1+A, F'=1+F, [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A && B>=1 && D>=0 && B>=F && B>=C && 1+E>=1+A ], cost: 2
     19: start -> m1 : C'=1+B, F'=1+B-C+F, [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A && B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A && C>F ], cost: 2+B-C


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: start
     19: start -> m1 : C'=1+B, F'=1+B-C+F, [ A>=0 && 2+B+A>=2*C && B>=1+A && 2*C>=B+A && D>=0 && 1+E==C && F==A && B>=1 && D>=0 && B>=F && 1+B>=1+C && E>=A && C>F ], cost: 2+B-C


Computing complexity for remaining 1 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
