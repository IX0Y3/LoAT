Trying to load file: c.04.koat

Initial Control flow graph problem:
  Start location: eval0
      0: eval0 -> eval1 : [ A>=1 ], cost: 1
      1: eval1 -> eval1 : B'=B+A, [ A>=1+B && C>=1+A && A>=1 ], cost: 1
      2: eval1 -> eval1 : C'=B-A, [ A>=1+B && C>=1+A && A>=1 ], cost: 1


Try instantiation
  Start location: eval0
      0: eval0 -> eval1 : [ A>=1 ], cost: 1
      3: eval1 -> eval1 : B'=1, [ 0>=B && C>=2 && A<=1 && A>=1 ], cost: 1-B

Eliminating 1 self-loops for location eval1
  Removing the self-loops: 3.
Adding an epsilon transition (to model nonexecution of the loops): 5.

Removed all Self-loops using metering functions (where possible):
  Start location: eval0
      0: eval0 -> eval1 : [ A>=1 ], cost: 1
      4: eval1 -> [2] : B'=1, [ 0>=B && C>=2 && -1+A==0 ], cost: 1-B
      5: eval1 -> [2] : [], cost: 0


Applied chaining over branches and pruning:
  Start location: eval0
      6: eval0 -> [2] : B'=1, [ A>=1 && 0>=B && C>=2 && -1+A==0 ], cost: 2-B


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: eval0
      6: eval0 -> [2] : B'=1, [ A>=1 && 0>=B && C>=2 && -1+A==0 ], cost: 2-B


Computing complexity for remaining 1 transitions.

  Found configuration with infinitely models for cost: 2-B
  and guard: A>=1 && 0>=B && C>=2 && -1+A==0:
  B: Neg, A: Both, C: Pos

Found new complexity n^1, because: Found infinity configuration.


The final runtime is determined by this resulting transition:
  Final Guard: A>=1 && 0>=B && C>=2 && -1+A==0
  Final Cost:  2-B

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: n^1
  Complexity value: 1

WORST_CASE(Omega(n^1),?)
