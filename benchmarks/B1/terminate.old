Trying to load file: terminate.koat

Initial Control flow graph problem:
  Start location: evalterminatestart
      0: evalterminatestart -> evalterminateentryin : [], cost: 1
      1: evalterminateentryin -> evalterminatebb1in : A'=B, B'=A, [], cost: 1
      2: evalterminatebb1in -> evalterminatebbin : [ 100>=B && A>=C ], cost: 1
      3: evalterminatebb1in -> evalterminatereturnin : [ B>=101 ], cost: 1
      4: evalterminatebb1in -> evalterminatereturnin : [ C>=1+A ], cost: 1
      5: evalterminatebbin -> evalterminatebb1in : A'=-1+A, B'=C, C'=1+B, [], cost: 1
      6: evalterminatereturnin -> evalterminatestop : [], cost: 1


Simplified the transitions:
  Start location: evalterminatestart
      0: evalterminatestart -> evalterminateentryin : [], cost: 1
      1: evalterminateentryin -> evalterminatebb1in : A'=B, B'=A, [], cost: 1
      2: evalterminatebb1in -> evalterminatebbin : [ 100>=B && A>=C ], cost: 1
      5: evalterminatebbin -> evalterminatebb1in : A'=-1+A, B'=C, C'=1+B, [], cost: 1


Eliminated locations (linear):
  Start location: evalterminatestart
      0: evalterminatestart -> evalterminatebb1in : A'=B, B'=A, [], cost: 2
      2: evalterminatebb1in -> evalterminatebb1in : A'=-1+A, B'=C, C'=1+B, [ 100>=B && A>=C ], cost: 2

Eliminating 1 self-loops for location evalterminatebb1in
  Removing the self-loops: 2.

Accelerated all simple loops using metering functions (where possible):
  Start location: evalterminatestart
      0: evalterminatestart -> evalterminatebb1in : A'=B, B'=A, [], cost: 2
      7: evalterminatebb1in -> evalterminatebb1in : A'=-1+A, B'=C, C'=1+B, [ 100>=B && A>=C ], cost: 2


Chained simpled loops:
  Start location: evalterminatestart
      0: evalterminatestart -> evalterminatebb1in : A'=B, B'=A, [], cost: 2
      8: evalterminatestart -> evalterminatebb1in : A'=-1+B, B'=C, C'=1+A, [ 100>=A && B>=C ], cost: 4


Pruned:
  Start location: evalterminatestart
    <empty>


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: evalterminatestart
    <empty>


Computing complexity for remaining 0 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
