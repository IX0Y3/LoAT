Trying to load file: sipma91.koat

Initial Control flow graph problem:
  Start location: evalsipma91start
      0: evalsipma91start -> evalsipma91entryin : [], cost: 1
      1: evalsipma91entryin -> evalsipma91returnin : [ A>=101 ], cost: 1
      2: evalsipma91entryin -> evalsipma91bb3in : A'=1, B'=A, [ 100>=A ], cost: 1
     16: evalsipma91returnin -> evalsipma91stop : [], cost: 1
      3: evalsipma91bb3in -> evalsipma91bb2in : [ 100>=B ], cost: 1
      4: evalsipma91bb3in -> evalsipma91bb11in : [ B>=101 ], cost: 1
      5: evalsipma91bb2in -> evalsipma91bb3in : A'=1+A, B'=11+B, [], cost: 1
      7: evalsipma91bb11in -> evalsipma91returnin : [ 1>=A ], cost: 1
      6: evalsipma91bb11in -> evalsipma91bb5in : [ A>=2 ], cost: 1
     11: evalsipma91bb5in -> evalsipma91bb11in : A'=-1+A, B'=-10+B, [ B>=111 && A==2 ], cost: 1
      8: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 110>=B ], cost: 1
      9: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 1>=A ], cost: 1
     10: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=3 ], cost: 1
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1


Simplified the transitions:
  Start location: evalsipma91start
      0: evalsipma91start -> evalsipma91entryin : [], cost: 1
      2: evalsipma91entryin -> evalsipma91bb3in : A'=1, B'=A, [ 100>=A ], cost: 1
      3: evalsipma91bb3in -> evalsipma91bb2in : [ 100>=B ], cost: 1
      4: evalsipma91bb3in -> evalsipma91bb11in : [ B>=101 ], cost: 1
      5: evalsipma91bb2in -> evalsipma91bb3in : A'=1+A, B'=11+B, [], cost: 1
      6: evalsipma91bb11in -> evalsipma91bb5in : [ A>=2 ], cost: 1
     11: evalsipma91bb5in -> evalsipma91bb11in : A'=-1+A, B'=-10+B, [ B>=111 && A==2 ], cost: 1
      8: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 110>=B ], cost: 1
      9: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 1>=A ], cost: 1
     10: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=3 ], cost: 1
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1


Applied simple chaining:
  Start location: evalsipma91start
      0: evalsipma91start -> evalsipma91bb3in : A'=1, B'=A, [ 100>=A ], cost: 2
      3: evalsipma91bb3in -> evalsipma91bb3in : A'=1+A, B'=11+B, [ 100>=B ], cost: 2
      4: evalsipma91bb3in -> evalsipma91bb11in : [ B>=101 ], cost: 1
      6: evalsipma91bb11in -> evalsipma91bb5in : [ A>=2 ], cost: 1
     11: evalsipma91bb5in -> evalsipma91bb11in : A'=-1+A, B'=-10+B, [ B>=111 && A==2 ], cost: 1
      8: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 110>=B ], cost: 1
      9: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 1>=A ], cost: 1
     10: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=3 ], cost: 1
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1


Try instantiation
  Start location: evalsipma91start
      0: evalsipma91start -> evalsipma91bb3in : A'=1, B'=A, [ 100>=A ], cost: 2
     17: evalsipma91bb3in -> evalsipma91bb3in : A'=meter+A, B'=B+11*meter, [ 11*meter==111-B && 100>=B ], cost: 2*meter
      4: evalsipma91bb3in -> evalsipma91bb11in : [ B>=101 ], cost: 1
      6: evalsipma91bb11in -> evalsipma91bb5in : [ A>=2 ], cost: 1
     11: evalsipma91bb5in -> evalsipma91bb11in : A'=-1+A, B'=-10+B, [ B>=111 && A==2 ], cost: 1
      8: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 110>=B ], cost: 1
      9: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 1>=A ], cost: 1
     10: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=3 ], cost: 1
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1

Eliminating 1 self-loops for location evalsipma91bb3in
  Removing the self-loops: 17.
Adding an epsilon transition (to model nonexecution of the loops): 19.

Removed all Self-loops using metering functions (where possible):
  Start location: evalsipma91start
      0: evalsipma91start -> evalsipma91bb3in : A'=1, B'=A, [ 100>=A ], cost: 2
     18: evalsipma91bb3in -> [9] : A'=meter+A, B'=B+11*meter, [ 11*meter==111-B && 100>=B ], cost: 2*meter
     19: evalsipma91bb3in -> [9] : [], cost: 0
      6: evalsipma91bb11in -> evalsipma91bb5in : [ A>=2 ], cost: 1
     11: evalsipma91bb5in -> evalsipma91bb11in : A'=-1+A, B'=-10+B, [ B>=111 && A==2 ], cost: 1
      8: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 110>=B ], cost: 1
      9: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ 1>=A ], cost: 1
     10: evalsipma91bb5in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=3 ], cost: 1
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1
      4: [9] -> evalsipma91bb11in : [ B>=101 ], cost: 1


Applied chaining over branches and pruning:
  Start location: evalsipma91start
     20: evalsipma91start -> [9] : A'=1+meter, B'=11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A ], cost: 2+2*meter
     21: evalsipma91start -> [9] : A'=1, B'=A, [ 100>=A ], cost: 2
     22: evalsipma91bb11in -> evalsipma91bb11in : A'=-1+A, B'=-10+B, [ A>=2 && B>=111 && A==2 ], cost: 2
     23: evalsipma91bb11in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=2 && 110>=B ], cost: 2
     24: evalsipma91bb11in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=2 && A>=3 ], cost: 2
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1
      4: [9] -> evalsipma91bb11in : [ B>=101 ], cost: 1


Try instantiation
  Start location: evalsipma91start
     20: evalsipma91start -> [9] : A'=1+meter, B'=11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A ], cost: 2+2*meter
     21: evalsipma91start -> [9] : A'=1, B'=A, [ 100>=A ], cost: 2
     25: evalsipma91bb11in -> evalsipma91bb11in : A'=A-meter_1, B'=B-10*meter_1, [ 10*meter_1==-101+B && A<=2 && A>=2 && A-meter_1<=1 && A-meter_1>=1 ], cost: 2*meter_1
     26: evalsipma91bb11in -> evalsipma91bb11in : A'=1, B'=10+B-10*A, [ A<=2 && A>=2 && B-10*A>=91 ], cost: -2+2*A
     23: evalsipma91bb11in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=2 && 110>=B ], cost: 2
     24: evalsipma91bb11in -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=2 && A>=3 ], cost: 2
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1
      4: [9] -> evalsipma91bb11in : [ B>=101 ], cost: 1

Eliminating 2 self-loops for location evalsipma91bb11in
  Self-Loop 25 has the metering function: meter_2, resulting in the new transition 27.
  Self-Loop 26 has the metering function: -1+A, resulting in the new transition 28.
  Removing the self-loops: 25 26.

Removed all Self-loops using metering functions (where possible):
  Start location: evalsipma91start
     20: evalsipma91start -> [9] : A'=1+meter, B'=11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A ], cost: 2+2*meter
     21: evalsipma91start -> [9] : A'=1, B'=A, [ 100>=A ], cost: 2
     27: evalsipma91bb11in -> [10] : A'=-meter_2*meter_1+A, B'=-10*meter_2*meter_1+B, [ 10*meter_1==-101+B && -2+A==0 && -1+A-meter_1==0 && 11*meter_2==-103+B+A-10*meter_1 ], cost: 2*meter_2*meter_1
     28: evalsipma91bb11in -> [10] : A'=1, B'=B, [ -2+A==0 && B-10*A>=91 ], cost: 0
     12: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=1+C, [ C>=101 ], cost: 1
     13: evalsipma91bb8in -> evalsipma91bb11in : A'=D, B'=11+C, [ C>=101 && 100>=C ], cost: 1
     14: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=1+C, [ 100>=C && C>=101 ], cost: 1
     15: evalsipma91bb8in -> evalsipma91bb11in : A'=1+D, B'=11+C, [ 100>=C ], cost: 1
      4: [9] -> evalsipma91bb11in : [ B>=101 ], cost: 1
     23: [10] -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=2 && 110>=B ], cost: 2
     24: [10] -> evalsipma91bb8in : C'=-10+B, D'=-1+A, [ A>=2 && A>=3 ], cost: 2


Applied chaining over branches and pruning:
  Start location: evalsipma91start
     29: evalsipma91start -> evalsipma91bb11in : A'=1+meter, B'=11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A && 11*meter+A>=101 ], cost: 3+2*meter
     30: evalsipma91bb11in -> [11] : A'=-meter_2*meter_1+A, B'=-10*meter_2*meter_1+B, [ 10*meter_1==-101+B && -2+A==0 && -1+A-meter_1==0 && 11*meter_2==-103+B+A-10*meter_1 ], cost: 2*meter_2*meter_1
     31: evalsipma91bb11in -> [12] : A'=-meter_2*meter_1+A, B'=-10*meter_2*meter_1+B, [ 10*meter_1==-101+B && -2+A==0 && -1+A-meter_1==0 && 11*meter_2==-103+B+A-10*meter_1 ], cost: 2*meter_2*meter_1


Applied chaining over branches and pruning:
  Start location: evalsipma91start
     32: evalsipma91start -> [11] : A'=1-meter_2*meter_1+meter, B'=-10*meter_2*meter_1+11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A && 11*meter+A>=101 && 10*meter_1==-101+11*meter+A && -1+meter==0 && meter-meter_1==0 && 11*meter_2==-102+12*meter+A-10*meter_1 ], cost: 3+2*meter_2*meter_1+2*meter
     33: evalsipma91start -> [12] : A'=1-meter_2*meter_1+meter, B'=-10*meter_2*meter_1+11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A && 11*meter+A>=101 && 10*meter_1==-101+11*meter+A && -1+meter==0 && meter-meter_1==0 && 11*meter_2==-102+12*meter+A-10*meter_1 ], cost: 3+2*meter_2*meter_1+2*meter


Final control flow graph problem, now checking costs for infinitely many models:
  Start location: evalsipma91start
     32: evalsipma91start -> [11] : A'=1-meter_2*meter_1+meter, B'=-10*meter_2*meter_1+11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A && 11*meter+A>=101 && 10*meter_1==-101+11*meter+A && -1+meter==0 && meter-meter_1==0 && 11*meter_2==-102+12*meter+A-10*meter_1 ], cost: 3+2*meter_2*meter_1+2*meter
     33: evalsipma91start -> [12] : A'=1-meter_2*meter_1+meter, B'=-10*meter_2*meter_1+11*meter+A, [ 100>=A && 11*meter==111-A && 100>=A && 11*meter+A>=101 && 10*meter_1==-101+11*meter+A && -1+meter==0 && meter-meter_1==0 && 11*meter_2==-102+12*meter+A-10*meter_1 ], cost: 3+2*meter_2*meter_1+2*meter


Computing complexity for remaining 2 transitions.


The final runtime is determined by this resulting transition:
  Final Guard: 
  Final Cost:  1

Obtained the following complexity w.r.t. the length of the input n:
  Complexity class: const
  Complexity value: 0

WORST_CASE(Omega(1),?)
