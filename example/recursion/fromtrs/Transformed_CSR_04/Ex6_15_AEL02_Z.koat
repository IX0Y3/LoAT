(GOAL COMPLEXITY)
(VAR X X1 X2 Y Z x x_0 x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8 x_9 x_10 x_11 x_12 x_13 x_14 x_15 x_16 x_17 x_18 x_19 x_20 x_21 x_22 x_23 x_24 x_25 x_26 x_27 x_28 x_29)
(RULES
sel((x), (x_0)) -> sel((X), activate((Z))) :|: Y>=0 && X>=0 && Z>=0 && x==1+X && x>0 && x_0==1+Y+Z && x_0>0
sel((x_1), (x_2)) -> X :|: X>=0 && Z>=0 && x_1==0 && x_2==1+X+Z && x_2>0
first((x_3), (Z)) -> nil :|: Z>=0 && x_3==0
first((x_4), (x_5)) -> (1+Y) + ((1+X) + activate((Z))) :|: Y>=0 && X>=0 && Z>=0 && x_4==1+X && x_4>0 && x_5==1+Y+Z && x_5>0
from((X)) -> 3+2*X :|: X>=0
sel1((x_6), (x_7)) -> sel1((X), activate((Z))) :|: Y>=0 && X>=0 && Z>=0 && x_6==1+X && x_6>0 && x_7==1+Y+Z && x_7>0
sel1((x_8), (x_9)) -> quote((X)) :|: X>=0 && Z>=0 && x_8==0 && x_9==1+X+Z && x_9>0
first1((x_10), (Z)) -> 1 :|: Z>=0 && x_10==0
first1((x_11), (x_12)) -> ((1) + quote((Y))) + first1((X), activate((Z))) :|: Y>=0 && X>=0 && Z>=0 && x_11==1+X && x_11>0 && x_12==1+Y+Z && x_12>0
quote((x_13)) -> 1 :|: x_13==1
quote1((x_14)) -> ((1) + quote(activate((X)))) + quote1(activate((Z))) :|: X>=0 && Z>=0 && x_14==1+X+Z && x_14>0
quote1((x_15)) -> 1 :|: x_15==1
quote((x_16)) -> (1) + quote(activate((X))) :|: X>=0 && x_16==1+X && x_16>0
quote((x_17)) -> sel1(activate((X)), activate((Z))) :|: X>=0 && Z>=0 && x_17==1+X+Z && x_17>0
quote1((x_18)) -> first1(activate((X)), activate((Z))) :|: X>=0 && Z>=0 && x_18==1+X+Z && x_18>0
unquote((x_19)) -> 0 :|: x_19==1
unquote((x_20)) -> (1) + unquote((X)) :|: X>=0 && x_20==1+X && x_20>0
unquote1((x_21)) -> nil :|: x_21==1
unquote1((x_22)) -> fcons(unquote((X)), unquote1((Z))) :|: X>=0 && Z>=0 && x_22==1+X+Z && x_22>0
fcons((X), (Z)) -> 1+X+Z :|: X>=0 && Z>=0
first((X1), (X2)) -> 1+X1+X2 :|: X1>=0 && X2>=0
from((X)) -> 1+X :|: X>=0
nil -> 1
sel((X1), (X2)) -> 1+X1+X2 :|: X1>=0 && X2>=0
activate((x_23)) -> first((X1), (X2)) :|: X1>=0 && X2>=0 && x_23==1+X1+X2 && x_23>0
activate((x_24)) -> from((X)) :|: X>=0 && x_24==1+X && x_24>0
activate((x_25)) -> 0 :|: x_25==1
activate((x_26)) -> 1+X1+X2 :|: X1>=0 && X2>=0 && x_26==1+X1+X2 && x_26>0
activate((x_27)) -> nil :|: x_27==1
activate((x_28)) -> 1+X :|: X>=0 && x_28==1+X && x_28>0
activate((x_29)) -> sel((X1), (X2)) :|: X1>=0 && X2>=0 && x_29==1+X1+X2 && x_29>0
activate((X)) -> X :|: X>=0
)
