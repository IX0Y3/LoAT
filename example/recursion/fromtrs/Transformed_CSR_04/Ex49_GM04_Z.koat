(GOAL COMPLEXITY)
(VAR X Y x x_0 x_1 x_2 x_3 x_4 x_5 x_6 x_7 x_8 x_9 x_10 x_11 x_12 x_13 x_14)
(RULES
minus((x), (Y)) -> 0 :|: Y>=0 && x==1
minus((x_0), (x_1)) -> minus(activate((X)), activate((Y))) :|: X>=0 && Y>=0 && x_0==1+X && x_0>0 && x_1==1+Y && x_1>0
geq((X), (x_2)) -> 1 :|: X>=0 && x_2==1
geq((x_3), (x_4)) -> 0 :|: Y>=0 && x_3==1 && x_4==1+Y && x_4>0
geq((x_5), (x_6)) -> geq(activate((X)), activate((Y))) :|: X>=0 && Y>=0 && x_5==1+X && x_5>0 && x_6==1+Y && x_6>0
div((x_7), (x_8)) -> 0 :|: Y>=0 && x_7==0 && x_8==1+Y && x_8>0
div((x_9), (x_10)) -> if(geq((X), activate((Y))), ((1) + div(minus((X), activate((Y))), ((1) + activate((Y))))), (1)) :|: X>=0 && Y>=0 && x_9==1+X && x_9>0 && x_10==1+Y && x_10>0
if((x_11), (X), (Y)) -> activate((X)) :|: X>=0 && Y>=0 && x_11==1
if((x_12), (X), (Y)) -> activate((Y)) :|: X>=0 && Y>=0 && x_12==0
activate((x_13)) -> 0 :|: x_13==1
activate((x_14)) -> 1+X :|: X>=0 && x_14==1+X && x_14>0
activate((X)) -> X :|: X>=0
)
